{
    "ACCEPT_HANDOVER":[
    ],
    "ACCESS_COARSE_LOCATION":[
        "android.R.attr.usesPermissionFlags",
        "android.app.admin.DevicePolicyManager.setPermissionGrantState",
        "android.bluetooth.le.BluetoothLeScanner.startScan",
        "android.location.LocationManager.addProximityAlert",
        "android.location.LocationManager.getCurrentLocation",
        "android.location.LocationManager.getLastKnownLocation",
        "android.location.LocationManager.removeProximityAlert",
        "android.location.LocationManager.removeUpdates",
        "android.location.LocationManager.requestLocationUpdates",
        "android.location.LocationManager.requestSingleUpdate",
        "android.telephony.CellLocation.requestLocationUpdate",
        "android.telephony.PhoneStateListener.onServiceStateChanged",
        "android.telephony.ServiceState.getCdmaNetworkId",
        "android.telephony.ServiceState.getCdmaSystemId",
        "android.telephony.ServiceState.getOperatorAlphaLong",
        "android.telephony.ServiceState.getOperatorAlphaShort",
        "android.telephony.ServiceState.getOperatorNumeric",
        "android.telephony.TelephonyCallback.ServiceStateListener.onServiceStateChanged",
        "android.telephony.TelephonyManager.getServiceState",
        "android.webkit.WebSettings.setGeolocationEnabled"
    ],
    "ACCESS_FINE_LOCATION":[
        "android.R.attr.usesPermissionFlags",
        "android.app.admin.DevicePolicyManager.setPermissionGrantState",
        "android.bluetooth.BluetoothAdapter.startDiscovery",
        "android.bluetooth.BluetoothAdapter.startLeScan",
        "android.bluetooth.le.BluetoothLeScanner.startScan",
        "android.location.LocationManager.addGpsStatusListener",
        "android.location.LocationManager.addNmeaListener",
        "android.location.LocationManager.addProximityAlert",
        "android.location.LocationManager.getCurrentLocation",
        "android.location.LocationManager.getGpsStatus",
        "android.location.LocationManager.getLastKnownLocation",
        "android.location.LocationManager.registerAntennaInfoListener",
        "android.location.LocationManager.registerGnssMeasurementsCallback",
        "android.location.LocationManager.registerGnssNavigationMessageCallback",
        "android.location.LocationManager.registerGnssStatusCallback",
        "android.location.LocationManager.removeProximityAlert",
        "android.location.LocationManager.removeUpdates",
        "android.location.LocationManager.requestLocationUpdates",
        "android.location.LocationManager.requestSingleUpdate",
        "android.net.NetworkCapabilities.getOwnerUid",
        "android.net.wifi.WifiInfo.getMacAddress",
        "android.net.wifi.WifiManager.addNetworkSuggestions",
        "android.net.wifi.WifiManager.addSuggestionConnectionStatusListener",
        "android.net.wifi.WifiManager.getConfiguredNetworks",
        "android.net.wifi.WifiManager.getScanResults",
        "android.net.wifi.WifiManager.registerScanResultsCallback",
        "android.net.wifi.WifiManager.startLocalOnlyHotspot",
        "android.net.wifi.aware.IdentityChangedListener.onIdentityChanged",
        "android.net.wifi.aware.WifiAwareManager.attach",
        "android.net.wifi.aware.WifiAwareSession.publish",
        "android.net.wifi.aware.WifiAwareSession.subscribe",
        "android.net.wifi.p2p.WifiP2pManager.addLocalService",
        "android.net.wifi.p2p.WifiP2pManager.connect",
        "android.net.wifi.p2p.WifiP2pManager.createGroup",
        "android.net.wifi.p2p.WifiP2pManager.discoverPeers",
        "android.net.wifi.p2p.WifiP2pManager.discoverServices",
        "android.net.wifi.p2p.WifiP2pManager.requestDeviceInfo",
        "android.net.wifi.p2p.WifiP2pManager.requestGroupInfo",
        "android.net.wifi.p2p.WifiP2pManager.requestPeers",
        "android.net.wifi.rtt.WifiRttManager.startRanging",
        "android.telephony.CellLocation.requestLocationUpdate",
        "android.telephony.NetworkRegistrationInfo.getCellIdentity",
        "android.telephony.PhoneStateListener.onBarringInfoChanged",
        "android.telephony.PhoneStateListener.onCellInfoChanged",
        "android.telephony.PhoneStateListener.onCellLocationChanged",
        "android.telephony.PhoneStateListener.onRegistrationFailed",
        "android.telephony.PhoneStateListener.onServiceStateChanged",
        "android.telephony.ServiceState.getCdmaNetworkId",
        "android.telephony.ServiceState.getCdmaSystemId",
        "android.telephony.ServiceState.getOperatorAlphaLong",
        "android.telephony.ServiceState.getOperatorAlphaShort",
        "android.telephony.ServiceState.getOperatorNumeric",
        "android.telephony.TelephonyCallback.BarringInfoListener.onBarringInfoChanged",
        "android.telephony.TelephonyCallback.CellInfoListener.onCellInfoChanged",
        "android.telephony.TelephonyCallback.CellLocationListener.onCellLocationChanged",
        "android.telephony.TelephonyCallback.RegistrationFailedListener.onRegistrationFailed",
        "android.telephony.TelephonyCallback.ServiceStateListener.onServiceStateChanged",
        "android.telephony.TelephonyManager.getAllCellInfo",
        "android.telephony.TelephonyManager.getCellLocation",
        "android.telephony.TelephonyManager.requestCellInfoUpdate",
        "android.telephony.TelephonyManager.requestNetworkScan",
        "android.webkit.WebSettings.setGeolocationEnabled"
    ],
    "ADD_VOICEMAIL":[
    ],
    "ANSWER_PHONE_CALLS":[
        "android.telecom.TelecomManager.acceptRingingCall",
        "android.telecom.TelecomManager.endCall"
    ],
    "BODY_SENSORS":[
        "android.app.admin.DevicePolicyManager.setPermissionGrantState"
    ],
    "CALL_PHONE":[
        "android.telecom.TelecomManager.placeCall",
        "android.telecom.TelecomManager.startConference",
        "android.telephony.TelephonyManager.sendUssdRequest"
    ],
    "CAMERA":[
        "android.app.admin.DevicePolicyManager.setPermissionGrantState",
        "android.hardware.camera2.CameraCharacteristics.getKeysNeedingPermission",
        "android.hardware.camera2.CameraManager.getCameraCharacteristics",
        "android.hardware.camera2.CameraManager.isConcurrentSessionConfigurationSupported",
        "android.hardware.camera2.CameraManager.openCamera",
        "android.hardware.usb.UsbManager.hasPermission",
        "android.hardware.usb.UsbManager.requestPermission"
    ],
    "GET_ACCOUNTS":[
        "android.accounts.AccountManager.addOnAccountsUpdatedListener",
        "android.accounts.AccountManager.getAccounts",
        "android.accounts.AccountManager.getAccountsByType",
        "android.accounts.AccountManager.getAccountsByTypeAndFeatures",
        "android.accounts.AccountManager.hasFeatures",
        "android.os.UserManager.getUserName"
    ],
    "PROCESS_OUTGOING_CALLS":[
    ],
    "READ_CALENDAR":[
    ],
    "READ_CALL_LOG":[
        "android.telephony.PhoneStateListener.onCallStateChanged"
    ],
    "READ_CONTACTS":[
        "android.telecom.Call.Details.getContactDisplayName",
        "android.telecom.CallScreeningService.onScreenCall"
    ],
    "READ_EXTERNAL_STORAGE":[
        "android.app.WallpaperManager.getDrawable",
        "android.app.WallpaperManager.getFastDrawable",
        "android.app.WallpaperManager.getWallpaperFile",
        "android.app.WallpaperManager.peekFastDrawable",
        "android.content.Context.getExternalCacheDir",
        "android.content.Context.getExternalFilesDir",
        "android.content.Context.getObbDir",
        "android.content.ContextWrapper.getExternalCacheDir",
        "android.content.ContextWrapper.getExternalFilesDir",
        "android.content.ContextWrapper.getObbDir",
        "android.media.RingtoneManager.getCursor",
        "android.media.RingtoneManager.getValidRingtoneUri",
        "android.os.Environment.getExternalStorageDirectory",
        "android.os.StrictMode.VmPolicy.Builder.detectFileUriExposure",
        "android.os.storage.StorageVolume.createAccessIntent",
        "android.test.mock.MockContext.getExternalCacheDir",
        "android.test.mock.MockContext.getExternalFilesDir",
        "android.test.mock.MockContext.getObbDir"
    ],
    "READ_PHONE_NUMBERS":[
        "android.telecom.TelecomManager.getLine1Number",
        "android.telecom.TelecomManager.getPhoneAccount",
        "android.telephony.SubscriptionInfo.getNumber",
        "android.telephony.TelephonyManager.getLine1Number"
    ],
    "READ_PHONE_STATE":[
        "android.os.Build.getSerial",
        "android.telecom.TelecomManager.getCallCapablePhoneAccounts",
        "android.telecom.TelecomManager.getDefaultOutgoingPhoneAccount",
        "android.telecom.TelecomManager.getLine1Number",
        "android.telecom.TelecomManager.getSelfManagedPhoneAccounts",
        "android.telecom.TelecomManager.getUserSelectedOutgoingPhoneAccount",
        "android.telecom.TelecomManager.getVoiceMailNumber",
        "android.telecom.TelecomManager.isInCall",
        "android.telecom.TelecomManager.isInManagedCall",
        "android.telecom.TelecomManager.isTtySupported",
        "android.telecom.TelecomManager.isVoiceMailNumber",
        "android.telecom.TelecomManager.showInCallScreen",
        "android.telephony.CarrierConfigManager.getConfig",
        "android.telephony.CarrierConfigManager.getConfigByComponentForSubId",
        "android.telephony.CarrierConfigManager.getConfigForSubId",
        "android.telephony.PhoneStateListener.onActiveDataSubscriptionIdChanged",
        "android.telephony.PhoneStateListener.onCallForwardingIndicatorChanged",
        "android.telephony.PhoneStateListener.onCallStateChanged",
        "android.telephony.PhoneStateListener.onCellInfoChanged",
        "android.telephony.PhoneStateListener.onDisplayInfoChanged",
        "android.telephony.PhoneStateListener.onEmergencyNumberListChanged",
        "android.telephony.PhoneStateListener.onMessageWaitingIndicatorChanged",
        "android.telephony.SmsManager.getSmsCapacityOnIcc",
        "android.telephony.SubscriptionInfo.getIccId",
        "android.telephony.SubscriptionInfo.getNumber",
        "android.telephony.SubscriptionManager.getActiveSubscriptionInfo",
        "android.telephony.SubscriptionManager.getActiveSubscriptionInfoCount",
        "android.telephony.SubscriptionManager.getActiveSubscriptionInfoForSimSlotIndex",
        "android.telephony.SubscriptionManager.getActiveSubscriptionInfoList",
        "android.telephony.SubscriptionManager.getCompleteActiveSubscriptionInfoList",
        "android.telephony.SubscriptionManager.getOpportunisticSubscriptions",
        "android.telephony.SubscriptionManager.getSubscriptionsInGroup",
        "android.telephony.SubscriptionManager.isActiveSubscriptionId",
        "android.telephony.TelephonyCallback.ActiveDataSubscriptionIdListener.onActiveDataSubscriptionIdChanged",
        "android.telephony.TelephonyCallback.CallForwardingIndicatorListener.onCallForwardingIndicatorChanged",
        "android.telephony.TelephonyCallback.CallStateListener.onCallStateChanged",
        "android.telephony.TelephonyCallback.CellInfoListener.onCellInfoChanged",
        "android.telephony.TelephonyCallback.EmergencyNumberListListener.onEmergencyNumberListChanged",
        "android.telephony.TelephonyCallback.MessageWaitingIndicatorListener.onMessageWaitingIndicatorChanged",
        "android.telephony.TelephonyManager.doesSwitchMultiSimConfigTriggerReboot",
        "android.telephony.TelephonyManager.getCallState",
        "android.telephony.TelephonyManager.getCallStateForSubscription",
        "android.telephony.TelephonyManager.getCarrierConfig",
        "android.telephony.TelephonyManager.getDataNetworkType",
        "android.telephony.TelephonyManager.getDeviceId",
        "android.telephony.TelephonyManager.getDeviceSoftwareVersion",
        "android.telephony.TelephonyManager.getEmergencyNumberList",
        "android.telephony.TelephonyManager.getEquivalentHomePlmns",
        "android.telephony.TelephonyManager.getForbiddenPlmns",
        "android.telephony.TelephonyManager.getGroupIdLevel",
        "android.telephony.TelephonyManager.getImei",
        "android.telephony.TelephonyManager.getLine1Number",
        "android.telephony.TelephonyManager.getMeid",
        "android.telephony.TelephonyManager.getNai",
        "android.telephony.TelephonyManager.getNetworkType",
        "android.telephony.TelephonyManager.getPreferredOpportunisticDataSubscription",
        "android.telephony.TelephonyManager.getServiceState",
        "android.telephony.TelephonyManager.getSimSerialNumber",
        "android.telephony.TelephonyManager.getSubscriberId",
        "android.telephony.TelephonyManager.getSubscriptionId",
        "android.telephony.TelephonyManager.getVisualVoicemailPackageName",
        "android.telephony.TelephonyManager.getVoiceMailAlphaTag",
        "android.telephony.TelephonyManager.getVoiceMailNumber",
        "android.telephony.TelephonyManager.getVoiceNetworkType",
        "android.telephony.TelephonyManager.isDataConnectionAllowed",
        "android.telephony.TelephonyManager.isDataEnabled",
        "android.telephony.TelephonyManager.isDataEnabledForReason",
        "android.telephony.TelephonyManager.isDataRoamingEnabled",
        "android.telephony.TelephonyManager.isModemEnabledForSlot",
        "android.telephony.TelephonyManager.isMultiSimSupported",
        "android.telephony.ims.RcsUceAdapter.isUceSettingEnabled"
    ],
    "READ_SMS":[
        "android.app.admin.DevicePolicyManager.setPermissionGrantState",
        "android.telecom.TelecomManager.getLine1Number",
        "android.telephony.SubscriptionInfo.getNumber",
        "android.telephony.TelephonyManager.getLine1Number"
    ],
    "RECEIVE_MMS":[
    ],
    "RECEIVE_WAP_PUSH":[
    ],
    "RECORD_AUDIO":[
        "android.app.admin.DevicePolicyManager.setPermissionGrantState",
        "android.media.AudioRecord.Builder.build",
        "android.net.sip.SipAudioCall.startAudio"
    ],
    "SEND_SMS":[
        "android.telephony.SmsManager.sendDataMessage",
        "android.telephony.SmsManager.sendMultipartTextMessage",
        "android.telephony.SmsManager.sendTextMessage",
        "android.telephony.SmsManager.sendTextMessageWithoutPersisting",
        "android.telephony.TelephonyManager.sendVisualVoicemailSms"
    ],
    "USE_SIP":[
    ],
    "WRITE_CALENDAR":[
    ],
    "WRITE_CALL_LOG":[
    ],
    "WRITE_CONTACTS":[
    ],
    "WRITE_EXTERNAL_STORAGE":[
        "android.app.DownloadManager.Request.setDestinationInExternalPublicDir",
        "android.app.DownloadManager.Request.setDestinationUri",
        "android.content.Context.getExternalCacheDir",
        "android.content.Context.getExternalCacheDirs",
        "android.content.Context.getExternalFilesDir",
        "android.content.Context.getExternalFilesDirs",
        "android.content.Context.getExternalMediaDirs",
        "android.content.Context.getObbDir",
        "android.content.Context.getObbDirs",
        "android.content.ContextWrapper.getExternalCacheDir",
        "android.content.ContextWrapper.getExternalCacheDirs",
        "android.content.ContextWrapper.getExternalFilesDir",
        "android.content.ContextWrapper.getExternalFilesDirs",
        "android.content.ContextWrapper.getExternalMediaDirs",
        "android.content.ContextWrapper.getObbDir",
        "android.content.ContextWrapper.getObbDirs",
        "android.os.Environment.getExternalStorageDirectory",
        "android.os.storage.StorageVolume.createAccessIntent",
        "android.test.mock.MockContext.getExternalCacheDir",
        "android.test.mock.MockContext.getExternalCacheDirs",
        "android.test.mock.MockContext.getExternalFilesDir",
        "android.test.mock.MockContext.getExternalFilesDirs",
        "android.test.mock.MockContext.getExternalMediaDirs",
        "android.test.mock.MockContext.getObbDir",
        "android.test.mock.MockContext.getObbDirs"
    ],
    "ACTIVITY_RECOGNITION":[
        "android.app.admin.DevicePolicyManager.setPermissionGrantState"
    ],
    "ACCESS_BACKGROUND_LOCATION":[
        "android.app.admin.DevicePolicyManager.setPermissionGrantState"
    ],
    "ACCESS_MEDIA_LOCATION":[
        "android.provider.MediaStore.setRequireOriginal"
    ],
    "UWB_RANGING":[
    ],
    "BLUETOOTH_ADVERTISE":[
        "android.bluetooth.le.AdvertisingSet.enableAdvertising",
        "android.bluetooth.le.AdvertisingSet.setAdvertisingData",
        "android.bluetooth.le.AdvertisingSet.setAdvertisingParameters",
        "android.bluetooth.le.AdvertisingSet.setPeriodicAdvertisingData",
        "android.bluetooth.le.AdvertisingSet.setPeriodicAdvertisingEnabled",
        "android.bluetooth.le.AdvertisingSet.setPeriodicAdvertisingParameters",
        "android.bluetooth.le.AdvertisingSet.setScanResponseData",
        "android.bluetooth.le.BluetoothLeAdvertiser.startAdvertising",
        "android.bluetooth.le.BluetoothLeAdvertiser.startAdvertisingSet",
        "android.bluetooth.le.BluetoothLeAdvertiser.stopAdvertising",
        "android.bluetooth.le.BluetoothLeAdvertiser.stopAdvertisingSet"
    ],
    "BLUETOOTH_CONNECT":[
        "android.bluetooth.BluetoothA2dp.getConnectedDevices",
        "android.bluetooth.BluetoothA2dp.getConnectionState",
        "android.bluetooth.BluetoothA2dp.getDevicesMatchingConnectionStates",
        "android.bluetooth.BluetoothA2dp.isA2dpPlaying",
        "android.bluetooth.BluetoothAdapter.disable",
        "android.bluetooth.BluetoothAdapter.enable",
        "android.bluetooth.BluetoothAdapter.getAddress",
        "android.bluetooth.BluetoothAdapter.getBondedDevices",
        "android.bluetooth.BluetoothAdapter.getName",
        "android.bluetooth.BluetoothAdapter.getProfileConnectionState",
        "android.bluetooth.BluetoothAdapter.listenUsingInsecureL2capChannel",
        "android.bluetooth.BluetoothAdapter.listenUsingInsecureRfcommWithServiceRecord",
        "android.bluetooth.BluetoothAdapter.listenUsingL2capChannel",
        "android.bluetooth.BluetoothAdapter.listenUsingRfcommWithServiceRecord",
        "android.bluetooth.BluetoothAdapter.setName",
        "android.bluetooth.BluetoothDevice.connectGatt",
        "android.bluetooth.BluetoothDevice.createBond",
        "android.bluetooth.BluetoothDevice.createInsecureL2capChannel",
        "android.bluetooth.BluetoothDevice.createInsecureRfcommSocketToServiceRecord",
        "android.bluetooth.BluetoothDevice.createL2capChannel",
        "android.bluetooth.BluetoothDevice.createRfcommSocketToServiceRecord",
        "android.bluetooth.BluetoothDevice.fetchUuidsWithSdp",
        "android.bluetooth.BluetoothDevice.getAlias",
        "android.bluetooth.BluetoothDevice.getBluetoothClass",
        "android.bluetooth.BluetoothDevice.getBondState",
        "android.bluetooth.BluetoothDevice.getName",
        "android.bluetooth.BluetoothDevice.getType",
        "android.bluetooth.BluetoothDevice.getUuids",
        "android.bluetooth.BluetoothDevice.setAlias",
        "android.bluetooth.BluetoothDevice.setPairingConfirmation",
        "android.bluetooth.BluetoothDevice.setPin",
        "android.bluetooth.BluetoothGatt.abortReliableWrite",
        "android.bluetooth.BluetoothGatt.beginReliableWrite",
        "android.bluetooth.BluetoothGatt.close",
        "android.bluetooth.BluetoothGatt.connect",
        "android.bluetooth.BluetoothGatt.disconnect",
        "android.bluetooth.BluetoothGatt.discoverServices",
        "android.bluetooth.BluetoothGatt.executeReliableWrite",
        "android.bluetooth.BluetoothGatt.readCharacteristic",
        "android.bluetooth.BluetoothGatt.readDescriptor",
        "android.bluetooth.BluetoothGatt.readPhy",
        "android.bluetooth.BluetoothGatt.readRemoteRssi",
        "android.bluetooth.BluetoothGatt.requestConnectionPriority",
        "android.bluetooth.BluetoothGatt.requestMtu",
        "android.bluetooth.BluetoothGatt.setCharacteristicNotification",
        "android.bluetooth.BluetoothGatt.setPreferredPhy",
        "android.bluetooth.BluetoothGatt.writeCharacteristic",
        "android.bluetooth.BluetoothGatt.writeDescriptor",
        "android.bluetooth.BluetoothGattServer.addService",
        "android.bluetooth.BluetoothGattServer.cancelConnection",
        "android.bluetooth.BluetoothGattServer.clearServices",
        "android.bluetooth.BluetoothGattServer.close",
        "android.bluetooth.BluetoothGattServer.connect",
        "android.bluetooth.BluetoothGattServer.notifyCharacteristicChanged",
        "android.bluetooth.BluetoothGattServer.readPhy",
        "android.bluetooth.BluetoothGattServer.removeService",
        "android.bluetooth.BluetoothGattServer.sendResponse",
        "android.bluetooth.BluetoothGattServer.setPreferredPhy",
        "android.bluetooth.BluetoothHeadset.getConnectedDevices",
        "android.bluetooth.BluetoothHeadset.getConnectionState",
        "android.bluetooth.BluetoothHeadset.getDevicesMatchingConnectionStates",
        "android.bluetooth.BluetoothHeadset.isAudioConnected",
        "android.bluetooth.BluetoothHeadset.isNoiseReductionSupported",
        "android.bluetooth.BluetoothHeadset.isVoiceRecognitionSupported",
        "android.bluetooth.BluetoothHeadset.sendVendorSpecificResultCode",
        "android.bluetooth.BluetoothHeadset.startVoiceRecognition",
        "android.bluetooth.BluetoothHeadset.stopVoiceRecognition",
        "android.bluetooth.BluetoothHealth.connectChannelToSource",
        "android.bluetooth.BluetoothHealth.disconnectChannel",
        "android.bluetooth.BluetoothHealth.getConnectedDevices",
        "android.bluetooth.BluetoothHealth.getConnectionState",
        "android.bluetooth.BluetoothHealth.getDevicesMatchingConnectionStates",
        "android.bluetooth.BluetoothHealth.getMainChannelFd",
        "android.bluetooth.BluetoothHealth.registerSinkAppConfiguration",
        "android.bluetooth.BluetoothHealth.unregisterAppConfiguration",
        "android.bluetooth.BluetoothHearingAid.getConnectedDevices",
        "android.bluetooth.BluetoothHearingAid.getConnectionState",
        "android.bluetooth.BluetoothHearingAid.getDevicesMatchingConnectionStates",
        "android.bluetooth.BluetoothHidDevice.connect",
        "android.bluetooth.BluetoothHidDevice.disconnect",
        "android.bluetooth.BluetoothHidDevice.getConnectedDevices",
        "android.bluetooth.BluetoothHidDevice.getConnectionState",
        "android.bluetooth.BluetoothHidDevice.getDevicesMatchingConnectionStates",
        "android.bluetooth.BluetoothHidDevice.registerApp",
        "android.bluetooth.BluetoothHidDevice.replyReport",
        "android.bluetooth.BluetoothHidDevice.reportError",
        "android.bluetooth.BluetoothHidDevice.sendReport",
        "android.bluetooth.BluetoothHidDevice.unregisterApp",
        "android.bluetooth.BluetoothLeAudio.getConnectedDevices",
        "android.bluetooth.BluetoothLeAudio.getConnectionState",
        "android.bluetooth.BluetoothLeAudio.getDevicesMatchingConnectionStates",
        "android.bluetooth.BluetoothManager.getConnectedDevices",
        "android.bluetooth.BluetoothManager.getConnectionState",
        "android.bluetooth.BluetoothManager.getDevicesMatchingConnectionStates",
        "android.bluetooth.BluetoothManager.openGattServer",
        "android.bluetooth.BluetoothSocket.connect"
    ],
    "BLUETOOTH_SCAN":[
        "android.bluetooth.BluetoothAdapter.cancelDiscovery",
        "android.bluetooth.BluetoothAdapter.getScanMode",
        "android.bluetooth.BluetoothAdapter.isDiscovering",
        "android.bluetooth.BluetoothAdapter.startDiscovery",
        "android.bluetooth.BluetoothAdapter.startLeScan",
        "android.bluetooth.BluetoothAdapter.stopLeScan",
        "android.bluetooth.le.BluetoothLeScanner.flushPendingScanResults",
        "android.bluetooth.le.BluetoothLeScanner.startScan",
        "android.bluetooth.le.BluetoothLeScanner.stopScan"
    ],
    "BODY_SENSORS_BACKGROUND":[
    ],
    "NEARBY_WIFI_DEVICES":[
        "android.net.wifi.WifiManager.startLocalOnlyHotspot",
        "android.net.wifi.aware.WifiAwareManager.attach",
        "android.net.wifi.aware.WifiAwareSession.publish",
        "android.net.wifi.aware.WifiAwareSession.subscribe",
        "android.net.wifi.p2p.WifiP2pManager.addLocalService",
        "android.net.wifi.p2p.WifiP2pManager.connect",
        "android.net.wifi.p2p.WifiP2pManager.createGroup",
        "android.net.wifi.p2p.WifiP2pManager.discoverPeers",
        "android.net.wifi.p2p.WifiP2pManager.discoverServices",
        "android.net.wifi.p2p.WifiP2pManager.requestDeviceInfo",
        "android.net.wifi.p2p.WifiP2pManager.requestGroupInfo",
        "android.net.wifi.p2p.WifiP2pManager.requestPeers",
        "android.net.wifi.rtt.WifiRttManager.startRanging"
    ],
    "POST_NOTIFICATIONS":[
        "android.media.MediaSession2Service.onUpdateNotification"
    ],
    "READ_MEDIA_AUDIO":[
    ],
    "READ_MEDIA_IMAGE":[
    ],
    "READ_MEDIA_VIDEO":[
    ],
    "READ_CELL_BROADCASTS":[
    ]
}