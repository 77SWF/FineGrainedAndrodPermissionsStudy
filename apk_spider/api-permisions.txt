<com.android.providers.downloads.StorageManager: long discardPurgeableFiles(int,long)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.gallery3d.app.AlbumSetPage$1: void render(com.android.gallery3d.ui.GLCanvas)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.contacts.list.ContactPickerFragment: void setSearchMode(boolean)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.Settings$TextToSpeechSettingsActivity: void onResume()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.server.WifiService: void setCountryCode(java.lang.String,boolean)>	android.permission.CHANGE_WIFI_STATE	android.permission.WRITE_SETTINGS	
<com.android.contacts.group.GroupDetailFragment$2: void onLoadFinished(android.content.Loader,java.lang.Object)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.ui.ScrollBarView: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.list.ContactListFilterControllerImpl: void setContactListFilter(com.android.contacts.list.ContactListFilter,boolean,boolean)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.bluetooth.opp.BluetoothOppIncomingFileConfirmActivity: void onCreate(android.os.Bundle)>	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.BLUETOOTH	
<com.android.mms.ui.DeliveryReportActivity: void onCreate(android.os.Bundle)>	android.permission.READ_SMS	android.permission.RECEIVE_SMS	
<com.android.phone.BluetoothAtPhonebook: android.bluetooth.AtCommandResult processCpbrCommand()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.contacts.group.GroupDetailFragment$2: android.content.CursorLoader onCreateLoader(int,android.os.Bundle)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.data.WorkingMessage: void preSendSmsWorker(com.android.mms.data.Conversation,java.lang.String,java.lang.String)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.inputmethod.latin.UserDictionary: void loadDictionary()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.filterpacks.imageproc.Invert: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.mms.ui.SlideshowEditActivity: void initSlideList()>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.contacts.list.ProviderStatusWatcher$2: java.lang.Void doInBackground(java.lang.Void[])>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.app.AlbumSetPage: void onResume()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<android.bluetooth.IBluetooth: boolean setDiscoverableTimeout(int)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<android.bluetooth.BluetoothA2dp: boolean connect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.mms.transaction.RetrieveTransaction: byte[] sendPdu(long,byte[],java.lang.String)>	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	
<com.android.internal.util.StateMachine$SmHandler$QuittingState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.contacts.list.ContactEntryListAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.ShortcutIntentBuilder$LoadingAsyncTask: java.lang.Void doInBackground(java.lang.Void[])>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.calendar.AllInOneActivity: void onResume()>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.phone.InCallScreen: void endInCallScreenSession(boolean)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.exchange.adapter.AttachmentLoader: void loadAttachment()>	android.permission.VIBRATE	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.imageproc.SepiaFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.gallery3d.app.PhotoPage$1: boolean removeComponent(com.android.gallery3d.ui.GLView)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<android.content.SyncManager$6: void onReceive(android.content.Context,android.content.Intent)>	android.permission.VIBRATE	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.settings.LocationSettings: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.contacts.activities.ContactEditorActivity: void onResume()>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.data.WorkingMessage: java.lang.String readDraftSmsMessage(com.android.mms.data.Conversation)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.gallery3d.app.PhotoDataAdapter$FullImageJob: java.lang.Object run(com.android.gallery3d.util.ThreadPool$JobContext)>	android.permission.NFC	android.permission.VIBRATE	android.permission.INTERNET	android.permission.SET_WALLPAPER	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.internal.telephony.ISms: boolean copyMessageToIccEf(int,byte[],byte[])>	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.server.location.ComprehensiveCountryDetector: void stop()>	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	
<com.android.contacts.list.ContactBrowseListFragment: void setFilter(com.android.contacts.list.ContactListFilter,boolean)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.ConnectivityService: int access$200(com.android.server.ConnectivityService,com.android.server.ConnectivityService$FeatureUser,boolean)>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.phone.InCallScreen: void disconnectBluetoothAudio()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.server.MountService$2: void run()>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.internal.telephony.cdma.CdmaLteUiccRecords: void onAllRecordsLoaded()>	android.permission.BROADCAST_STICKY	android.permission.CHANGE_CONFIGURATION	
<com.android.browser.TabControl: boolean removeTab(com.android.browser.Tab)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.filterpacks.imageproc.CropRectFilter: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.content.ISyncAdapter: void initialize(android.accounts.Account,java.lang.String)>	android.permission.WRITE_SYNC_SETTINGS	android.permission.READ_SYNC_SETTINGS	
<android.app.IActivityManager: void killBackgroundProcesses(java.lang.String)>	android.permission.KILL_BACKGROUND_PROCESSES	android.permission.RESTART_PACKAGES	
<android.filterpacks.imageproc.ImageStitcher: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.providers.downloads.DownloadService: com.android.providers.downloads.DownloadInfo insertDownloadLocked(com.android.providers.downloads.DownloadInfo$Reader,long)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	android.permission.ACCESS_NETWORK_STATE	
<com.android.mms.ui.MessageListItem: void updateAvatarView(java.lang.String,boolean)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothAtPhonebook: boolean checkAccessPermission()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.phone.BluetoothHandsfree$10: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<android.net.wifi.WifiApConfigStore$InactiveState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.email.activity.MessageViewFragmentBase$ReloadMessageTask: void callOnPostExecuteForTest(java.lang.Object)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.DeliveryReportActivity: java.util.List getReportItems()>	android.permission.READ_SMS	android.permission.RECEIVE_SMS	
<com.android.gallery3d.app.SlideshowPage: void initializeViews()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.browser.BrowserActivity: void onPause()>	android.permission.NFC	android.permission.WAKE_LOCK	
<com.android.contacts.detail.ContactDetailTabCarousel: void loadData(com.android.contacts.ContactLoader$Result)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.deskclock.AlarmAlertFullScreen: void snooze()>	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	
<com.android.vcard.VCardEntryCommitter: void onEntryCreated(com.android.vcard.VCardEntry)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.app.AlbumPage$2: boolean removeComponent(com.android.gallery3d.ui.GLView)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.activities.PeopleActivity: void setupContactDetailFragment(android.net.Uri)>	android.permission.READ_PHONE_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.ui.PhotoView$FullPicture: void drawTileView(com.android.gallery3d.ui.GLCanvas,android.graphics.Rect)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.mms.model.VideoModel: com.android.mms.util.ItemLoadedFuture loadThumbnailBitmap(com.android.mms.util.ItemLoadedCallback)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.calendar.agenda.AgendaWindowAdapter: android.net.Uri buildQueryUri(int,int,java.lang.String)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.browser.UrlInputView: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.filterpacks.imageproc.BrightnessFilter: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.gallery3d.app.PhotoDataAdapter: void resume()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.internal.widget.LockPatternView: boolean onTouchEvent(android.view.MotionEvent)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.internal.telephony.cdma.CDMAPhone: void init(android.content.Context,com.android.internal.telephony.PhoneNotifier)>	android.permission.CHANGE_WIFI_STATE	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	android.permission.CHANGE_CONFIGURATION	android.permission.SET_TIME_ZONE	android.permission.WAKE_LOCK	
<com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService: com.android.inputmethod.latin.spellcheck.DictAndProximity createDictAndProximity(java.util.Locale)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.gallery3d.app.AlbumSetPage: boolean onItemSelected(android.view.MenuItem)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.exchange.EasOutboxService: android.os.Bundle validateAccount(com.android.emailcommon.provider.HostAuth,android.content.Context)>	android.permission.READ_CALENDAR	android.permission.WAKE_LOCK	
<com.android.phone.CallLogAsync$AddCallTask: android.net.Uri[] doInBackground(com.android.phone.CallLogAsync$AddCallArgs[])>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WRITE_CALL_LOG	android.permission.READ_SYNC_SETTINGS	
<android.content.SyncManager: void cancelActiveSync(android.accounts.Account,int,java.lang.String)>	android.permission.VIBRATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<android.location.LocationManager: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_LOCATION_EXTRA_COMMANDS	
<com.android.contacts.ContactLoader: com.android.contacts.ContactLoader$Result loadInBackground()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.editor.StructuredNameEditorView: void switchFromStructuredNameToFullName()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.exchange.ExchangeService: void serviceRequest(long,int)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void onRestart()>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.ContactSaveService: void setSuperPrimary(android.content.Intent)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.imageproc.ResizeFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.email.RefreshManager: boolean refreshMessageList(long,long,boolean,boolean)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.Controller: boolean onKeyUp(int,android.view.KeyEvent)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.phone.MobileNetworkSettings$MyHandler: void handleGetPreferredNetworkTypeResponse(android.os.Message)>	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<android.content.SyncManager$8: void onServiceChanged(android.content.SyncAdapterType,boolean)>	android.permission.VIBRATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<com.android.mms.transaction.SmsReceiverService: android.net.Uri replaceMessage(android.content.Context,android.telephony.SmsMessage[],int)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.phone.BluetoothAtPhonebook$3: android.bluetooth.AtCommandResult handleActionCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.phone.InCallTouchUi: void onTrigger(android.view.View,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.ContactsListActivity: android.net.Uri getUriToQuery()>	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	
<com.android.contacts.activities.AttachPhotoActivity: void saveContact(com.android.contacts.ContactLoader$Result)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.voicedialer.PhoneTypeChoiceRecognizerEngine: void recognize(com.android.voicedialer.RecognizerClient,android.app.Activity,java.io.File,int)>	android.permission.VIBRATE	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.internal.widget.WaveView: boolean onTouchEvent(android.view.MotionEvent)>	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.providers.contacts.GlobalSearchSupport$SearchSuggestion: void addColumnValue(java.util.ArrayList,java.lang.String)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.view.WindowManagerPolicy: int interceptKeyBeforeQueueing(android.view.KeyEvent,int,boolean)>	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.CALL_PHONE	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.mms.ui.ComposeMessageActivity: boolean showMessageDetails(com.android.mms.ui.MessageItem)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.server.am.BroadcastQueue: void setBroadcastTimeoutLocked(long)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.contacts.list.PhoneNumberListAdapter: void bindView(android.view.View,int,android.database.Cursor,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothHandsfree$9: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: android.net.Uri getContactUriForPhoneNumber(java.lang.String)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.providers.contacts.LegacyApiSupport: int delete(android.net.Uri,java.lang.String,java.lang.String[])>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.latin.LatinIME: void switchToKeyboardView()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void queueNextSignalStrengthPoll()>	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	android.permission.SET_TIME_ZONE	android.permission.WAKE_LOCK	
<com.android.camera.VideoCamera: void onBackPressed()>	android.permission.NFC	android.permission.VIBRATE	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	android.permission.RECORD_AUDIO	
<com.android.phone.NotificationMgr: com.android.phone.NotificationMgr init(com.android.phone.PhoneApp)>	android.permission.VIBRATE	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.contacts.list.ProviderStatusWatcher$LoaderTask: java.lang.Boolean doInBackground(java.lang.Void[])>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.calllog.DefaultVoicemailNotifier$NameLookupQuery: java.lang.String query(java.lang.String)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.calendar.alerts.AlertActivity$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.inputmethod.latin.ExpandableBinaryDictionary: boolean hasContentChanged()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.email.activity.MessageOrderManager$LoadMessageListTask: void callOnPostExecuteForTest(java.lang.Object)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.transaction.TransactionService$ServiceHandler: boolean processTransaction(com.android.mms.transaction.Transaction)>	android.permission.CHANGE_WIFI_STATE	android.permission.READ_SMS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SMS	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.RECEIVE_SMS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.gallery3d.ui.TileImageView: boolean dispatchTouchEvent(android.view.MotionEvent)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onPollPdp()>	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.contacts.list.DefaultContactBrowseListFragment: void onLoadFinished(android.content.Loader,java.lang.Object)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.bluetooth.BluetoothDeviceProfileState$IncomingHandsfree: boolean processMessage(android.os.Message)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.settings.bluetooth.BluetoothSettings: boolean onOptionsItemSelected(android.view.MenuItem)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.server.am.ActivityManagerService: void killServicesLocked(com.android.server.am.ProcessRecord,boolean)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.email.Controller$ServiceCallbackWrapper: void call(com.android.emailcommon.service.IEmailServiceCallback)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.imageproc.TintFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.server.am.ActivityManagerService: void bumpServiceExecutingLocked(com.android.server.am.ServiceRecord,java.lang.String)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.emailcommon.service.ServiceProxy$ProxyTask: void run()>	android.permission.VIBRATE	android.permission.MANAGE_ACCOUNTS	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.transaction.MessagingNotification: com.android.mms.transaction.MessagingNotification$NotificationInfo getNewMessageNotificationInfo(android.content.Context,boolean,java.lang.String,java.lang.String,java.lang.String,long,long,android.graphics.Bitmap,com.android.mms.data.Contact,int)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.gallery3d.app.ManageCachePage$1: boolean onTouch(android.view.MotionEvent)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.server.am.ActivityManagerService: android.content.Context main(int)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WRITE_SETTINGS	
<com.android.providers.telephony.MmsSmsProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.settings.TetherSettings: void access$100(com.android.settings.TetherSettings,java.lang.String[],java.lang.String[],java.lang.String[])>	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.mms.ui.ManageSimMessages: void deleteAllFromSim()>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.mms.transaction.SendTransaction: byte[] getPdu(java.lang.String)>	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	
<com.android.settings.DateTimeSettings: void onCreate(android.os.Bundle)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.READ_PHONE_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.calendar.month.MonthByWeekFragment: void onScroll(android.widget.AbsListView,int,int,int)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.gallery3d.ui.CropView$HighlightRectangle: boolean removeComponent(com.android.gallery3d.ui.GLView)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.activities.JoinContactActivity: void onCreate(android.os.Bundle)>	android.permission.NFC	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.bluetooth.IBluetooth$Stub: boolean disconnectPanDevice(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.email.SecurityPolicy: boolean wipeExpiredAccounts(android.content.Context,com.android.email.Controller)>	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	android.permission.WAKE_LOCK	
<com.android.settings.TetherSettings: void access$300(com.android.settings.TetherSettings)>	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.gallery3d.ui.PhotoView: boolean slideToPrevPicture()>	android.permission.NFC	android.permission.VIBRATE	
<android.media.AudioService: void startBluetoothSco(android.os.IBinder)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<com.android.gallery3d.ui.EdgeView: void removeOneComponent(com.android.gallery3d.ui.GLView)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.browser.view.PieListView: void layout(int,int,boolean,float,int)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.content.SyncManager$SyncHandler: void cancelActiveSyncLocked(android.accounts.Account,int,java.lang.String)>	android.permission.VIBRATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<android.filterpacks.base.InputStreamSource: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.settings.AccessibilitySettings: void onCreate(android.os.Bundle)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.READ_PHONE_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.ContactsDictionary: void startDictionaryLoadingTaskLocked()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.accounts.GrantCredentialsPermissionActivity: void onCreate(android.os.Bundle)>	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.gallery3d.app.PhotoPage: void onResume()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.phone.InCallScreen: void onBackPressed()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.LockPatternKeyguardView: void <init>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<android.filterpacks.base.InputStreamSource: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.gallery3d.ui.UndoBarView: boolean removeComponent(com.android.gallery3d.ui.GLView)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.email.provider.DBHelper$DatabaseHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>	android.permission.WRITE_SYNC_SETTINGS	android.permission.MANAGE_ACCOUNTS	android.permission.AUTHENTICATE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.exchange.adapter.ContactsSyncAdapter$EasContactsSyncParser: boolean parse()>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.server.location.ComprehensiveCountryDetector: void stopLocationBasedDetector()>	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	
<com.android.server.location.ComprehensiveCountryDetector$1: void onCountryDetected(android.location.Country)>	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	
<com.android.internal.policy.impl.KeyguardViewMediator: void handleVerifyUnlock()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void access$4500(com.android.mms.ui.ComposeMessageActivity,boolean)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.calendar.agenda.AgendaListView: void refresh(boolean)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.settings.vpn2.VpnSettings: void connect(com.android.settings.vpn2.VpnProfile)>	android.permission.VIBRATE	android.permission.BROADCAST_STICKY	android.permission.ACCESS_NETWORK_STATE	
<android.location.ILocationManager: boolean isProviderEnabled(java.lang.String)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.phone.InCallScreen: void dontAddVoiceMailNumber()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.exchange.EmailSyncAlarmReceiver$1: void run()>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.server.location.LocationBasedCountryDetector: android.location.Country detectCountry()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.internal.policy.impl.LockPatternKeyguardView: android.view.View createUnlockScreenFor(com.android.internal.policy.impl.LockPatternKeyguardView$UnlockMode)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<android.bluetooth.IBluetooth: boolean connectInputDevice(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.contacts.detail.PhotoSelectionHandler: void <init>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.browser.BrowserSettings: void initialize(android.content.Context)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.mms.data.WorkingMessage: void readStateFromBundle(android.os.Bundle)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.settings.wifi.WifiSettingsForSetupWizardXL: void updateConnectionState(android.net.NetworkInfo$DetailedState)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	
<com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	
<android.provider.Contacts$People: android.net.Uri addToMyContactsGroup(android.content.ContentResolver,long)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.activities.AttachPhotoActivity: void access$000(com.android.contacts.activities.AttachPhotoActivity,com.android.contacts.ContactLoader$Result)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.VibratorService: void vibrate(long,android.os.IBinder)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	
<com.android.nfc.DeviceHost$DeviceHostListener: void onRemoteEndpointDiscovered(com.android.nfc.DeviceHost$TagEndpoint)>	android.permission.GET_TASKS	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void onDisconnectDone(int,android.os.AsyncResult)>	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	
<com.android.phone.InCallScreen: void onStop()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.gallery3d.app.AlbumDataLoader: void resume()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.calendar.AllInOneActivity: void onBackPressed()>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.phone.InCallScreen: void updateManageConferencePanelIfNecessary()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.phone.ClearMissedCallsService: void onHandleIntent(android.content.Intent)>	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WRITE_CALL_LOG	
<android.filterpacks.imageproc.GrainFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.phone.Use2GOnlyCheckBoxPreference: void onClick()>	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.contacts.activities.PeopleActivity$TabPagerListener: void onPageSelected(int)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.transaction.SmsMessageSender: java.lang.String getOutgoingServiceCenter(long)>	android.permission.READ_SMS	android.permission.RECEIVE_SMS	
<com.android.settings.bluetooth.BluetoothSettings: void addCachedDevices()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.gallery3d.app.AlbumDataLoader: java.lang.Object access$1700(com.android.gallery3d.app.AlbumDataLoader,java.util.concurrent.Callable)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.mms.util.Recycler$MmsRecycler: boolean checkForThreadsOverLimit(android.content.Context)>	android.permission.READ_SMS	android.permission.RECEIVE_SMS	
<com.android.contacts.vcard.NotificationImportExportListener: void onImportParsed(com.android.contacts.vcard.ImportRequest,int,com.android.vcard.VCardEntry,int,int)>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.am.ActivityRecord$Token: boolean keyDispatchingTimedOut()>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.contacts.quickcontact.QuickContactActivity: void onCreate(android.os.Bundle)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.PhoneInterfaceManager: java.util.List getAllCellInfo()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<android.filterpacks.imageproc.DrawRectFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.browser.view.PieMenu: void layoutPieView(com.android.browser.view.PieMenu$PieView,int,int,float)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.mms.ui.SlideshowEditActivity: void onCreate(android.os.Bundle)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.settings.bluetooth.BluetoothSettings: void onDevicePreferenceClick(com.android.settings.bluetooth.BluetoothDevicePreference)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.settings.wifi.p2p.WifiP2pSettings: void onActivityCreated(android.os.Bundle)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.calendar.alerts.AlertActivity: void dismissFiredAlarms()>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.emailcommon.service.IEmailService: void deleteAccountPIMData(long)>	android.permission.READ_CALENDAR	android.permission.WAKE_LOCK	
<com.android.settings.net.DataUsageMeteredSettings: void onActivityCreated(android.os.Bundle)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void access$5700(com.android.mms.ui.ComposeMessageActivity,android.net.Uri,boolean)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.base.RetargetFilter: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone getCdmaPhone()>	android.permission.CHANGE_WIFI_STATE	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	android.permission.CHANGE_CONFIGURATION	android.permission.SET_TIME_ZONE	android.permission.WAKE_LOCK	
<android.net.wifi.WifiStateMachine$DriverStoppedState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<android.filterpacks.imageproc.NegativeFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.internal.policy.impl.KeyguardViewMediator: void pokeWakelock()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.phone.OtaUtils: void onClickOtaSpeakerButton()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.settings.bluetooth.DeviceListPreferenceFragment: void onPause()>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.UserDictionary: void blockingReloadDictionaryIfRequired()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.gallery3d.ui.PhotoView: void removeAllComponents()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.inputmethod.latin.Suggest: void getAllBigrams(java.lang.CharSequence,com.android.inputmethod.latin.WordComposer)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.phone.OtaUtils: void onOtaCloseFailureNotice()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.BLUETOOTH	
<com.android.contacts.group.GroupEditorFragment: com.android.contacts.model.AccountType getAccountType()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.accounts.IAccountManagerResponse$Stub$Proxy: void onResult(android.os.Bundle)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<android.media.AudioService$2: void onServiceConnected(int,android.bluetooth.BluetoothProfile)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.calendar.SearchActivity: void initFragments(long,java.lang.String)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.server.net.NetworkStatsService$3: void onReceive(android.content.Context,android.content.Intent)>	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<android.bluetooth.IBluetoothA2dp: boolean suspendSink(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void setTimeFromNITZString(java.lang.String,long)>	android.permission.BROADCAST_STICKY	android.permission.SET_TIME_ZONE	android.permission.WAKE_LOCK	
<com.android.browser.AutologinBar: void onClick(android.view.View)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.nfc.NfcService: void onCardEmulationDeselected()>	android.permission.GET_TASKS	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<android.app.IActivityManager: boolean handleApplicationWtf(android.os.IBinder,java.lang.String,android.app.ApplicationErrorReport$CrashInfo)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.contacts.calllog.CallLogQueryHandler: void fetchCalls(int,int,boolean,boolean)>	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<android.server.BluetoothA2dpService: void access$100(android.server.BluetoothA2dpService)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.providers.downloads.DownloadService$UpdateThread: void run()>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	android.permission.ACCESS_NETWORK_STATE	
<com.android.providers.calendar.CalendarAlarmManager: void runScheduleNextAlarm(boolean,com.android.providers.calendar.CalendarProvider2)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.server.am.ActivityManagerService: void handleAppDiedLocked(com.android.server.am.ProcessRecord,boolean,boolean)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.contacts.detail.PhotoSelectionHandler$PhotoActionListener: void onUseAsPrimaryChosen()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.calendar.EventInfoFragment$QueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_CALENDAR	
<com.android.settings.Settings$WirelessSettingsActivity: void onResume()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.bluetooth.pbap.BluetoothPbapObexServer: int pullPhonebook(byte[],com.android.bluetooth.pbap.BluetoothPbapObexServer$AppParamValue,javax.obex.HeaderSet,javax.obex.Operation,java.lang.String)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<android.server.BluetoothPanProfileHandler: boolean disconnectPanDevice(android.bluetooth.BluetoothDevice)>	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountActivity: void onClick(android.view.View)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.contacts.detail.ContactDetailUpdatesFragment$1: void onClick(android.view.View)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.net.NetworkPolicyManagerService: void access$1300(com.android.server.net.NetworkPolicyManagerService)>	android.permission.ACCESS_WIFI_STATE	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.mms.ui.ComposeMessageActivity: boolean access$3800(com.android.mms.ui.ComposeMessageActivity,long)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.nfc.TechListChooserActivity: void onCreate(android.os.Bundle)>	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.LockPatternKeyguardView: android.view.View createLockScreen()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.exchange.EasAccountService: android.os.Bundle validateAccount(com.android.emailcommon.provider.HostAuth,android.content.Context)>	android.permission.READ_CALENDAR	android.permission.WAKE_LOCK	
<com.android.internal.policy.impl.GlobalActions: void onClick(android.content.DialogInterface,int)>	android.permission.VIBRATE	android.permission.MOUNT_UNMOUNT_FILESYSTEMS	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WRITE_SETTINGS	
<com.android.vcard.VCardEntry: java.util.ArrayList constructInsertOperations(android.content.ContentResolver,java.util.ArrayList)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.app.PickerActivity: void onResume()>	android.permission.NFC	android.permission.VIBRATE	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	android.permission.RECORD_AUDIO	
<com.android.mms.ui.ComposeMessageActivity: void access$800(com.android.mms.ui.ComposeMessageActivity,com.android.mms.ui.MessageItem)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.activities.JoinContactActivity: void onStart()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void onUserInteraction()>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.deskclock.AlarmAlertFullScreen: boolean dispatchKeyEvent(android.view.KeyEvent)>	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	
<com.android.camera.Camera: void onResume()>	android.permission.NFC	android.permission.VIBRATE	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	android.permission.RECORD_AUDIO	
<com.android.phone.MobileNetworkSettings: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.gallery3d.app.AlbumPage: void clearLoadingBit(int)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<android.filterpacks.imageproc.StraightenFilter: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.browser.SnapshotTab: void persistThumbnail()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.server.MountService: void onDaemonConnected()>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.wallpaper.RenderScriptScene: void start()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: void run(android.accounts.AccountManagerFuture)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.browser.Controller: void removeTab(com.android.browser.Tab)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.internal.telephony.ITelephony$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.ACCESS_FINE_LOCATION	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_COARSE_LOCATION	android.permission.CALL_PHONE	
<com.android.internal.telephony.IIccPhoneBook$Stub: boolean updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	
<com.android.emailcommon.service.AccountServiceProxy$3: void run()>	android.permission.MANAGE_ACCOUNTS	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.contacts.editor.PhoneticNameEditorView: void onTypeSelectionChange(int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.telephony.IccCard: void getIccCardStatusDone(android.os.AsyncResult)>	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	
<com.android.contacts.activities.GroupDetailActivity: boolean onOptionsItemSelected(android.view.MenuItem)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.activities.PeopleActivity: void showEmptyStateForTab(int)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.WallpaperHandler: boolean onMenuItemClick(android.view.MenuItem)>	android.permission.INTERNET	android.permission.SET_WALLPAPER	
<com.android.settings.wifi.AdvancedWifiSettings: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.mms.ui.ConversationList: void createNewMessage()>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.mms.ui.ComposeMessageActivity$30: void onResizeResult(com.google.android.mms.pdu.PduPart,boolean)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.deskclock.AlarmKlaxon: void onDestroy()>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	android.permission.WAKE_LOCK	
<com.android.phone.BluetoothAtPhonebook$1: android.bluetooth.AtCommandResult handleActionCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void onClick(android.view.View)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.telephony.cat.RilMessageDecoder$StateCmdParamsReady: void enter()>	android.permission.CHANGE_WIFI_STATE	android.permission.GET_TASKS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.browser.TabBar$TabView: void closeTab()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.settings.bluetooth.BluetoothEnabler: void resume()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.server.location.LocationBasedCountryDetector: android.location.Location getLastKnownLocation()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<android.filterpacks.imageproc.DocumentaryFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.internal.telephony.ITelephony$Stub: java.util.List getNeighboringCellInfo()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService: void onCreate()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.internal.widget.LockPatternView: void notifyPatternDetected()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.server.am.ActivityManagerService: int broadcastIntentLocked(com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,boolean,boolean,int,int,int)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<android.app.IActivityManager: android.content.Intent registerReceiver(android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.systemui.statusbar.phone.PhoneStatusBar$NotificationClicker: void onClick(android.view.View)>	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.DISABLE_KEYGUARD	android.permission.GET_ACCOUNTS	
<com.android.camera.ActivityBase: void onBackPressed()>	android.permission.NFC	android.permission.VIBRATE	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	android.permission.RECORD_AUDIO	
<com.android.camera.ActivityBase$MyAppBridge: void switchWithCaptureAnimation(int)>	android.permission.NFC	android.permission.VIBRATE	
<com.android.email.activity.MessageCompose$QuickResponseChecker: void callOnPostExecuteForTest(java.lang.Object)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<android.provider.BrowserContract$SyncState: void set(android.content.ContentProviderClient,android.accounts.Account,byte[])>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.phone.Ringer$VibratorThread: void run()>	android.permission.VIBRATE	android.permission.WAKE_LOCK	
<com.android.email.activity.Welcome$1: void run()>	android.permission.MANAGE_ACCOUNTS	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.emailcommon.utility.EmailAsyncTask: java.lang.Object doInBackground(java.lang.Object[])>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.bluetooth.RequestPermissionHelperActivity: void onClick(android.content.DialogInterface,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.settings.ChooseLockGeneric$ChooseLockGenericFragment: void onActivityResult(int,int,android.content.Intent)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.contacts.util.AccountSelectionUtil: android.app.Dialog getSelectAccountDialog(android.content.Context,int)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothHeadsetService$6: boolean createIncomingConnect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.LockScreen: void onResume()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.contacts.activities.PeopleActivity: void updateFragmentsVisibility()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.latin.LatinIME: void commitTyped(android.view.inputmethod.InputConnection,int)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.server.net.NetworkPolicyManagerService: void setRestrictBackground(boolean)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	
<com.android.settings.Settings$HeaderAdapter: void resume()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<android.filterpacks.imageproc.BlackWhiteFilter: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.contacts.model.EntityDeltaList: java.util.ArrayList buildDiff()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.DataController$DataControllerHandler: void doUpdateVisitedHistory(java.lang.String)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.email.activity.setup.AccountSetupNames: android.net.Uri access$100()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.accounts.AccountManager: android.accounts.AccountManagerFuture removeAccount(android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler)>	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthTokenLabel(java.lang.String,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler)>	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<android.net.wifi.WifiWatchdogStateMachine$VerifyingLinkState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.server.am.ActivityManagerService: void startRunning(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.settings.bluetooth.DockService: void applyBtSettings(android.bluetooth.BluetoothDevice,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.SynchronouslyLoadedUserDictionary: void getWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.list.ContactListFilterController$ContactListFilterListener: void onContactListFilterChanged()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.email.activity.setup.AccountServerBaseFragment: void saveSettingsAfterEdit()>	android.permission.READ_PHONE_STATE	android.permission.WAKE_LOCK	
<com.android.internal.telephony.ITelephonyRegistry$Stub: void listen(java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)>	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	
<com.android.email.provider.DBHelper: void createAccountManagerAccount(android.content.Context,java.lang.String,java.lang.String)>	android.permission.WRITE_SYNC_SETTINGS	android.permission.AUTHENTICATE_ACCOUNTS	
<com.android.phone.InCallScreen: void internalSilenceRinger()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<com.android.vcard.VCardParserImpl_V40: void parseOne(java.io.InputStream)>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.telephony.IIccPhoneBook$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	
<com.android.settings.bluetooth.CachedBluetoothDevice: void connectProfile(com.android.settings.bluetooth.LocalBluetoothProfile)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.phone.InCallScreen: void switchInCallAudio(com.android.phone.InCallScreen$InCallAudioMode)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.SynchronouslyLoadedContactsDictionary: boolean isValidWord(java.lang.CharSequence)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.browser.ActivityController: void onDestroy()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.exchange.adapter.CalendarSyncAdapter: boolean parse(java.io.InputStream)>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<android.bluetooth.BluetoothDeviceProfileState$BondedDevice: boolean processMessage(android.os.Message)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.gallery3d.app.ManageCachePage: void onPause()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.phone.InCallScreen: void onDisconnect(android.os.AsyncResult)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.activities.ShowOrCreateActivity: void onServiceCompleted(android.content.Intent)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.editor.ContactEditorFragment: void onStop()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.CallNotifier: void onNewRingingConnection(android.os.AsyncResult)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.server.INativeDaemonConnectorCallbacks: void onDaemonConnected()>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<android.bluetooth.IBluetooth: boolean setName(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.contacts.group.GroupDetailFragment$3: android.content.CursorLoader onCreateLoader(int,android.os.Bundle)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.vcard.VCardEntry$PhotoData: void constructInsertOperation(java.util.List,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.providers.calendar.CalendarReceiver$1: void run()>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	android.permission.WAKE_LOCK	
<com.android.contacts.vcard.ImportVCardActivity$ImportRequestConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<android.net.sip.SipAudioCall: void access$700(android.net.sip.SipAudioCall)>	android.permission.ACCESS_WIFI_STATE	android.permission.WAKE_LOCK	
<com.android.contacts.widget.LayoutSuppressingQuickContactBadge: void assignContactFromEmail(java.lang.String,boolean)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.internal.telephony.ITelephony$Stub$Proxy: android.os.Bundle getCellLocation()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.settings.widget.SettingsAppWidgetProvider$GpsStateTracker$1: void onPostExecute(java.lang.Object)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.browser.DataController$DataControllerHandler: void handleMessage(com.android.browser.DataController$DCMessage)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.contacts.editor.EventFieldEditorView: void notifyEditorListener()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.videosink.MediaEncoderFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.inputmethod.latin.suggestions.MoreSuggestionsView: boolean onTouchEvent(android.view.MotionEvent)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.accounts.IAccountManager$Stub$Proxy: void invalidateAuthToken(java.lang.String,java.lang.String)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	
<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord addAppLocked(android.content.pm.ApplicationInfo,boolean)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.calendar.event.AttendeesView: void addAttendees(java.util.ArrayList)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.detail.ContactDetailFragment: void buildEntries()>	android.permission.READ_PHONE_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.detail.PhotoSelectionHandler: boolean handlePhotoActivityResult(int,int,android.content.Intent)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.activities.ContactEditorActivity: void onStart()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.VibratorService: void access$300(com.android.server.VibratorService)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	
<com.android.internal.policy.impl.LockPatternKeyguardView: void wakeWhenReadyTq(int)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.contacts.activities.ActionBarAdapter: boolean onClose()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.PostalAddressListAdapter: void bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.base.FrameFetch: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.server.input.InputManagerService: int interceptMotionBeforeQueueingWhenScreenOff(int)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.vcard.VCardParserImpl_V40: void parse(java.io.InputStream)>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.detail.PhotoSelectionHandler: long getWritableEntityId()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.OutgoingCallBroadcaster$OutgoingCallReceiver: void doReceive(android.content.Context,android.content.Intent)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.contacts.list.ProviderStatusWatcher$ProviderStatusListener: void onProviderStatusChange()>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.DirectoryListLoader: android.database.Cursor loadInBackground()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.media.IAudioService: void startBluetoothSco(android.os.IBinder)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<com.android.nfc.DeviceHost$DeviceHostListener: void onCardEmulationDeselected()>	android.permission.GET_TASKS	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.browser.NavTabScroller: void onLayout(boolean,int,int,int,int)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.server.VibratorService$VibrateThread: void run()>	android.permission.VIBRATE	android.permission.WAKE_LOCK	
<com.android.browser.BaseUi: void showWeb(boolean)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.server.am.ActivityManagerService: void updatePersistentConfiguration(android.content.res.Configuration)>	android.permission.WRITE_SETTINGS	android.permission.CHANGE_CONFIGURATION	
<com.android.gallery3d.app.AlbumSetPage: void doCluster(int)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.settings.inputmethod.UserDictionaryAddWordContents: void delete(android.content.Context)>	android.permission.READ_USER_DICTIONARY	android.permission.WRITE_USER_DICTIONARY	
<com.android.contacts.list.CustomContactListFilterActivity$AccountSet: java.util.ArrayList buildDiff()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.exchange.ExchangeService$2: void startSync(long,boolean)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.telephony.CallerInfoAsyncQuery$OnQueryCompleteListener: void onQueryComplete(int,java.lang.Object,com.android.internal.telephony.CallerInfo)>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.DeviceInfoSettings: void onActivityCreated(android.os.Bundle)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.deskclock.AlarmKlaxon: void onCreate()>	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	android.permission.WAKE_LOCK	
<com.android.gallery3d.ui.PhotoView: boolean slideToNextPicture()>	android.permission.NFC	android.permission.VIBRATE	
<android.filterfw.core.AsyncRunner$AsyncRunnerTask: android.filterfw.core.AsyncRunner$RunnerResult doInBackground(android.filterfw.core.SyncRunner[])>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.gallery3d.app.SlideshowPage$1: void removeAllComponents()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.gallery3d.app.AlbumSetPage$1: boolean removeComponent(com.android.gallery3d.ui.GLView)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<android.filterpacks.imageproc.FillLightFilter: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.view.IWindowSession$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.SYSTEM_ALERT_WINDOW	android.permission.WAKE_LOCK	
<com.android.mms.ui.ComposeMessageActivity: com.android.mms.ui.MessageItem getMessageItem(java.lang.String,long,boolean)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.SuggestionsAdapter$CursorSource: void runQuery(java.lang.CharSequence)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.editor.PhoneticNameEditorView: void onFieldChanged(java.lang.String,java.lang.String)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.LocationManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.ACCESS_MOCK_LOCATION	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_LOCATION_EXTRA_COMMANDS	
<com.android.exchange.adapter.AbstractSyncAdapter: java.lang.String getSyncKey()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.calendar.AllInOneActivity: boolean onOptionsItemSelected(android.view.MenuItem)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	android.permission.GET_ACCOUNTS	
<com.android.internal.widget.SlidingTab$OnTriggerListener: void onTrigger(android.view.View,int)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.contacts.list.LegacyPostalAddressListAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.calendar.CalendarController: void sendEventRelatedEventWithExtra(java.lang.Object,long,long,long,long,int,int,long,long)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.gallery3d.app.PhotoPage$1: void removeOneComponent(com.android.gallery3d.ui.GLView)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.settings.LocationSettings: void onActivityResult(int,int,android.content.Intent)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.internal.widget.multiwaveview.GlowPadView: void handleDown(android.view.MotionEvent)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.USE_CREDENTIALS	android.permission.READ_CONTACTS	android.permission.MANAGE_ACCOUNTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.activities.PeopleActivity: void createViewsAndFragments(android.os.Bundle)>	android.permission.NFC	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.view.WindowManagerPolicy: void notifyLidSwitchChanged(long,boolean)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.contacts.detail.ContactDetailFragment: void configureQuickFix()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.exchange.adapter.ContactsSyncAdapter: java.lang.String getSyncKey()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.ComposeMessageActivity$10: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.nfc.DeviceHost$DeviceHostListener: void onRemoteFieldActivated()>	android.permission.GET_TASKS	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.server.VibratorService: void doVibratorOn(long)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	
<com.android.phone.BluetoothHandsfree$7: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.contacts.activities.JoinContactActivity: boolean onQueryTextChange(java.lang.String)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.latin.suggestions.MoreSuggestionsView$1: boolean onCustomRequest(int)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.bluetooth.pbap.BluetoothPbapService: void access$900(com.android.bluetooth.pbap.BluetoothPbapService)>	android.permission.BLUETOOTH_ADMIN	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<android.provider.ContactsContract$Contacts: android.net.Uri getLookupUri(android.content.ContentResolver,android.net.Uri)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.model.AccountTypeManagerImpl: com.android.contacts.model.AccountTypeManager createAccountTypeManager(android.content.Context)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.MmsThumbnailPresenter: void presentImageThumbnail(com.android.mms.ui.SlideViewInterface,com.android.mms.model.ImageModel)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.activities.TransactionSafeActivity: void onBackPressed()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.email.service.MailService$6: void runInternal(java.lang.Object)>	android.permission.MANAGE_ACCOUNTS	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: boolean haveSomethingToCopyToSDCard(long)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.contacts.ContactSaveService: void deliverCallbackOnUiThread(android.content.Intent)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.calendar.DayView: boolean onKeyUp(int,android.view.KeyEvent)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.phone.CallNotifier: void onCustomRingQueryComplete()>	android.permission.VIBRATE	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	
<com.android.mms.ui.ComposeMessageActivity: void onRestart()>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.VibratorService$2: void run()>	android.permission.VIBRATE	android.permission.WAKE_LOCK	
<com.android.server.location.LocationBasedCountryDetector: void setCountryListener(android.location.CountryListener)>	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	
<com.android.phone.PhoneUtils: void mergeCalls(com.android.internal.telephony.CallManager)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<com.android.contacts.group.GroupDetailFragment: void updateAccountType(java.lang.String,java.lang.String)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.latin.SynchronouslyLoadedUserDictionary: void startDictionaryLoadingTaskLocked()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.settings.DateTimeSettingsSetupWizard: void onClick(android.view.View)>	android.permission.WRITE_SETTINGS	android.permission.SET_TIME_ZONE	
<android.bluetooth.IBluetoothA2dp$Stub: boolean connect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.server.pm.PackageManagerService: void killApplication(java.lang.String,int)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.inputmethod.latin.ContactsBinaryDictionary: void syncReloadDictionaryInternal()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.internal.policy.impl.KeyguardViewMediator: void doKeyguardLocked()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.internal.telephony.IccPhoneBookInterfaceManager: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	
<android.net.wifi.WifiStateMachine$InitialState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary: boolean isValidWord(java.lang.CharSequence)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.list.EmailAddressListAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.util.AccountPromptUtils: void launchAccountPrompt(android.app.Activity)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.exchange.adapter.AbstractSyncParser: boolean parse()>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.PostalAddressPickerFragment: void onAttach(android.app.Activity)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.activities.ShowOrCreateActivity: void onCreate(android.os.Bundle)>	android.permission.NFC	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.location.ILocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<android.net.ConnectivityManager: int startUsingNetworkFeature(int,java.lang.String)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.mms.ui.ClassZeroActivity: android.net.Uri storeMessage(android.telephony.SmsMessage)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.exchange.ExchangeService$1$1: void call(com.android.emailcommon.service.IEmailServiceCallback)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.telephony.IccSmsInterfaceManager: boolean updateMessageOnIccEf(int,int,byte[])>	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<android.bluetooth.IBluetoothA2dp: boolean connectSinkInternal(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.contacts.list.ContactEntryListFragment: void finish()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.bluetooth.IBluetoothHeadset: boolean startScoUsingVirtualVoiceCall(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.server.ConnectivityService: void handleDisconnect(android.net.NetworkInfo)>	android.permission.CHANGE_WIFI_STATE	android.permission.BROADCAST_STICKY	android.permission.ACCESS_NETWORK_STATE	
<com.android.providers.contacts.GlobalSearchSupport: android.database.Cursor handleSearchShortcutRefresh(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.app.SlideshowPage$SequentialSource: long reload()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.internal.telephony.DataConnectionTracker: void onDisconnectDone(int,android.os.AsyncResult)>	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	
<com.android.browser.Controller: com.android.browser.Tab openTab(java.lang.String,com.android.browser.Tab,boolean,boolean)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.providers.downloads.DownloadService$1: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.contacts.calllog.CallLogAdapter: void startRequestProcessing()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WRITE_CALL_LOG	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.interactions.PhoneNumberInteraction$PhoneDisambiguationDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.exchange.adapter.ContactsSyncAdapter$EasContactsSyncParser: void changeParser(com.android.exchange.adapter.ContactsSyncAdapter$ContactOperations)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.net.IConnectivityManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.BROADCAST_STICKY	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.settings.Settings$ApplicationSettingsActivity: void onResume()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.browser.BrowserBookmarksPage$OpenAllInTabsTask: java.lang.Object doInBackground(java.lang.Object[])>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.bluetooth.BluetoothDeviceProfileState$IncomingA2dp: void enter()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<android.filterpacks.imageproc.FlipFilter: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.inputmethod.keyboard.LatinKeyboardView: boolean invokeCustomRequest(int)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.calendar.EventInfoFragment: boolean saveResponse()>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.email.service.AttachmentDownloadService$DownloadSet: void access$800(com.android.email.service.AttachmentDownloadService$DownloadSet)>	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.emailcommon.service.IEmailService: void startSync(long,boolean)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.keyboard.internal.KeyboardState$SwitchActions: void startLongPressTimer(int)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.list.ProfileAndContactsLoader: android.database.MatrixCursor loadProfile()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.list.PostalAddressPickerFragment: void onClose()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.Tab: void postCapture()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.settings.bluetooth.CachedBluetoothDevice: boolean ensurePaired()>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.suggestions.SuggestionsView$Listener: boolean addWordToDictionary(java.lang.String)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$ProvisionDiscoveryState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.mms.transaction.RetrieveTransaction: void run()>	android.permission.CHANGE_WIFI_STATE	android.permission.READ_SMS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SMS	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.RECEIVE_SMS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.phone.BluetoothHeadsetService$2: void onReceive(android.content.Context,android.content.Intent)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.LatinIME$UIHandler: void postUpdateBigramPredictions()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.location.LocationManager: void requestLocationUpdates(long,float,android.location.Criteria,android.location.LocationListener,android.os.Looper)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.email.Controller: void sendPendingMessages(long)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.ProviderStatusWatcher$LoaderTask: void onPostExecute(java.lang.Object)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.CustomContactListFilterActivity$AccountDisplay: void buildDiff(java.util.ArrayList)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.ContactBrowseListFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.base.OutputStreamTarget: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.filterpacks.videosink.MediaEncoderFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.google.android.mms.util.AbstractCache: boolean put(java.lang.Object,java.lang.Object)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.contacts.activities.PeopleActivity: void onStart()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.inputmethod.UserDictionaryList: void onResume()>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_USER_DICTIONARY	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.settings.inputmethod.SpellCheckersSettings: void onPause()>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.calllog.CallLogFragment: void updateOnTransition(boolean)>	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WRITE_CALL_LOG	
<com.android.phone.BluetoothHandsfree: android.bluetooth.AtCommandResult access$6000(com.android.phone.BluetoothHandsfree)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<android.net.wifi.WifiStateMachine$DefaultState: void enter()>	android.permission.CHANGE_WIFI_STATE	android.permission.GET_TASKS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.gallery3d.app.Gallery: boolean onOptionsItemSelected(android.view.MenuItem)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<android.server.BluetoothInputProfileHandler: boolean disconnectInputDeviceInternal(android.bluetooth.BluetoothDevice)>	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.settings.widget.SettingsAppWidgetProvider$StateTracker: int getActualState(android.content.Context)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: boolean access$2800(com.android.mms.ui.ComposeMessageActivity,long)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.inputmethod.latin.LatinIME: void handleBackspace(int)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.providers.downloads.DownloadService: void access$800(com.android.providers.downloads.DownloadService,long)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.contacts.list.EmailAddressPickerFragment: void onAttach(android.app.Activity)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.imageproc.BitmapOverlayFilter: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.browser.NavigationBarPhone: void onAction(java.lang.String,java.lang.String,java.lang.String)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.settings.bluetooth.BluetoothEventManager: void dispatchDeviceAdded(com.android.settings.bluetooth.CachedBluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.gallery3d.data.ClusterAlbumSet: void updateClusters()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<android.bluetooth.IBluetooth$Stub$Proxy: boolean createBond(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.model.AccountTypeManager: java.util.Map getUsableInvitableAccountTypes()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.camera.VideoCamera: void startPreview()>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<android.app.DownloadManager: long enqueue(android.app.DownloadManager$Request)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.email.activity.MessageCompose$SendOrSaveMessageTask: void callOnPostExecuteForTest(java.lang.Object)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.server.input.InputManagerService$Callbacks: int interceptMotionBeforeQueueingWhenScreenOff(int)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.gallery3d.ui.GLView: boolean removeComponent(com.android.gallery3d.ui.GLView)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService$AndroidSpellCheckerSession: android.view.textservice.SuggestionsInfo[] onGetSuggestionsMultiple(android.view.textservice.TextInfo[],int,boolean)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.internal.policy.impl.KeyguardViewMediator: void doKeyguardTimeout()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.mms.transaction.SmsReceiverService: void access$200(com.android.mms.transaction.SmsReceiverService)>	android.permission.READ_SMS	android.permission.VIBRATE	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.inputmethod.latin.ContactsBinaryDictionary: void loadDictionaryAsync()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.email.activity.MessageCompose$6: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.pm.PackageManagerService: int deletePackageX(java.lang.String,boolean,boolean,int)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.providers.contacts.ContactsProvider2: android.database.Cursor queryWithContactIdAndLookupKey(android.database.sqlite.SQLiteQueryBuilder,android.database.sqlite.SQLiteDatabase,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,android.os.CancellationSignal)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.app.KeyguardManager: void exitKeyguardSecurely(android.app.KeyguardManager$OnKeyguardExitResult)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.DISABLE_KEYGUARD	android.permission.GET_ACCOUNTS	
<com.android.server.am.ActivityManagerService: void makeAppNotRespondingLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.settings.net.NetworkPolicyEditor$1: java.lang.Void doInBackground(java.lang.Void[])>	android.permission.ACCESS_WIFI_STATE	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.model.AccountTypeManagerImpl: java.util.Map findUsableInvitableAccountTypes(android.content.Context)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.detail.ContactDetailFragment$AddToMyContactsQuickFix: void execute()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.app.PhotoDataAdapter: void updateCurrentIndex(int)>	android.permission.NFC	android.permission.VIBRATE	
<com.android.internal.widget.multiwaveview.GlowPadView$1: void onAnimationEnd(android.animation.Animator)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.USE_CREDENTIALS	android.permission.READ_CONTACTS	android.permission.MANAGE_ACCOUNTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.camera.ui.SecondLevelIndicatorControlBar: void onSettingChanged()>	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.RECORD_AUDIO	
<com.android.settings.SettingsPreferenceFragment: void onPause()>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.activities.PeopleActivity$ContactBrowserActionListener: void onFinishAction()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.imageproc.VignetteFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.deskclock.AlarmReceiver$1: void run()>	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.browser.TabBar$TabView: void onClick(android.view.View)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.browser.ActivityController: void onSaveInstanceState(android.os.Bundle)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.contacts.editor.StructuredNameEditorView: void rebuildFullName(com.android.contacts.model.EntityDelta$ValuesDelta)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.filterpacks.base.FrameFetch: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.emailcommon.service.IEmailService$Stub$Proxy: int searchMessages(long,com.android.emailcommon.service.SearchParams,long)>	android.permission.VIBRATE	android.permission.READ_CALENDAR	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.LocationSettings: void onStart()>	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.KeyguardViewCallback: void keyguardDone(boolean)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.settings.bluetooth.DevicePickerFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.calendar.agenda.AgendaFragment: void search(java.lang.String,android.text.format.Time)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<android.app.ActivityManager: void restartPackage(java.lang.String)>	android.permission.KILL_BACKGROUND_PROCESSES	android.permission.RESTART_PACKAGES	
<android.content.SyncManager: void <init>	android.permission.VIBRATE	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.browser.view.PieMenu: boolean onTouchEvent(android.view.MotionEvent)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.contacts.list.ProfileAndContactsLoader: java.lang.Object loadInBackground()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.server.ConnectivityService: void access$1100(com.android.server.ConnectivityService,android.net.NetworkInfo)>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.contacts.group.GroupEditorFragment: void onActivityCreated(android.os.Bundle)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.bluetooth.BluetoothTetheringDataTracker: boolean teardown()>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.phone.BluetoothHandsfree$11: android.bluetooth.AtCommandResult handleActionCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.gallery3d.ui.TileImageView: void removeAllComponents()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.server.ConnectivityService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.BROADCAST_STICKY	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<android.filterpacks.imageproc.PosterizeFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.contacts.socialwidget.SocialWidgetProvider$1: void onLoadComplete(android.content.Loader,java.lang.Object)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.am.ActivityManagerService: void killApplicationWithUid(java.lang.String,int)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.inputmethod.keyboard.KeyboardSwitcher: void startLongPressTimer(int)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.email.mail.Store: android.os.Bundle checkSettings()>	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	
<com.android.internal.telephony.IccPhoneBookInterfaceManager: boolean updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	
<com.android.calendar.AllInOneActivity: void handleSelectSyncedCalendarsClicked(android.view.View)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.server.ConnectivityService: void setNetworkPreference(int)>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<android.view.IApplicationToken$Stub$Proxy: void windowsVisible()>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<android.view.IWindowManager: void exitKeyguardSecurely(android.view.IOnKeyguardExitResult)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.DISABLE_KEYGUARD	android.permission.GET_ACCOUNTS	
<com.android.nfc.NfcService: void onCardEmulationAidSelected(byte[])>	android.permission.GET_TASKS	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.exchange.EmailSyncAdapterService: void access$000(android.content.Context,android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.Controller: void handleNewIntent(android.content.Intent)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.app.ActivityManagerNative: boolean bindBackupAgent(android.content.pm.ApplicationInfo,int)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.exchange.ExchangeService: void run()>	android.permission.VIBRATE	android.permission.READ_CALENDAR	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.transaction.MessagingNotification$1: void run()>	android.permission.READ_SMS	android.permission.VIBRATE	android.permission.WRITE_SMS	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.contacts.ContactPhotoManagerImpl$LoaderThread: void loadThumbnails(boolean)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.activities.ConfirmAddDetailActivity$PersistTask: java.lang.Integer doInBackground(com.android.contacts.model.EntityDeltaList[])>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.editor.ContactEditorFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.activities.ContactEditorActivity: void onServiceCompleted(android.content.Intent)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.Settings$WifiP2pSettingsActivity: void onResume()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.phone.BluetoothHandsfree$8: android.bluetooth.AtCommandResult handleActionCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.mms.ui.QuickContactDivot: void assignContactFromPhone(java.lang.String,boolean)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.list.EmailAddressListAdapter: android.net.Uri getDataUri(int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.imageproc.ToRGBFilter: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.settings.bluetooth.DeviceProfilesSettings: void refreshProfilePreference(android.preference.CheckBoxPreference,com.android.settings.bluetooth.LocalBluetoothProfile)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.nfc.NfcService$NfcAdapterService: boolean enableNdefPush()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.BLUETOOTH	
<android.net.ConnectivityManager: int stopUsingNetworkFeature(int,java.lang.String)>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.phone.OtaUtils: void otaShowSpcErrorNotice(int)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<android.accounts.AccountManager$AmsTask$Response: void onResult(android.os.Bundle)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.camera.ui.InLineSettingItem$Listener: void onSettingChanged()>	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.RECORD_AUDIO	
<com.android.development.AccountsTester: boolean onContextItemSelected(android.view.MenuItem)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.settings.inputmethod.InputMethodAndLanguageSettings: void onActivityResult(int,int,android.content.Intent)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<android.content.SyncManager: void onAccountsUpdated(android.accounts.Account[])>	android.permission.VIBRATE	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.server.usb.UsbService: void <init>	android.permission.VIBRATE	android.permission.BROADCAST_STICKY	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WRITE_SETTINGS	
<android.net.wifi.WifiWatchdogStateMachine$OnlineWatchState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.gallery3d.app.AlbumSetPage: void setContentPane(com.android.gallery3d.ui.GLView)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.phone.InCallScreen: void internalHangup()>	android.permission.VIBRATE	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	
<com.android.settings.inputmethod.InputMethodAndLanguageSettings: void onPause()>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.LatinIME: void access$700(com.android.inputmethod.latin.LatinIME)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.settings.widget.SettingsAppWidgetProvider: void onReceive(android.content.Context,android.content.Intent)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.settings.bluetooth.BluetoothDiscoverableEnabler: void setEnabled(boolean)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.gallery3d.app.StateManager: void resume()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.calllog.CallLogAdapter: void enqueueRequest(java.lang.String,java.lang.String,com.android.contacts.calllog.ContactInfo,boolean)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WRITE_CALL_LOG	android.permission.READ_SYNC_SETTINGS	
<android.bluetooth.BluetoothDeviceProfileState$OutgoingA2dp: void enter()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<android.provider.Browser: void truncateHistory(android.content.ContentResolver)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.email.SingleRunningTask: void runInternal(java.lang.Object)>	android.permission.MANAGE_ACCOUNTS	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.server.wm.WindowManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.WRITE_SETTINGS	android.permission.DISABLE_KEYGUARD	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<android.provider.CallLog$Calls: void removeExpiredEntries(android.content.Context)>	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WRITE_CALL_LOG	
<com.android.phone.PhoneUtils: boolean hangup(com.android.internal.telephony.CallManager)>	android.permission.VIBRATE	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	
<com.android.browser.Controller: void access$100(com.android.browser.Controller,android.os.Bundle,android.content.Intent,long,boolean)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.server.am.ActivityStack: void startPausingLocked(boolean,boolean)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.gallery3d.app.SlideshowPage$1: void removeOneComponent(com.android.gallery3d.ui.GLView)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.settings.wifi.AdvancedWifiSettings: void onActivityCreated(android.os.Bundle)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.imageproc.CropFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.gallery3d.ui.PhotoView: void switchToHitPicture(int,int)>	android.permission.NFC	android.permission.VIBRATE	
<com.android.email.activity.MessageListFragment: void autoRefreshStaleMailbox()>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothHandsfree$22: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<android.server.BluetoothBondState: void setProfilePriorities(java.lang.String,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.vcard.VCardParser_V30: void parse(java.io.InputStream)>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.vcard.VCardEntry$OrganizationData: void constructInsertOperation(java.util.List,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.exchange.adapter.ContactsSyncAdapter: boolean parse(java.io.InputStream)>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.base.ObjectSource: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.internal.policy.impl.KeyguardScreenCallback: void pokeWakelock()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<android.os.SystemVibrator: void vibrate(long)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	
<com.android.settings.wifi.WifiSettingsForSetupWizardXL: void refreshAccessPoints(boolean)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	
<com.android.internal.policy.impl.PatternUnlockScreen$UnlockPatternListener: void onPatternDetected(java.util.List)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.exchange.adapter.ItemOperationsParser: void parseResponse()>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.email.EmailConnectivityManager: void waitForConnectivity()>	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<com.android.contacts.calllog.CallLogAdapter: boolean queryContactInfo(java.lang.String,java.lang.String,com.android.contacts.calllog.ContactInfo)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WRITE_CALL_LOG	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.PhoneApp: void initForNewRadioTechnology()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<android.accounts.AccountManager: android.accounts.AccountManagerFuture editProperties(java.lang.String,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<android.server.BluetoothA2dpService: boolean disconnectSinkInternal(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.internal.widget.WaveView: void vibrate(long)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	
<com.android.phone.BluetoothHandsfree: com.android.phone.BluetoothHandsfree init(android.content.Context,com.android.internal.telephony.CallManager)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.browser.CrashRecoveryHandler$2: void run()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.inputmethod.latin.ContactsDictionary: boolean isValidWord(java.lang.CharSequence)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.mms.ui.ManageSimMessages: void access$600(com.android.mms.ui.ManageSimMessages)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.browser.BrowserActivity: void onCreate(android.os.Bundle)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	
<com.android.gallery3d.ui.GLRootView: boolean dispatchTouchEvent(android.view.MotionEvent)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.detail.ContactDetailFragment$QuickFix: boolean isApplicable()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.email.MessagingController: void loadAttachment(long,long,long,long,com.android.email.MessagingListener,boolean)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.calendar.SearchActivity$1: void onChange(boolean)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.settings.inputmethod.InputMethodAndLanguageSettings: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.contacts.list.DefaultContactBrowseListFragment: void finish()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.Settings$DeviceInfoSettingsActivity: void onResume()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<android.bluetooth.BluetoothDeviceProfileState$IncomingHid: void enter()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.camera.EffectsRecorder: void startRecording()>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.wallpaper.grass.GrassRS: void start()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.phone.PhoneApp: void updateInCallScreen()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<android.filterpacks.imageproc.DuotoneFilter: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.providers.downloads.DownloadThread: void writeDataToDestination(com.android.providers.downloads.DownloadThread$State,byte[],int)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.email.RefreshManager: boolean loadMoreMessages(long,long)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.READ_SYNC_SETTINGS	
<android.accounts.AccountManager: android.accounts.AccountManagerFuture addAccount(java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<android.os.IVibratorService: void vibrate(long,android.os.IBinder)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	
<com.android.gallery3d.app.AlbumSetPage: void clearLoadingBit(int)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.mms.ui.ConversationList: void onListItemClick(android.widget.ListView,android.view.View,int,long)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.contacts.activities.PeopleActivity$ContactBrowserActionListener: void onViewContactAction(android.net.Uri)>	android.permission.READ_PHONE_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.activities.AttachPhotoActivity$1: void onContactLoaded(com.android.contacts.ContactLoader$Result)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.calendar.agenda.AgendaFragment$2: void run()>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.vcard.VCardInterpreter: void onEntryEnded()>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.PhoneApp: void access$1100(com.android.phone.PhoneApp)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.gallery3d.ui.AlbumSetSlidingWindow: com.android.gallery3d.ui.BitmapTexture getLoadingTexture()>	android.permission.NFC	android.permission.VIBRATE	android.permission.INTERNET	android.permission.SET_WALLPAPER	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.email.SecurityPolicy: void onDeviceAdminReceiverMessage(android.content.Context,int)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	android.permission.WAKE_LOCK	
<com.android.settings.accounts.AccountPreferenceBase: void onResume()>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_USER_DICTIONARY	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.phone.CallController: void placeCall(android.content.Intent)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: int access$3100(com.android.mms.ui.ComposeMessageActivity,long)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.providers.contacts.GlobalSearchSupport$SearchSuggestion: java.lang.String buildUri()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.InCallScreen: void addVoiceMailNumberPanel()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.mms.data.Conversation$3: void run()>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.phone.BluetoothHandsfree$14: android.bluetooth.AtCommandResult handleReadCommand()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.phone.BluetoothHandsfree$8: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.mms.util.Recycler: void deleteOldMessages(android.content.Context)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.settings.tts.TtsEngineSettingsFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.mms.transaction.RetrieveTransaction: byte[] sendPdu(byte[])>	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	
<com.android.internal.policy.impl.PhoneWindowManager: int interceptKeyBeforeQueueing(android.view.KeyEvent,int,boolean)>	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.CALL_PHONE	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.browser.TabControl: com.android.browser.Tab createNewTab()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.server.VibratorService$Vibration: void binderDied()>	android.permission.VIBRATE	android.permission.WAKE_LOCK	
<com.android.contacts.activities.ConfirmAddDetailActivity: com.android.contacts.model.EntityDelta addEditableRawContact(android.content.Context,com.android.contacts.model.EntityDeltaList)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void listen(java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)>	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	
<com.android.browser.TabBar: void onClick(android.view.View)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.camera.CameraScreenNail: void draw(com.android.gallery3d.ui.GLCanvas,int,int,int,int)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.phone.InCallScreen: void onMMIComplete(com.android.internal.telephony.MmiCode)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.contacts.detail.ContactDetailLayoutController: void showEmptyState()>	android.permission.READ_PHONE_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.camera.ui.IndicatorControlWheelContainer: void onSettingChanged()>	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.RECORD_AUDIO	
<com.android.providers.contacts.ContactsProvider2: long insertStatusUpdate(android.content.ContentValues)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.bluetooth.IBluetoothHeadset$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<android.net.wifi.WifiStateMachine$DisconnectingState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.bluetooth.opp.BluetoothOppTransferActivity: void onCreate(android.os.Bundle)>	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.BLUETOOTH	
<com.android.providers.downloads.DownloadInfo: android.net.Uri getAllDownloadsUri()>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.gallery3d.ui.ScrollBarView: boolean removeComponent(com.android.gallery3d.ui.GLView)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<android.filterpacks.imageproc.BlendFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.calendar.month.SimpleDayPickerFragment: void onCreate(android.os.Bundle)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<android.filterpacks.imageproc.DrawRectFilter: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.email.activity.MessageListFragment: void onLoadMoreMessages()>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.camera.Camera: void onThumbnailClicked(android.view.View)>	android.permission.NFC	android.permission.VIBRATE	
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary: boolean hasContentChanged()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.nfc.P2pLinkManager$SendTask: java.lang.Void doInBackground(java.lang.Void[])>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.phone.PhoneUtils: boolean activateSpeakerIfDocked(com.android.internal.telephony.Phone)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<android.app.ActivityManagerNative: boolean shutdown(int)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.nfc.DeviceHost$DeviceHostListener: void onSeApduReceived(byte[])>	android.permission.GET_TASKS	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.settings.wifi.p2p.WifiP2pSettings: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.camera.VideoCamera: void onPause()>	android.permission.NFC	android.permission.VIBRATE	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	android.permission.RECORD_AUDIO	
<com.android.contacts.activities.NonPhoneActivity: void onStart()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.AccountFilterActivity$FilterLoader: java.util.List loadInBackground()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.am.ActivityManagerService: void serviceTimeout(com.android.server.am.ProcessRecord)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<android.provider.Contacts$People: android.net.Uri addToGroup(android.content.ContentResolver,long,java.lang.String)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.LocationManagerService: void requestLocationUpdates(java.lang.String,android.location.Criteria,long,float,boolean,android.location.ILocationListener)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.browser.DataController$DataControllerHandler: void doSaveThumbnail(com.android.browser.Tab)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.provider.CalendarContract$CalendarAlerts: android.net.Uri insert(android.content.ContentResolver,long,long,long,long,int)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.contacts.group.GroupBrowseListAdapter: int getSelectedGroupPosition()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.latin.LatinIME: void updateSuggestions()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.location.ILocationManager$Stub$Proxy: android.location.Location getLastKnownLocation(java.lang.String)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.emailcommon.service.EmailServiceProxy$6: void run()>	android.permission.VIBRATE	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.bluetooth.DevicePickerFragment: void createDevicePreference(com.android.settings.bluetooth.CachedBluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<android.bluetooth.BluetoothDeviceProfileState$BondedDevice: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.browser.NavScreen: void access$000(com.android.browser.NavScreen,com.android.browser.Tab)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.mms.data.WorkingMessage$2: void run()>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.ui.PhotoView: void render(com.android.gallery3d.ui.GLCanvas)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<android.telephony.TelephonyManager: void listen(android.telephony.PhoneStateListener,int)>	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	
<com.android.inputmethod.latin.WhitelistDictionary: boolean isValidWord(java.lang.CharSequence)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.gallery3d.ui.SlotView: void renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.gallery3d.ui.PhotoView$MyGestureListener: boolean onSingleTapUp(float,float)>	android.permission.NFC	android.permission.VIBRATE	
<android.server.BluetoothService: void handlePanDeviceStateChange(android.bluetooth.BluetoothDevice,java.lang.String,int,int)>	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.settings.Settings$TetherSettingsActivity: void onResume()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.wallpaper.grass.GrassRS$TimezoneTracker: void onReceive(android.content.Context,android.content.Intent)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.exchange.ExchangeService$2: void loadAttachment(long,boolean)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$DefaultState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.contacts.list.JoinContactListFragment: void setQueryString(java.lang.String,boolean)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.detail.ContactDetailUpdatesFragment: com.android.contacts.model.AccountType getAccountTypeForStreamItemEntry(com.android.contacts.util.StreamItemEntry)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.latin.ExpandableBinaryDictionary: void syncReloadDictionaryIfRequired()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.email.activity.ContactStatusLoader: com.android.email.activity.ContactStatusLoader$Result getContactInfo(android.content.Context,java.lang.String)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.PrivacySettings: void onCreate(android.os.Bundle)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.READ_PHONE_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.phone.BluetoothHeadsetService: void onDestroy()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.phone.BluetoothAtPhonebook$2: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.server.input.InputManagerService$Callbacks: android.view.KeyEvent dispatchUnhandledKey(com.android.server.input.InputWindowHandle,android.view.KeyEvent,int)>	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.CALL_PHONE	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.browser.BrowserBookmarksPage$LookupBookmarkCount: java.lang.Integer doInBackground(java.lang.Long[])>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.phone.CallNotifier: com.android.phone.CallNotifier init(com.android.phone.PhoneApp,com.android.internal.telephony.Phone,com.android.phone.Ringer,com.android.phone.BluetoothHandsfree,com.android.phone.CallLogAsync)>	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	
<com.android.mms.data.Conversation: void startDeleteAll(com.android.mms.data.Conversation$ConversationQueryHandler,int,boolean)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<android.media.IMediaScannerListener$Stub$Proxy: void scanCompleted(java.lang.String,android.net.Uri)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.internal.telephony.gsm.SIMRecords: void onReady()>	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	
<com.android.voicedialer.RecognizerEngine: void onRecognitionSuccess(com.android.voicedialer.RecognizerClient)>	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.contacts.detail.ContactDetailFragment$AddToMyContactsQuickFix: boolean isApplicable()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.NavScreen: void openNewTab()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.content.SyncManager: void sendCheckAlarmsMessage()>	android.permission.VIBRATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<com.android.providers.downloads.DownloadInfo: android.net.Uri getMyDownloadsUri()>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<android.net.NetworkPolicyManager: void setRestrictBackground(boolean)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	
<com.android.soundrecorder.SoundRecorder: void onClick(android.view.View)>	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.gallery3d.app.Gallery: void startDefaultPage()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.calendar.CalendarController$EventHandler: void eventsChanged()>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.contacts.widget.PinnedHeaderListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.vcard.VCardParserImpl_V30: void handleNest()>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.net.ConnectivityManager: int untether(java.lang.String)>	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.exchange.ExchangeService$1: void sendMessageStatus(long,java.lang.String,int,int)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.interactions.ContactDeletionInteraction: void onLoadFinished(android.content.Loader,java.lang.Object)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.ContactBrowseListFragment$ContactLookupTask: void onPostExecute(java.lang.Object)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.MessageListAdapter: void onContentChanged()>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.server.am.BroadcastQueue: void broadcastTimeoutLocked(boolean)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.internal.telephony.gsm.GsmServiceStateTracker: void pollState()>	android.permission.VIBRATE	android.permission.BROADCAST_STICKY	android.permission.SET_TIME_ZONE	android.permission.WAKE_LOCK	
<com.android.exchange.ExchangeService$2: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.VIBRATE	android.permission.READ_CALENDAR	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.camera.VideoCamera: void onThumbnailClicked(android.view.View)>	android.permission.NFC	android.permission.VIBRATE	
<android.media.IAudioService$Stub: void setMode(int,android.os.IBinder)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<com.android.systemui.SystemUIService: void onCreate()>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.settings.bluetooth.CachedBluetoothDevice: void disconnect(com.android.settings.bluetooth.LocalBluetoothProfile)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.server.ConnectivityService: boolean setRadio(int,boolean)>	android.permission.CHANGE_WIFI_STATE	android.permission.CHANGE_NETWORK_STATE	
<com.android.calendar.DeleteEventHelper$5: void onClick(android.content.DialogInterface,int)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<android.filterpacks.imageproc.Invert: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.internal.util.StateMachine$SmHandler: void invokeExitMethods(com.android.internal.util.StateMachine$SmHandler$StateInfo)>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.contacts.editor.PhoneticNameEditorView: void onLabelRebuilt()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.CountryDetectorService$2: void run()>	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	
<android.server.BluetoothService: boolean notifyIncomingA2dpConnection(java.lang.String,boolean)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.browser.Tab: void restoreState(android.os.Bundle)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.bluetooth.IBluetoothA2dp$Stub: boolean resumeSink(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<android.filterfw.core.Filter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.vcard.VCardEntry$AnniversaryData: void constructInsertOperation(java.util.List,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.activities.AttachPhotoActivity$2: void onLoadComplete(android.content.Loader,com.android.contacts.ContactLoader$Result)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.camera.ui.IndicatorButton$Listener: void onSettingChanged()>	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.RECORD_AUDIO	
<android.bluetooth.BluetoothA2dp: boolean disconnect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.server.TelephonyRegistry: void listen(java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)>	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	
<android.app.IActivityManager: boolean shutdown(int)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.internal.policy.impl.LockPatternKeyguardView$2: void userActivity(android.view.View)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.inputmethod.latin.ExpandableDictionary$LoadDictionaryTask: void run()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.activities.NonPhoneActivity: void onCreate(android.os.Bundle)>	android.permission.NFC	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.policy.impl.KeyguardUpdateMonitor: void handleSimStateChange(com.android.internal.policy.impl.KeyguardUpdateMonitor$SimArgs)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<android.net.wifi.WifiStateMachine$SoftApStartingState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.browser.CrashRecoveryHandler: void startRecovery(android.content.Intent)>	android.permission.INTERNET	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.phone.BluetoothHeadsetService$6: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<android.server.BluetoothA2dpService: void onConnectSinkResult(java.lang.String,boolean)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.phone.BluetoothHandsfree$16: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.calendar.agenda.AgendaWindowAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.server.usb.UsbService: void systemReady()>	android.permission.VIBRATE	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	
<com.android.settings.bluetooth.DeviceProfilesSettings: void refresh()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.LatinIME$UIHandler: void postUpdateSuggestions()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.browser.view.BasePieView: void layout(int,int,boolean,float,int)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.nfc.nxp.NativeNfcManager: void notifySeMifareAccess(byte[])>	android.permission.GET_TASKS	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.mms.util.DownloadManager: java.lang.String getMessage(android.net.Uri)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.providers.contacts.ContactsProvider2: java.lang.String getType(android.net.Uri)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.latin.suggestions.SuggestionsView$Listener: void pickSuggestionManually(int,java.lang.CharSequence,int,int)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.camera.ui.InLineSettingKnob$3: boolean onTouch(android.view.View,android.view.MotionEvent)>	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.RECORD_AUDIO	
<com.android.contacts.ContactSaveService: void onHandleIntent(android.content.Intent)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.app.DownloadManager: android.net.Uri getUriForDownloadedFile(long)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<android.net.INetworkPolicyManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.ACCESS_WIFI_STATE	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.camera.Camera: boolean onOptionsItemSelected(android.view.MenuItem)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.mms.ui.ComposeMessageActivity: android.net.Uri getContactUriForEmail(java.lang.String)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.policy.impl.AccountUnlockScreen: void <init>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.contacts.list.PhoneNumberPickerFragment: boolean isSyncActive()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	
<com.android.settings.bluetooth.BluetoothEventManager: boolean readPairedDevices()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.gallery3d.ui.ScrollBarView: void renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.phone.PhoneUtils: void setAudioMode()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<com.android.phone.BluetoothHandsfree$SignalScoCloseThread: void shutdown()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.editor.ContactEditorFragment$2: void onRequest(int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.bluetooth.IBluetoothA2dp$Stub: boolean disconnectSinkInternal(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.mms.ui.ComposeMessageActivity: boolean isDrmRingtoneWithRights(long)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.contacts.calllog.CallLogFragment: void startCallsQuery()>	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.contacts.list.LegacyPostalAddressListAdapter: android.net.Uri getContactUri(int,android.database.Cursor,int,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.EmergencyCallHelper: void onRetryTimeout()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary: void getBigrams(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.net.DhcpStateMachine$StoppedState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.phone.OutgoingCallBroadcaster$OutgoingCallReceiver: void onReceive(android.content.Context,android.content.Intent)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.mms.ui.QuickContactDivot: void assignContactFromEmail(java.lang.String)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.camera.ui.IndicatorControlWheel: void onSettingChanged()>	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.RECORD_AUDIO	
<com.android.settings.widget.SettingsAppWidgetProvider$BluetoothStateTracker$1: java.lang.Void doInBackground(java.lang.Void[])>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.browser.Controller: void start(android.content.Intent)>	android.permission.INTERNET	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.gallery3d.ui.PhotoView: boolean dispatchTouchEvent(android.view.MotionEvent)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.browser.GoogleAccountLogin: void run(android.accounts.AccountManagerFuture)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.exchange.ExchangeService$1$4: void call(com.android.emailcommon.service.IEmailServiceCallback)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<android.net.wifi.WifiManager: void setFrequencyBand(int,boolean)>	android.permission.CHANGE_WIFI_STATE	android.permission.WRITE_SETTINGS	
<com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager: java.util.List getAdnRecordsInEf(int)>	android.permission.READ_CONTACTS	android.permission.WAKE_LOCK	
<com.android.server.am.ActivityStack: void scheduleIdleLocked()>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.contacts.ContactsActivity: boolean onSearchRequested()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.common.widget.GroupingListAdapter: void bindChildView(android.view.View,android.content.Context,android.database.Cursor)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WRITE_CALL_LOG	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.ContactLoader: void loadDirectoryMetaData(com.android.contacts.ContactLoader$Result)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.inputmethod.accessibility.AccessibilityEntityProvider: boolean performAction(int,int,android.os.Bundle)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.detail.ContactLoaderFragment: boolean onOptionsItemSelected(android.view.MenuItem)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.bluetooth.BluetoothDevice: boolean createBond()>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean startScoUsingVirtualVoiceCall(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.musicfx.ControlPanelPicker: void onCreate(android.os.Bundle)>	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.BLUETOOTH	
<com.android.vcard.VCardEntry$NicknameData: void constructInsertOperation(java.util.List,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.providers.downloads.StorageManager: void access$100(com.android.providers.downloads.StorageManager)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.contacts.calllog.CallLogAdapter: void bindStandAloneView(android.view.View,android.content.Context,android.database.Cursor)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WRITE_CALL_LOG	android.permission.READ_SYNC_SETTINGS	
<com.android.bluetooth.opp.BluetoothOppService: int onStartCommand(android.content.Intent,int,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.settings.AccessibilitySettings: void handleToggleLargeTextPreferenceClick()>	android.permission.WRITE_SETTINGS	android.permission.CHANGE_CONFIGURATION	
<com.android.mms.transaction.SmsReceiverService: android.net.Uri insertMessage(android.content.Context,android.telephony.SmsMessage[],int,java.lang.String)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.contacts.list.DefaultContactBrowseListFragment: void notifyInvalidSelection()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.email.service.MailService: boolean syncOneAccount(com.android.email.Controller,long,int)>	android.permission.READ_PHONE_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.latin.UserHistoryDictionary: com.android.inputmethod.latin.UserHistoryDictionary getInstance(android.content.Context,java.lang.String,int,android.content.SharedPreferences)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.settings.Settings$WifiSettingsActivity: void onResume()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.camera.CaptureAnimManager: boolean drawAnimation(com.android.gallery3d.ui.GLCanvas,com.android.camera.CameraScreenNail,com.android.gallery3d.ui.RawTexture)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.contacts.editor.SelectAccountDialogFragment$1: void onClick(android.content.DialogInterface,int)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.camera.ui.OtherSettingsPopup: void onSettingChanged()>	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.RECORD_AUDIO	
<com.android.mms.transaction.SmsReceiverService: void handleServiceStateChanged(android.content.Intent)>	android.permission.READ_SMS	android.permission.VIBRATE	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.contacts.activities.ActionBarAdapter$Listener: void onAction(int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.ui.CropView: boolean removeComponent(com.android.gallery3d.ui.GLView)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.settings.deviceinfo.UsbSettings: void onCreate(android.os.Bundle)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.READ_PHONE_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.camera.ui.OtherSettingsPopup$Listener: void onSettingChanged()>	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.RECORD_AUDIO	
<com.android.settings.bluetooth.DockService: void connectIfEnabled(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.server.connectivity.Vpn: void startLegacyVpn(com.android.internal.net.VpnConfig,java.lang.String[],java.lang.String[])>	android.permission.VIBRATE	android.permission.BROADCAST_STICKY	
<com.android.internal.policy.impl.KeyguardViewMediator: void handleWakeWhenReady(int)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.inputmethod.latin.Suggest: void initAsynchronously(android.content.Context,java.util.Locale)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.accounts.AccountManager$8: android.accounts.AccountManagerFuture start()>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.mms.ui.MessageListAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.calendar.alerts.AlertActivity: void dismissAlarm(long)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void initialize(android.os.Bundle,long)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.activities.PeopleActivity: void onNewIntent(android.content.Intent)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.widget.LockPatternView: void notifyCellAdded()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.voicedialer.CommandRecognizerEngine: void setupGrammar()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.editor.EventFieldEditorView: void onFieldChanged(java.lang.String,java.lang.String)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.policy.impl.FaceUnlock: void handlePokeWakelock(int)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.settings.DateTimeSettings: void onResume()>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_USER_DICTIONARY	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.phone.BluetoothAtPhonebook$1: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.contacts.vcard.ProcessorBase: void run()>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.nfc.handover.BluetoothHeadsetHandover: void handleIntent(android.content.Intent)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.providers.downloads.DownloadThread: void notifyThroughDatabase(int,boolean,int,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.providers.downloads.StorageManager: void verifySpace(int,java.lang.String,long)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.contacts.activities.DialtactsActivity: void onStart()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.bluetooth.pbap.BluetoothPbapObexServer: int createList(int,int,java.lang.String,java.lang.StringBuilder,java.lang.String)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.app.ActivityManagerNative: void setProcessLimit(int)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.gallery3d.app.SlideshowDataAdapter$ReloadTask: java.lang.Void run(com.android.gallery3d.util.ThreadPool$JobContext)>	android.permission.NFC	android.permission.VIBRATE	android.permission.INTERNET	android.permission.SET_WALLPAPER	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: boolean onOptionsItemSelected(android.view.MenuItem)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.CALL_PHONE	android.permission.RECEIVE_SMS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.policy.impl.FaceUnlock: void handleServiceConnected()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.contacts.editor.ContactEditorFragment$EntityDeltaComparator: int compare(com.android.contacts.model.EntityDelta,com.android.contacts.model.EntityDelta)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.ContactSaveService: void deleteGroup(android.content.Intent)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.imageproc.ImageEncoder: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.server.am.ActivityManagerService: boolean removeProcessLocked(com.android.server.am.ProcessRecord,boolean,boolean,java.lang.String)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<android.bluetooth.IBluetoothA2dp: boolean resumeSink(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<android.app.IActivityManager: void handleApplicationCrash(android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.contacts.datepicker.DatePickerDialog$OnDateSetListener: void onDateSet(com.android.contacts.datepicker.DatePicker,int,int,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.view.WindowManagerPolicy: void screenTurningOn(android.view.WindowManagerPolicy$ScreenOnListener)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void onStop()>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.inputmethod.latin.ExpandableDictionary: void <init>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.vcard.VCardEntry$PhoneData: void constructInsertOperation(java.util.List,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.provider.BrowserProvider2$DatabaseHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>	android.permission.WRITE_SYNC_SETTINGS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.content.ISyncAdapter$Stub$Proxy: void startSync(android.content.ISyncContext,java.lang.String,android.accounts.Account,android.os.Bundle)>	android.permission.WRITE_SYNC_SETTINGS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.inputmethod.InputMethodAndSubtypeEnabler: void onActivityCreated(android.os.Bundle)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.calllog.CallLogAdapter: void bindView(android.view.View,android.database.Cursor,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WRITE_CALL_LOG	android.permission.READ_SYNC_SETTINGS	
<com.android.vcard.VCardParser_V40: void parse(java.io.InputStream,com.android.vcard.VCardInterpreter)>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.telephony.ITelephony$Stub: java.util.List getAllCellInfo()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.contacts.list.LegacyContactListAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.bluetooth.opp.BluetoothOppService$UpdateThread: void run()>	android.permission.BLUETOOTH_ADMIN	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.mms.ui.ManageSimMessages: void onCreate(android.os.Bundle)>	android.permission.READ_SMS	android.permission.RECEIVE_SMS	
<android.app.ActivityManagerNative: void updateConfiguration(android.content.res.Configuration)>	android.permission.CHANGE_CONFIGURATION	android.permission.WAKE_LOCK	
<com.android.browser.Controller$SaveSnapshotTask: java.lang.Long doInBackground(java.lang.Void[])>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.contacts.list.JoinContactListFragment: void onClose()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.keyboard.KeyboardActionListener: void onTextInput(java.lang.CharSequence)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.phone.BluetoothHandsfree$2: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.suggestions.SuggestionsView$2: void onTextInput(java.lang.CharSequence)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.filterpacks.base.RetargetFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.development.PackageSummary$1: void onClick(android.view.View)>	android.permission.KILL_BACKGROUND_PROCESSES	android.permission.RESTART_PACKAGES	
<com.android.providers.downloads.DownloadService$1: void scanCompleted(java.lang.String,android.net.Uri)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.server.ConnectivityService: void access$1200(com.android.server.ConnectivityService,int,boolean)>	android.permission.BROADCAST_STICKY	android.permission.ACCESS_NETWORK_STATE	
<com.android.browser.BrowserBookmarksPage$LookupBookmarkCount: java.lang.Object doInBackground(java.lang.Object[])>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.phone.SimContacts: void access$100(android.database.Cursor,android.content.ContentResolver,android.accounts.Account)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.keyboard.LatinKeyboardView: boolean openMoreKeysKeyboardIfRequired(com.android.inputmethod.keyboard.Key,com.android.inputmethod.keyboard.PointerTracker)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.browser.SnapshotTab: void putInBackground()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory$3$1: void run()>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.server.net.NetworkPolicyManagerService: void access$1000(com.android.server.net.NetworkPolicyManagerService,android.net.NetworkPolicy)>	android.permission.ACCESS_WIFI_STATE	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.editor.ContactEditorFragment: void onAttach(android.app.Activity)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.InCallScreen: void onMMICancel()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.mms.transaction.MessagingNotification: void addMmsNotificationInfos(android.content.Context,java.util.Set)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.contacts.activities.TransactionSafeActivity: void onNewIntent(android.content.Intent)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.NavScreen: void onCloseTab(com.android.browser.Tab)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.emailcommon.utility.EmailAsyncTask$1: void onSuccess(java.lang.Object)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.NavScreen: void close(int,boolean)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.gallery3d.app.PickerActivity: void onBackPressed()>	android.permission.NFC	android.permission.VIBRATE	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	android.permission.RECORD_AUDIO	
<com.android.internal.policy.impl.KeyguardViewMediator: void keyguardDone(boolean,boolean)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.bluetooth.opp.BluetoothOppService: void access$000(com.android.bluetooth.opp.BluetoothOppService)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<android.accounts.AccountManager: void invalidateAuthToken(java.lang.String,java.lang.String)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	
<com.android.email.provider.DBHelper: void upgradeFromVersion21ToVersion22(android.database.sqlite.SQLiteDatabase,android.content.Context)>	android.permission.WRITE_SYNC_SETTINGS	android.permission.AUTHENTICATE_ACCOUNTS	
<com.android.phone.OtaUtils: void onClickOtaActivateButton()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<android.filterpacks.imageproc.SimpleImageFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.internal.telephony.ISms: boolean updateMessageOnIccEf(int,int,byte[])>	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.contacts.activities.ActionBarAdapter: void setSearchMode(boolean)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.bluetooth.BluetoothDeviceProfileState: void sendConnectionAccessIntent()>	android.permission.BLUETOOTH_ADMIN	android.permission.WAKE_LOCK	
<com.android.gallery3d.ui.ActionModeHandler$ActionModeListener: boolean onActionItemClicked(android.view.MenuItem)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<android.app.IActivityManager: void goingToSleep()>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.bluetooth.pbap.BluetoothPbapVcardManager: int getPhonebookSize(int)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<android.bluetooth.IBluetooth$Stub: boolean connectPanDevice(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<android.net.INetworkPolicyManager: void setRestrictBackground(boolean)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	
<com.android.settings.bluetooth.BluetoothNameDialogFragment: void access$000(com.android.settings.bluetooth.BluetoothNameDialogFragment,java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.ContactsDictionary: boolean reloadDictionaryIfRequired()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.phone.BluetoothHandsfree$25: android.bluetooth.AtCommandResult handleTestCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.server.pm.PackageManagerService: boolean deletePackageLI(java.lang.String,boolean,int,com.android.server.pm.PackageManagerService$PackageRemovedInfo,boolean)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.providers.settings.SettingsBackupAgent: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.WRITE_SETTINGS	android.permission.CHANGE_CONFIGURATION	
<com.android.settings.bluetooth.LocalBluetoothProfileManager$PanStateChangedHandler: void onReceive(android.content.Context,android.content.Intent,android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.providers.downloads.DownloadInfo: void startIfReady(long,com.android.providers.downloads.StorageManager)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	android.permission.ACCESS_NETWORK_STATE	
<android.server.BluetoothPanProfileHandler: boolean disconnectPanServerDevices()>	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.mms.data.WorkingMessage: java.lang.String access$000(com.android.mms.data.WorkingMessage,com.android.mms.data.Conversation)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.email.Controller: void sendMeetingResponse(long,int)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.READ_SYNC_SETTINGS	
<android.provider.Browser: void deleteHistoryWhere(android.content.ContentResolver,java.lang.String)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.gallery3d.app.SlideshowDataAdapter$ReloadTask: java.lang.Object run(com.android.gallery3d.util.ThreadPool$JobContext)>	android.permission.NFC	android.permission.VIBRATE	android.permission.INTERNET	android.permission.SET_WALLPAPER	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.settings.bluetooth.DevicePickerFragment: void onResume()>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_USER_DICTIONARY	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.gallery3d.app.PhotoPage: void onUpPressed()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.internal.telephony.IccSmsInterfaceManager: boolean disableCellBroadcastRange(int,int)>	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.internal.policy.impl.KeyguardViewMediator: void access$700(com.android.internal.policy.impl.KeyguardViewMediator)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.inputmethod.latin.UserBinaryDictionary: void getWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.inputmethod.latin.SubtypeSwitcher: void updateParametersOnStartInputView()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.emailcommon.service.IEmailServiceCallback$Stub: void syncMailboxListStatus(long,int,int)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.activities.JoinContactActivity: void onResume()>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.bluetooth.CachedBluetoothDevice: void setBtClass(android.bluetooth.BluetoothClass)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.mms.ui.ComposeMessageActivity: void editSmsMessageItem(com.android.mms.ui.MessageItem)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.settings.ChooseLockGeneric$ChooseLockGenericFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.gallery3d.app.GalleryActionBar$ClusterRunner: void doCluster(int)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.browser.WebViewController: void onDownloadStart(com.android.browser.Tab,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)>	android.permission.VIBRATE	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.WRITE_EXTERNAL_STORAGE	android.permission.GET_ACCOUNTS	
<com.android.browser.BreadCrumbView: void onClick(android.view.View)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.calendar.month.MonthByWeekAdapter$2: void run()>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.wallpaper.fall.FallRS: void start()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.contacts.list.DefaultContactListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.bluetooth.IBluetooth: boolean connectPanDevice(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<android.media.effect.effects.BlackWhiteEffect: void apply(int,int,int,int)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.exchange.EasOutboxService: void sendCallback(long,java.lang.String,int)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.gadget.WidgetService$PhotoRVFactory: void onDataSetChanged()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean setPriority(android.bluetooth.BluetoothDevice,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	
<com.android.gallery3d.app.PhotoPage$1: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.phone.BluetoothHandsfree$4: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.calendar.AgendaWindowAdapter: android.net.Uri buildQueryUri(int,int)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.contacts.editor.ContactEditorFragment: boolean onOptionsItemSelected(android.view.MenuItem)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.voicedialer.VoiceDialerActivity: void onDestroy()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.email.NotificationController: android.app.Notification createNewMessageNotification(long,long,android.database.Cursor,long,int,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.bluetooth.BluetoothDeviceProfileState$IncomingHid: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.phone.PhoneUtils: void mergeCalls()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<com.android.providers.telephony.SmsProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothAtPhonebook: boolean access$900(com.android.phone.BluetoothAtPhonebook)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.systemui.usb.UsbConfirmActivity: void onCreate(android.os.Bundle)>	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.AutoCorrection: boolean hasAutoCorrectionForConsideredWord(java.util.concurrent.ConcurrentHashMap,com.android.inputmethod.latin.WordComposer,java.util.ArrayList,java.lang.CharSequence)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.net.wifi.WifiStateMachine: boolean startTethering(java.util.ArrayList)>	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.providers.settings.SettingsBackupAgent: int enableWifi(boolean)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	
<com.android.settings.Settings$StorageSettingsActivity: void onResume()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.mms.transaction.NotificationTransaction: byte[] sendPdu(byte[])>	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	
<com.android.gallery3d.data.MediaSet: long reload()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.settings.tts.TextToSpeechSettings: void onActivityCreated(android.os.Bundle)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<android.net.wifi.WifiWatchdogStateMachine$DefaultState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.KeyguardViewMediator: void handleNotifyScreenOn(com.android.internal.policy.impl.KeyguardViewManager$ShowListener)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.internal.telephony.CallerInfoAsyncQuery$CallerInfoAsyncQueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<android.bluetooth.IBluetooth$Stub$Proxy: boolean cancelBondProcess(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.server.am.ActivityManagerService: void finishInstrumentationLocked(com.android.server.am.ProcessRecord,int,android.os.Bundle)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.settings.inputmethod.KeyboardLayoutPickerFragment: void onActivityCreated(android.os.Bundle)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.ConversationListItem$1: void run()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.net.wifi.WifiWatchdogStateMachine: void <init>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.WRITE_SETTINGS	
<com.android.providers.downloads.StorageManager: void findSpace(java.io.File,long,int)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory: void initLoader(java.lang.String)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.server.pm.ShutdownThread: void shutdownInner(android.content.Context,boolean)>	android.permission.VIBRATE	android.permission.MOUNT_UNMOUNT_FILESYSTEMS	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.phone.BluetoothHandsfree$23: android.bluetooth.AtCommandResult handleReadCommand()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.bluetooth.opp.BluetoothOppBtEnablingActivity: void onCreate(android.os.Bundle)>	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.BLUETOOTH	
<com.android.phone.PhoneUtils: void sendEmptyFlash(com.android.internal.telephony.Phone)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<com.android.settings.accounts.ManageAccountsSettings: void onAccountsUpdated(android.accounts.Account[])>	android.permission.READ_SYNC_STATS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.bluetooth.BluetoothCallback: void onDeviceAdded(com.android.settings.bluetooth.CachedBluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<android.filterfw.core.SyncRunner: void run()>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.contacts.util.NotifyingAsyncQueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.app.ActivityManagerNative: void killBackgroundProcesses(java.lang.String)>	android.permission.KILL_BACKGROUND_PROCESSES	android.permission.RESTART_PACKAGES	
<com.android.gallery3d.ui.SlideshowView: void removeOneComponent(com.android.gallery3d.ui.GLView)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.gallery3d.app.PhotoDataAdapter$ScreenNailJob: com.android.gallery3d.ui.ScreenNail run(com.android.gallery3d.util.ThreadPool$JobContext)>	android.permission.NFC	android.permission.VIBRATE	android.permission.INTERNET	android.permission.SET_WALLPAPER	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<android.server.BluetoothA2dpService: void adjustOtherSinkPriorities(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.gallery3d.ui.GestureRecognizer: void onTouchEvent(android.view.MotionEvent)>	android.permission.NFC	android.permission.VIBRATE	
<com.android.internal.telephony.ISms$Stub$Proxy: boolean updateMessageOnIccEf(int,int,byte[])>	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.camera.VideoCamera: void onResume()>	android.permission.NFC	android.permission.VIBRATE	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	android.permission.RECORD_AUDIO	
<android.accounts.AccountManager$Future2Task: android.accounts.AccountManager$Future2Task start()>	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.server.location.LocationBasedCountryDetector: void registerListener(java.lang.String,android.location.LocationListener)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.phone.BluetoothHandsfree$15: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.LatinIME: void launchSettingsClass(java.lang.Class)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.commands.svc.DataCommand: void run(java.lang.String[])>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.camera.LocationManager: void startReceivingLocationUpdates()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.server.connectivity.Tethering$TetherMasterSM$StopTetheringErrorState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.contacts.group.GroupEditorFragment: void access$600(com.android.contacts.group.GroupEditorFragment,android.database.Cursor)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.imageproc.ImageStitcher: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.email.activity.MessageViewFragmentBase$1: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.InCallScreen: void internalSwapCalls()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.mms.transaction.SmsReceiverService: void handleSmsReceived(android.content.Intent,int)>	android.permission.READ_SMS	android.permission.VIBRATE	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.inputmethod.keyboard.KeyboardActionListener$Adapter: void onTextInput(java.lang.CharSequence)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.gallery3d.app.AlbumPage: void access$1600(com.android.gallery3d.app.AlbumPage,int)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.settings.bluetooth.BluetoothEventManager$BondStateChangedHandler: void onReceive(android.content.Context,android.content.Intent,android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.server.DeviceStorageMonitorService: void checkMemory(boolean)>	android.permission.VIBRATE	android.permission.BROADCAST_STICKY	android.permission.CLEAR_APP_CACHE	
<com.android.internal.widget.SlidingTab: void dispatchTriggerEvent(int)>	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.quicksearchbox.ui.ContactBadge: void assignContactFromEmail(java.lang.String,boolean)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.activities.PeopleActivity$ContactBrowserActionListener: void onSelectionChange()>	android.permission.READ_PHONE_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.policy.impl.GlobalActions$SinglePressAction: void onPress()>	android.permission.VIBRATE	android.permission.MOUNT_UNMOUNT_FILESYSTEMS	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<android.filterpacks.imageproc.TintFilter: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.contacts.util.AccountFilterUtil: void handleAccountFilterResult(com.android.contacts.list.ContactListFilterController,int,android.content.Intent)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.imageproc.ResizeFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.settings.Settings$AccessibilitySettingsActivity: void onResume()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.settings.bluetooth.DockService: boolean msgTypeDocked(android.bluetooth.BluetoothDevice,int,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.gallery3d.ui.CropView$HighlightRectangle: void removeOneComponent(com.android.gallery3d.ui.GLView)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.bluetooth.pbap.BluetoothPbapService$SocketAcceptThread: void run()>	android.permission.BLUETOOTH_ADMIN	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<android.media.AudioService: void access$5900(android.media.AudioService)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<android.bluetooth.BluetoothHeadset: boolean disconnectHeadsetInternal(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.development.Connectivity$3: void onClick(android.view.View)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.KeyguardScreen: void onResume()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.phone.PhoneInterfaceManager: void answerRingingCallInternal()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<android.server.BluetoothA2dpService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.mms.transaction.Transaction: byte[] sendPdu(long,byte[],java.lang.String)>	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	
<com.android.browser.Browser: void onCreate()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.content.ISyncAdapter: void startSync(android.content.ISyncContext,java.lang.String,android.accounts.Account,android.os.Bundle)>	android.permission.WRITE_SYNC_SETTINGS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.calllog.ContactInfoHelper: com.android.contacts.calllog.ContactInfo lookupNumber(java.lang.String,java.lang.String)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.net.NetworkStatsService$4: void onReceive(android.content.Context,android.content.Intent)>	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<com.android.providers.calendar.CalendarReceiver: void access$000(com.android.providers.calendar.CalendarReceiver,android.content.ContentResolver)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<android.media.effect.effects.FisheyeEffect: void apply(int,int,int,int)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.gallery3d.app.AlbumPage: void setContentPane(com.android.gallery3d.ui.GLView)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.mms.ui.MessageUtils: java.lang.String getNotificationIndDetails(android.content.Context,android.database.Cursor)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.mms.transaction.MessageStatusService: android.telephony.SmsMessage updateMessageStatus(android.content.Context,android.net.Uri,byte[],java.lang.String)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.phone.CallNotifier: void onPhoneStateChanged(android.os.AsyncResult)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.gallery3d.ui.PhotoView: void switchToFirstImage()>	android.permission.NFC	android.permission.VIBRATE	
<android.filterpacks.base.CallbackFilter: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.email.activity.setup.AccountSetupNames$2: void callOnPostExecuteForTest(java.lang.Object)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.vcard.VCardParserImpl_V40: void parseItems()>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.dialpad.DialpadFragment: void onClick(android.view.View)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	
<com.android.contacts.list.DefaultContactListAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.policy.impl.GlobalActions: void <init>	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	
<com.android.server.pm.PackageManagerService: void unloadMediaPackages(java.util.HashMap,int[],boolean)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.contacts.activities.GroupDetailActivity: void onCreate(android.os.Bundle)>	android.permission.NFC	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.ManageSimMessages$2: void onClick(android.content.DialogInterface,int)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: boolean isDrmRingtoneWithRights(long)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.server.BootReceiver: void removeOldUpdatePackages(android.content.Context)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.browser.UiController: boolean switchToTab(com.android.browser.Tab)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler$PhotoEditorListener: void onPhotoSelected(android.graphics.Bitmap)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.latin.SubtypeSwitcher: void updateEnabledSubtypes()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.phone.BluetoothHeadsetService$6: boolean disconnect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.phone.BluetoothAtPhonebook$3: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>	android.permission.BLUETOOTH_ADMIN	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.phone.BluetoothHandsfree$3: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.nfc.handover.BluetoothHeadsetHandover: void nextStep()>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.exchange.ExchangeService$1: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.ContactSaveService: void buildJoinContactDiff(java.util.ArrayList,long,long)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.group.GroupEditorFragment$2: void onLoadFinished(android.content.Loader,android.database.Cursor)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.calendar.EventInfoFragment: void createExceptionResponse(long,int)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.server.LocationManagerService: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_LOCATION_EXTRA_COMMANDS	
<android.bluetooth.BluetoothDeviceProfileState$IncomingA2dp: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.GlobalActions$4: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)>	android.permission.VIBRATE	android.permission.MOUNT_UNMOUNT_FILESYSTEMS	android.permission.RECEIVE_BOOT_COMPLETED	
<com.android.email.activity.MessageViewFragmentBase$1: void callOnPostExecuteForTest(java.lang.Object)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothHandsfree$18: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler: long getWritableEntityId()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.am.ActivityManagerService: boolean bringUpServiceLocked(com.android.server.am.ServiceRecord,int,boolean)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.calendar.DeleteEventHelper$3: void onClick(android.content.DialogInterface,int)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.browser.WebViewController: void doUpdateVisitedHistory(com.android.browser.Tab,boolean)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.filterpacks.imageproc.ColorTemperatureFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.email.activity.MessageFileView$LoadFilenameTask: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.net.wifi.WifiStateMachine$DriverUnloadedState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.contacts.detail.ContactDetailLayoutController: void showContactWithoutUpdates()>	android.permission.READ_PHONE_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.interactions.PhoneNumberInteraction$PhoneItemAdapter: void <init>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.CustomContactListFilterActivity$GroupDelta: com.android.contacts.list.CustomContactListFilterActivity$GroupDelta fromSettings(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,boolean)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.gallery3d.app.StateManager: void finishState(com.android.gallery3d.app.ActivityState)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.email.activity.MessageViewFragmentBase$UpdatePreviewIconTask: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.DefaultContactListAdapter: android.net.Uri getContactUri(int,android.database.Cursor)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.CallDetailActivity$6: java.lang.Object doInBackground(java.lang.Object[])>	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WRITE_CALL_LOG	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: boolean access$2900(com.android.mms.ui.ComposeMessageActivity,long)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.calendar.SearchActivity: boolean onQueryTextSubmit(java.lang.String)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<android.media.AudioService: void resetBluetoothSco()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<com.android.vcard.VCardParserImpl_V40: boolean parseItem()>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.model.ImageModel: com.android.mms.util.ItemLoadedFuture loadThumbnailBitmap(com.android.mms.util.ItemLoadedCallback)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.ui.EdgeView: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.emailcommon.service.IEmailServiceCallback: void sendMessageStatus(long,java.lang.String,int,int)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.activities.ContactSelectionActivity: void onStart()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.ContactListAdapter: android.net.Uri getContactUri(int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothHandsfree$17: android.bluetooth.AtCommandResult handleActionCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.settings.accounts.AddAccountSettings: void addAccount(java.lang.String)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<android.provider.Telephony$Sms$Sent: android.net.Uri addMessage(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.internal.policy.impl.AccountUnlockScreen$2: void run(android.accounts.AccountManagerFuture)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.inputmethod.keyboard.LatinKeyboardView: boolean processMotionEvent(android.view.MotionEvent)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.internal.telephony.gsm.GsmSMSDispatcher: int processMessagePart(byte[],java.lang.String,int,int,int,long,int,boolean)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.contacts.calllog.ClearCallLogDialog$1$1: java.lang.Void doInBackground(java.lang.Void[])>	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WRITE_CALL_LOG	
<com.android.server.pm.ShutdownThread$1: void onClick(android.content.DialogInterface,int)>	android.permission.VIBRATE	android.permission.MOUNT_UNMOUNT_FILESYSTEMS	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: com.android.mms.ui.MessageItem getMessageItem(java.lang.String,long,boolean)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.email.Controller: void updateMailbox(long,long,boolean)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.server.ConnectivityService: void <init>	android.permission.CHANGE_WIFI_STATE	android.permission.WRITE_SETTINGS	
<com.android.phone.SipCallOptionHandler: void createSipPhoneIfNeeded(android.net.sip.SipProfile)>	android.permission.CHANGE_WIFI_STATE	android.permission.WRITE_SETTINGS	android.permission.CHANGE_CONFIGURATION	android.permission.USE_SIP	
<com.android.contacts.editor.ContactEditorFragment: void setIntentExtras(android.os.Bundle)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.email.MessagingListener: void loadAttachmentFailed(long,long,long,com.android.emailcommon.mail.MessagingException,boolean)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.videosink.MediaEncoderFilter: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.inputmethod.keyboard.PointerTracker: void onDownEvent(int,int,long,com.android.inputmethod.keyboard.PointerTracker$KeyEventHandler)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.phone.BluetoothAtPhonebook: void handleAccessPermissionResult(android.content.Intent)>	android.permission.BLUETOOTH_ADMIN	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.gallery3d.app.PhotoPage$PreparePhotoFallback: boolean onGLIdle(com.android.gallery3d.ui.GLCanvas,boolean)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.server.am.ActivityStack: void activityPaused(android.os.IBinder,boolean)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.server.net.NetworkPolicyManagerService: boolean isNetworkMetered(android.net.NetworkState)>	android.permission.ACCESS_WIFI_STATE	android.permission.READ_PHONE_STATE	
<com.android.internal.widget.multiwaveview.GlowPadView$OnTriggerListener: void onGrabbedStateChange(android.view.View,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.USE_CREDENTIALS	android.permission.READ_CONTACTS	android.permission.MANAGE_ACCOUNTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.internal.telephony.cdma.CdmaServiceStateTracker$2: void onChange(boolean)>	android.permission.BROADCAST_STICKY	android.permission.SET_TIME_ZONE	
<com.android.settings.accounts.AddAccountSettings: void onActivityResult(int,int,android.content.Intent)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.emailcommon.utility.AttachmentUtilities: void saveAttachment(android.content.Context,java.io.InputStream,com.android.emailcommon.provider.EmailContent$Attachment)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.contacts.vcard.VCardImportExportListener: void onImportParsed(com.android.contacts.vcard.ImportRequest,int,com.android.vcard.VCardEntry,int,int)>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.accounts.SyncSettings: void onCreate(android.os.Bundle)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.READ_PHONE_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: android.content.Intent createIntent(android.content.Context,long)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.settings.accounts.AccountPreferenceBase: void onCreate(android.os.Bundle)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.READ_PHONE_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.mms.data.Contact$ContactsCache: void access$700(com.android.mms.data.Contact$ContactsCache,com.android.mms.data.Contact)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.list.DefaultContactBrowseListFragment: void onClose()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.AccessibilitySettings: void onPause()>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.KeyguardViewMediator: void onScreenTurnedOn(com.android.internal.policy.impl.KeyguardViewManager$ShowListener)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.server.am.ActivityManagerService: void bringDownServiceLocked(com.android.server.am.ServiceRecord,boolean)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<android.media.effect.effects.TintEffect: void apply(int,int,int,int)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.browser.UrlInputView: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.filterpacks.imageproc.CrossProcessFilter: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.contacts.list.ProviderStatusWatcher$2: java.lang.Object doInBackground(java.lang.Object[])>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.UiController: void closeCurrentTab()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.app.ActivityManagerNative: void startRunning(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WRITE_SETTINGS	
<com.android.mms.ui.ManageSimMessages: boolean onContextItemSelected(android.view.MenuItem)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.gallery3d.app.SlideshowPage$1: boolean dispatchTouchEvent(android.view.MotionEvent)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<android.net.wifi.WifiStateMachine$SupplicantStartingState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.providers.contacts.ContactsProvider2: int deleteData(java.lang.String,java.lang.String[],boolean)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.ContactSaveService: void joinContacts(android.content.Intent)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.imageproc.SaturateFilter: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.net.wifi.SupplicantStateTracker$DormantState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<android.app.IActivityManager: void updateConfiguration(android.content.res.Configuration)>	android.permission.CHANGE_CONFIGURATION	android.permission.WAKE_LOCK	
<com.android.browser.XLargeUi: boolean onOptionsItemSelected(android.view.MenuItem)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.calendar.SearchActivity: void handleIntent(android.content.Intent)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<android.media.AudioService$ScoClient: void incCount()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<com.android.development.AccountsTester$2: void onClick(android.content.DialogInterface,int)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.contacts.list.JoinContactListFragment: void setSearchMode(boolean)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothHandsfree: void connectHeadset(android.bluetooth.HeadsetBase,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.list.JoinContactListAdapter: android.net.Uri getContactUri(int,android.database.Cursor)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.policy.impl.PhoneWindowManager$15: void run()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<android.provider.Contacts$People: long tryGetMyContactsGroupId(android.content.ContentResolver)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.calendar.agenda.AgendaWindowAdapter$QueryHandler$1: void onClick(android.view.View)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<android.server.search.SearchManagerService: void <init>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WRITE_SETTINGS	
<com.android.settings.bluetooth.BluetoothDiscoverableEnabler: boolean onPreferenceClick(android.preference.Preference)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.browser.WebViewController: void onReceivedTitle(com.android.browser.Tab,java.lang.String)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.gallery3d.app.AlbumPage: void access$900(com.android.gallery3d.app.AlbumPage,int)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.phone.CallNotifier: void onDisconnect(android.os.AsyncResult)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.settings.widget.SettingsAppWidgetProvider$SyncStateTracker$1: void onPostExecute(java.lang.Object)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.inputmethod.keyboard.KeyboardSwitcher: void onPressKey(int)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.deskclock.AlarmKlaxon: void stop()>	android.permission.VIBRATE	android.permission.WAKE_LOCK	
<com.android.contacts.group.GroupEditorFragment$4: void onLoadFinished(android.content.Loader,android.database.Cursor)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.exchange.adapter.AccountSyncAdapter: void setSyncKey(java.lang.String,boolean)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.Controller: void onPreloginFinished(android.os.Bundle,android.content.Intent,long,boolean)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.server.net.NetworkPolicyManagerService$4: void onReceive(android.content.Context,android.content.Intent)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	
<com.android.calendar.AllInOneActivity$QueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.exchange.EasSyncService: android.os.Bundle validate(java.lang.Class,com.android.emailcommon.provider.HostAuth,android.content.Context)>	android.permission.READ_CALENDAR	android.permission.WAKE_LOCK	
<com.android.email.service.MailService$2: void run()>	android.permission.READ_PHONE_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.keyboard.LatinKeyboardView: boolean openMoreKeysPanel(com.android.inputmethod.keyboard.Key,com.android.inputmethod.keyboard.PointerTracker)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.camera.EffectsRecorder$5: void run()>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.settings.bluetooth.BluetoothEventManager$ScanningStateChangedHandler: void onReceive(android.content.Context,android.content.Intent,android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.calendar.alerts.AlertService: boolean generateAlerts(android.content.Context,com.android.calendar.alerts.NotificationMgr,android.content.SharedPreferences,android.database.Cursor,long,int)>	android.permission.VIBRATE	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.contacts.activities.TransactionSafeActivity: void onStart()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.email.activity.setup.AccountSetupNames$2: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.bluetooth.DevicePickerFragment: void removeAllDevices()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.calendar.alerts.DismissAlarmsService: void onHandleIntent(android.content.Intent)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.systemui.statusbar.phone.PhoneStatusBar: void createAndAddWindows()>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.phone.BluetoothHeadsetService: void access$2000(com.android.phone.BluetoothHeadsetService,android.bluetooth.BluetoothDevice,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<android.location.ILocationManager$Stub$Proxy: android.os.Bundle getProviderInfo(java.lang.String)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.inputmethod.keyboard.MoreKeysKeyboardView$1: void onCodeInput(int,int,int)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.providers.contacts.LegacyApiSupport: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.app.AlbumPage: void onUpPressed()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.gallery3d.app.StateManager: void startState(java.lang.Class,android.os.Bundle)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.ContactLoader: void loadStreamItems(com.android.contacts.ContactLoader$Result)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.settings.bluetooth.BluetoothEventManager$1: void onReceive(android.content.Context,android.content.Intent)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.browser.WebViewController: boolean shouldOverrideUrlLoading(com.android.browser.Tab,android.webkit.WebView,java.lang.String)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.exchange.EasAccountService: void sync()>	android.permission.VIBRATE	android.permission.READ_CALENDAR	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.OtaUtils: void onClickHandler(int)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.activities.PeopleActivity: void configureContactListFragment()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.am.ActivityManagerService: boolean forceStopPackageLocked(java.lang.String,int,boolean,boolean,boolean,boolean,int)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<android.media.IAudioService$Stub: void startBluetoothSco(android.os.IBinder)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler: void <init>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.systemui.SearchPanelView: void vibrate()>	android.permission.VIBRATE	android.permission.WAKE_LOCK	
<com.android.internal.telephony.cdma.CdmaLteUiccRecords: void onRecordLoaded()>	android.permission.BROADCAST_STICKY	android.permission.CHANGE_CONFIGURATION	
<com.android.camera.PanoramaActivity: void createCameraScreenNail(boolean)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<android.bluetooth.IBluetoothHeadset: boolean createIncomingConnect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.activities.ContactDetailActivity: void onServiceCompleted(android.content.Intent)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.transaction.MmsMessageSender: boolean sendMessage(long)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.contacts.list.ProviderStatusWatcher: void notifyListeners()>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.data.Conversation: void asyncDeleteObsoleteThreads(android.content.AsyncQueryHandler,int)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.inputmethod.latin.ExpandableBinaryDictionary: boolean isValidWord(java.lang.CharSequence)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.browser.OpenDownloadReceiver$1: void run()>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<android.bluetooth.BluetoothHeadset: boolean createIncomingConnect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	
<com.android.providers.contacts.ContactsProvider2: int deleteData(long,java.lang.String[])>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.accessibility.AccessibleKeyboardViewProxy: boolean onHoverKey(com.android.inputmethod.keyboard.Key,android.view.MotionEvent)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.server.connectivity.Tethering$TetherInterfaceSM$UnavailableState: void enter()>	android.permission.VIBRATE	android.permission.BROADCAST_STICKY	android.permission.ACCESS_NETWORK_STATE	
<android.view.WindowManagerPolicy$WindowManagerFuncs: void shutdown()>	android.permission.VIBRATE	android.permission.MOUNT_UNMOUNT_FILESYSTEMS	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.inputmethod.latin.LatinIME$UIHandler: void onStartInputView(android.view.inputmethod.EditorInfo,boolean)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.inputmethod.latin.LatinIME: void onTextInput(java.lang.CharSequence)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.browser.AccountsChangedReceiver$DeleteRemovedAccounts: void delete(android.content.ContentResolver,java.lang.String,java.lang.String)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.wallpaper.RenderScriptWallpaper$RenderScriptEngine: void onSurfaceChanged(android.view.SurfaceHolder,int,int,int)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.email.service.AttachmentDownloadService$ServiceCallback: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.DisplaySettings: void writeFontSizePreference(java.lang.Object)>	android.permission.WRITE_SETTINGS	android.permission.CHANGE_CONFIGURATION	
<com.android.mms.ui.SlideshowEditActivity$SlideListAdapter: android.view.View createViewFromResource(int,android.view.View,int)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<android.view.IWindowManager$Stub$Proxy: void clearForcedDisplaySize()>	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.settings.inputmethod.UserDictionaryAddWordContents: void apply(android.content.Context)>	android.permission.READ_USER_DICTIONARY	android.permission.WRITE_USER_DICTIONARY	
<android.server.BluetoothAdapterStateMachine$PowerOff: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.phone.InCallScreen: void showPausePromptDialog(com.android.internal.telephony.Connection,java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.email.activity.setup.AccountServerBaseFragment$4: java.lang.Object doInBackground(java.lang.Object[])>	android.permission.READ_PHONE_STATE	android.permission.WAKE_LOCK	
<com.android.inputmethod.keyboard.PointerTracker$TimerProxy: void startLongPressTimer(com.android.inputmethod.keyboard.PointerTracker)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.inputmethod.keyboard.KeyboardView: boolean dispatchHoverEvent(android.view.MotionEvent)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.vcard.VCardParser_V21: void parseOne(java.io.InputStream)>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.transaction.SendTransaction: byte[] sendPdu(long,byte[],java.lang.String)>	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	
<com.android.settings.widget.SettingsAppWidgetProvider: void updateButtons(android.widget.RemoteViews,android.content.Context)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.UserDictionary: void startDictionaryLoadingTaskLocked()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.mms.data.WorkingMessage: void access$900(com.android.mms.data.WorkingMessage,com.android.mms.data.Conversation,java.lang.String,java.lang.String)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.settings.wifi.AdvancedWifiSettings: void refreshWifiInfo()>	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.util.ContactLoaderUtils: android.net.Uri ensureIsContactUri(android.content.ContentResolver,android.net.Uri)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.widget.SettingsAppWidgetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.server.input.InputManagerService: void notifyLidSwitchChanged(long,boolean)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.internal.telephony.cat.RilMessageDecoder$StateStart: void enter()>	android.permission.CHANGE_WIFI_STATE	android.permission.GET_TASKS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.browser.AddBookmarkPage: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.inputmethod.latin.WhitelistDictionary: void <init>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.internal.policy.impl.KeyguardViewMediator: void handleKeyguardDone(boolean)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.camera.CameraScreenNail: void directDraw(com.android.gallery3d.ui.GLCanvas,int,int,int,int)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.settings.bluetooth.BluetoothSettings: void onCreate(android.os.Bundle)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.READ_PHONE_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.gallery3d.app.ManageCachePage$1: boolean dispatchTouchEvent(android.view.MotionEvent)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<android.content.SyncManager$8: void onServiceChanged(java.lang.Object,boolean)>	android.permission.VIBRATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<android.filterpacks.performance.ThroughputFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.browser.Preloader: com.android.browser.Preloader$PreloaderSession getSession(java.lang.String)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.server.NativeDaemonConnector: void run()>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.mms.ui.ConversationList: boolean onOptionsItemSelected(android.view.MenuItem)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.nfc.P2pLinkManager$2: com.android.nfc.snep.SnepMessage doGet(int,android.nfc.NdefMessage)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.BLUETOOTH	
<com.android.contacts.list.ContactBrowseListFragment: void onLoadFinished(android.content.Loader,java.lang.Object)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.net.sip.ISipService: void close(java.lang.String)>	android.permission.USE_SIP	android.permission.WAKE_LOCK	
<com.android.internal.telephony.PhoneBase: void <init>	android.permission.CHANGE_WIFI_STATE	android.permission.WRITE_SETTINGS	android.permission.CHANGE_CONFIGURATION	
<com.android.camera.Camera: void access$4300(com.android.camera.Camera)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<android.filterpacks.imageproc.FlipFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.providers.contacts.LegacyApiSupport: int updateOrganizations(long,android.content.ContentValues)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.preference.YesNoPreference: void onDialogClosed(boolean)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.server.am.BroadcastQueue: void skipCurrentReceiverLocked(com.android.server.am.ProcessRecord)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.gallery3d.ui.GLRootView: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.contacts.editor.ContactEditorFragment: void bindEditorsForNewContact(com.android.contacts.model.AccountWithDataSet,com.android.contacts.model.AccountType,com.android.contacts.model.EntityDelta,com.android.contacts.model.AccountType)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothHandsfree: void access$1300(com.android.phone.BluetoothHandsfree)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.phone.InCallScreen: void handlePostOnDialChars(android.os.AsyncResult,char)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.mms.ui.ComposeMessageActivity$40: void run()>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.ui.PhotoView: void switchFocus()>	android.permission.NFC	android.permission.VIBRATE	
<com.android.nfc.nxp.NativeNfcManager: void notifyTransactionListeners(byte[])>	android.permission.GET_TASKS	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.email.activity.MailboxFinder$FindMailboxTask: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.ContactsActivity: boolean onPrepareOptionsMenu(android.view.Menu)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.policy.impl.PhoneWindowManager: long interceptKeyBeforeDispatching(android.view.WindowManagerPolicy$WindowState,android.view.KeyEvent,int)>	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.contacts.list.EmailAddressListAdapter: android.net.Uri getContactUri(int,android.database.Cursor,int,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.model.AccountTypeManager: com.android.contacts.model.AccountTypeManager createAccountTypeManager(android.content.Context)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.bluetooth.DockService: void handleBtStateChange(android.content.Intent,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.mms.data.WorkingMessage: android.net.Uri createDraftMmsMessage(com.google.android.mms.pdu.PduPersister,com.google.android.mms.pdu.SendReq,com.android.mms.model.SlideshowModel,android.net.Uri)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.inputmethod.keyboard.LatinKeyboardView: boolean access$000(com.android.inputmethod.keyboard.LatinKeyboardView,com.android.inputmethod.keyboard.Key,com.android.inputmethod.keyboard.PointerTracker)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.calendar.month.MonthByWeekFragment: boolean goTo(long,boolean,boolean,boolean)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.internal.os.storage.ExternalStorageFormatter: int onStartCommand(android.content.Intent,int,int)>	android.permission.MOUNT_UNMOUNT_FILESYSTEMS	android.permission.MOUNT_FORMAT_FILESYSTEMS	
<com.android.phone.MobileNetworkSettings$MyHandler: void resetNetworkModeToDefault()>	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.contacts.list.DirectoryListLoader: java.lang.Object loadInBackground()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.app.IActivityManager: void setProcessLimit(int)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.browser.AddBookmarkPage$1: void onLoadFinished(android.content.Loader,com.android.browser.AddBookmarkPage$EditBookmarkInfo)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.server.connectivity.Tethering: void sendTetherStateChangedBroadcast()>	android.permission.VIBRATE	android.permission.BROADCAST_STICKY	android.permission.ACCESS_NETWORK_STATE	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void startMsgListQuery()>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.contacts.activities.ShowOrCreateActivity: void onStart()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.email.SingleRunningTask: void run(java.lang.Object)>	android.permission.MANAGE_ACCOUNTS	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.exchange.EasOutboxService: void sendFailed(long,int)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.NavigationBarTablet: void onClick(android.view.View)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.contacts.list.PhoneNumberPickerFragment: void onLoadFinished(android.content.Loader,java.lang.Object)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.data.Contact$ContactsCache: void updateContact(com.android.mms.data.Contact)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.list.AccountFilterActivity: void onStart()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.policy.impl.KeyguardUpdateMonitor$InfoCallbackImpl: void onUserChanged(int)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.server.ConnectivityService: void access$900(com.android.server.ConnectivityService,android.net.NetworkInfo)>	android.permission.CHANGE_WIFI_STATE	android.permission.BROADCAST_STICKY	android.permission.ACCESS_NETWORK_STATE	
<com.android.settings.bluetooth.LocalBluetoothProfile: int getPreferred(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.mms.transaction.SendTransaction: void notifyObservers()>	android.permission.CHANGE_WIFI_STATE	android.permission.READ_SMS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SMS	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.RECEIVE_SMS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.exchange.adapter.AbstractSyncAdapter: boolean parse(java.io.InputStream)>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.activities.ConfirmAddDetailActivity$QueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothHandsfree$14: android.bluetooth.AtCommandResult handleTestCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.settings.bluetooth.BluetoothDevicePreference: void onClicked()>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.browser.SnapshotTab: void updateShouldCaptureThumbnails()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.internal.policy.impl.KeyguardViewMediator: void adjustUserActivityLocked()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<android.bluetooth.BluetoothInputDevice: boolean setPriority(android.bluetooth.BluetoothDevice,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<android.filterpacks.imageproc.ColorTemperatureFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.filterpacks.imageproc.AlphaBlendFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.server.sip.SipService: void onConnectivityChanged(android.net.NetworkInfo)>	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<com.android.gallery3d.ui.CropView$FaceHighlightView: void removeOneComponent(com.android.gallery3d.ui.GLView)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.ContactLoader: void deliverResult(com.android.contacts.ContactLoader$Result)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.transaction.MessagingNotification$3: void onPostExecute(java.lang.Object)>	android.permission.READ_SMS	android.permission.VIBRATE	
<android.location.LocationManager: void _requestLocationUpdates(java.lang.String,android.location.Criteria,long,float,boolean,android.app.PendingIntent)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<android.net.wifi.IWifiManager$Stub$Proxy: void setFrequencyBand(int,boolean)>	android.permission.CHANGE_WIFI_STATE	android.permission.WRITE_SETTINGS	
<com.android.mms.ui.ComposeMessageActivity$23: void run()>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.contacts.ContactSaveService$Listener: void onServiceCompleted(android.content.Intent)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.app.AlertActivity: void onCreate(android.os.Bundle)>	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.BLUETOOTH	
<com.android.contacts.ContactsActivity: void onServiceCompleted(android.content.Intent)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.InCallScreen$13: void onCancel(android.content.DialogInterface)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.BLUETOOTH	
<android.filterpacks.text.ToUpperCase: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.bluetooth.IBluetoothHeadset$Stub: boolean stopVoiceRecognition(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.KeyguardViewMediator: void access$1300(com.android.internal.policy.impl.KeyguardViewMediator)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.voicedialer.VoiceDialerActivity$4: void run()>	android.permission.VIBRATE	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.browser.PhoneUi: boolean onOptionsItemSelected(android.view.MenuItem)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.nfc.nxp.NativeNfcManager: void notifyLlcpLinkActivation(com.android.nfc.nxp.NativeP2pDevice)>	android.permission.GET_TASKS	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.activities.AttachPhotoActivity: void onServiceCompleted(android.content.Intent)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.app.CropImage: void onConfigurationChanged(android.content.res.Configuration)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler: void onClick(android.view.View)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.app.AlbumSetPage: void onSelectionModeChange(int)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	
<com.android.email.activity.MessagesAdapter$MessagesCursorLoader: android.database.Cursor loadInBackground()>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.ContactListFilterController: void setContactListFilter(com.android.contacts.list.ContactListFilter,boolean)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.camera.ShutterButton: boolean performClick()>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<android.filterpacks.videosrc.SurfaceTextureSource: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.calendar.event.EditEventFragment$Done: void run()>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<android.net.wifi.SupplicantStateTracker$CompletedState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.mms.ui.ConversationList$8: void run()>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.mms.transaction.MessagingNotification: void notifyFailed(android.content.Context,boolean,long,boolean)>	android.permission.READ_SMS	android.permission.VIBRATE	
<com.android.camera.ui.IndicatorControlBarContainer: void onSettingChanged()>	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.RECORD_AUDIO	
<com.android.contacts.widget.PinnedHeaderListDemoActivity$TestPinnedHeaderListAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.AccessibilitySettings: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>	android.permission.WRITE_SETTINGS	android.permission.CHANGE_CONFIGURATION	
<com.android.server.pm.ShutdownThread: void run()>	android.permission.VIBRATE	android.permission.MOUNT_UNMOUNT_FILESYSTEMS	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.phone.CallNotifier: void onCdmaCallWaitingReject()>	android.permission.VIBRATE	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	
<com.android.inputmethod.latin.UserDictionary: boolean isValidWord(java.lang.CharSequence)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.internal.widget.LockPatternView: com.android.internal.widget.LockPatternView$Cell detectAndAddHit(float,float)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1: boolean performAction(int,int,android.os.Bundle)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.internal.policy.impl.AccountUnlockScreen: void onTextChanged(java.lang.CharSequence,int,int,int)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.internal.telephony.cdma.CDMALTEPhone: void <init>	android.permission.CHANGE_WIFI_STATE	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	android.permission.CHANGE_CONFIGURATION	android.permission.SET_TIME_ZONE	android.permission.WAKE_LOCK	
<com.android.phone.PhoneApp: void onConfigurationChanged(android.content.res.Configuration)>	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<android.net.wifi.WifiWatchdogStateMachine$OnlineState: boolean processMessage(android.os.Message)>	android.permission.CHANGE_WIFI_STATE	android.permission.GET_TASKS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.INTERNET	android.permission.BROADCAST_STICKY	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.settings.bluetooth.DockService: java.lang.CharSequence[] initBtSettings(android.bluetooth.BluetoothDevice,int,boolean)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.camera.VideoCamera: void createCameraScreenNail(boolean)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pDisablingState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.phone.BluetoothHandsfree$22: android.bluetooth.AtCommandResult handleTestCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.browser.Controller: void goBackOnePageOrQuit()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.filterpacks.imageproc.SepiaFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.contacts.activities.PeopleActivity: void configureContactListFragmentForRequest()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.InCallScreen: void internalRespondViaSms()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<android.media.effect.effects.AutoFixEffect: void apply(int,int,int,int)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.contacts.model.EntityDelta: void buildDiff(java.util.ArrayList)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.Settings$SoundSettingsActivity: void onResume()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.providers.downloads.Helpers: java.lang.String generateSaveFile(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,long,boolean,com.android.providers.downloads.StorageManager)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.inputmethod.latin.ExpandableBinaryDictionary$AsyncReloadDictionaryTask: void run()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.browser.UrlInputView$UrlInputListener: void onAction(java.lang.String,java.lang.String,java.lang.String)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.camera.VideoCamera: void onCancelBgTraining(android.view.View)>	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.RECORD_AUDIO	
<com.android.calendar.CalendarController$EventHandler: void handleEvent(com.android.calendar.CalendarController$EventInfo)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.contacts.ContactSaveService: void updateGroup(android.content.Intent)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.activities.ContactEditorActivity$1: void onClick(android.view.View)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.base.FrameSource: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.app.PendingIntent)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<android.media.IAudioService$Stub$Proxy: void stopBluetoothSco(android.os.IBinder)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<android.server.BluetoothBondState: void setBondState(java.lang.String,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.PhoneWindowManager: void screenTurningOn(android.view.WindowManagerPolicy$ScreenOnListener)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.phone.BluetoothAtPhonebook: android.bluetooth.AtCommandResult access$1000(com.android.phone.BluetoothAtPhonebook)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.settings.widget.SettingsAppWidgetProvider$WifiStateTracker: void setImageViewResources(android.content.Context,android.widget.RemoteViews)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<android.net.wifi.WifiStateMachine: boolean access$16000(android.net.wifi.WifiStateMachine,java.util.ArrayList)>	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	
<android.filterpacks.text.StringLogger: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.email.activity.MessagesAdapter$SearchCursorLoader: android.database.Cursor loadInBackground()>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	android.permission.READ_SYNC_SETTINGS	
<com.android.providers.telephony.SmsProvider: int deleteMessageFromIcc(java.lang.String)>	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.inputmethod.latin.spellcheck.DictionaryPool: java.lang.Object take()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.filterpacks.imageproc.SaturateFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.browser.NavigationBarPhone: void onClick(android.view.View)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.net.IConnectivityManager$Stub: int stopUsingNetworkFeature(int,java.lang.String)>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.LatinIME: void onCodeInput(int,int,int)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.bluetooth.IBluetooth$Stub: boolean setDiscoverableTimeout(int)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.nfc.handover.HandoverManager: void doHandoverUri(android.net.Uri[],android.nfc.NdefMessage)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.bluetooth.opp.BluetoothOppTransfer: void doOpushSdp()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.bluetooth.opp.BluetoothOppBtErrorActivity: void onCreate(android.os.Bundle)>	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.BLUETOOTH	
<com.android.exchange.EmailSyncAlarmReceiver: void handleReceive(android.content.Context)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.server.am.ActivityManagerService: void forceStopPackageLocked(java.lang.String,int)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.mms.transaction.Transaction: byte[] getPdu(java.lang.String)>	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	
<android.filterpacks.imageproc.RotateFilter: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.phone.InCallTouchUi: void onClick(android.view.View)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.exchange.CalendarSyncEnabler: void enableEasCalendarSync()>	android.permission.VIBRATE	android.permission.WRITE_SYNC_SETTINGS	android.permission.GET_ACCOUNTS	
<com.android.email.activity.UIControllerTwoPane$RefreshTask: void onSuccess(java.lang.Boolean)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.Tab: void deleteThumbnail()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.calendar.agenda.AgendaListView: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.phone.BluetoothHeadsetService: void getSdpRecordsAndConnect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.bluetooth.opp.BluetoothOppService: void updateFromProvider()>	android.permission.BLUETOOTH_ADMIN	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.settings.deviceinfo.Memory: void onPause()>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.exchange.CalendarSyncAdapterService: void access$000(android.content.Context,android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>	android.permission.VIBRATE	android.permission.READ_CALENDAR	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.ui.GLRootView: void onDrawFrameLocked(javax.microedition.khronos.opengles.GL10)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<android.net.DhcpStateMachine$DefaultState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<android.bluetooth.BluetoothDeviceProfileState: void handleConnectionOfOtherProfiles(int)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.phone.CallCard: void updatePhotoForCallState(com.android.internal.telephony.Call)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.vcard.VCardComposer: boolean init()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.systemui.SystemUI: void start()>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.browser.Controller: boolean switchToTab(com.android.browser.Tab)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.server.VibratorService: void onInputDeviceAdded(int)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	
<android.filterpacks.performance.ThroughputFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.email.activity.MessageListFragment$MessageOpenTask: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.activities.PeopleActivity: boolean areGroupWritableAccountsAvailable()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.view.BookmarkExpandableView: void onTop(com.android.browser.BreadCrumbView,int,java.lang.Object)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.contacts.activities.ContactDetailActivity: void onStart()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.bluetooth.IBluetoothHeadset$Stub: boolean setPriority(android.bluetooth.BluetoothDevice,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	
<com.android.settings.bluetooth.LocalBluetoothProfile: void setPreferred(android.bluetooth.BluetoothDevice,boolean)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.calendar.event.EditEventFragment: void onPause()>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.contacts.list.ContactListFilterControllerImpl: boolean filterAccountExists()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.ShortcutIntentBuilder$ContactLoadingAsyncTask: void loadPhoto()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.server.BootReceiver: void onReceive(android.content.Context,android.content.Intent)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<android.bluetooth.BluetoothInputDevice: boolean disconnect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.emailcommon.utility.EmailAsyncTask$InnerTask: void onPostExecute(java.lang.Object)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.ui.CropView$HighlightRectangle: boolean dispatchTouchEvent(android.view.MotionEvent)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.inputmethod.latin.LatinIME: void pickSuggestionManuallyWhileInBatchEdit(int,java.lang.CharSequence,int,int,android.view.inputmethod.InputConnection)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.calendar.agenda.AgendaWindowAdapter: boolean access$1600(com.android.calendar.agenda.AgendaWindowAdapter,com.android.calendar.agenda.AgendaWindowAdapter$QuerySpec)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean copyMessageToIccEf(int,byte[],byte[])>	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.common.contacts.BaseEmailAddressAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.BrowserSettings: void clearHistory()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.gallery3d.ui.PhotoView: void renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<android.filterpacks.imageproc.LomoishFilter: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.exchange.ExchangeService$1: void loadAttachmentStatus(long,long,int,int)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.server.am.ActivityManagerService$6: void onReceive(android.content.Context,android.content.Intent)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.server.location.CountryDetectorBase: android.location.Country detectCountry()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.gallery3d.ui.EdgeView: void renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.mms.data.WorkingMessage: void deleteDraftSmsMessage(long)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<android.provider.Contacts$People: void markAsContacted(android.content.ContentResolver,long)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.Controller: void onBackKey()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.net.INetworkPolicyManager: void setNetworkPolicies(android.net.NetworkPolicy[])>	android.permission.ACCESS_WIFI_STATE	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.server.usb.UsbDeviceManager: void systemReady()>	android.permission.VIBRATE	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	
<com.android.camera.ui.BasicSettingPopup$Listener: void onSettingChanged()>	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.RECORD_AUDIO	
<com.android.server.am.ActivityManagerService: void systemReady(java.lang.Runnable)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.internal.widget.multiwaveview.GlowPadView: void switchToState(int,float,float)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.USE_CREDENTIALS	android.permission.READ_CONTACTS	android.permission.MANAGE_ACCOUNTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.settings.Settings$AccountSyncSettingsInAddAccountActivity: void onResume()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.emailcommon.service.IEmailServiceCallback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<android.media.effect.SizeChangeEffect: void apply(int,int,int,int)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.server.location.GpsLocationProvider: void reportAGpsStatus(int,int,int)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<android.net.IConnectivityManager$Stub$Proxy: void setGlobalProxy(android.net.ProxyProperties)>	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	
<com.android.inputmethod.latin.suggestions.MoreSuggestionsView$1: void onCodeInput(int,int,int)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.email.activity.MessageViewFragmentBase: void onOpenAttachment(com.android.email.activity.MessageViewFragmentBase$MessageViewAttachmentInfo)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.server.connectivity.Tethering$TetherInterfaceSM$TetheredState: boolean processMessage(android.os.Message)>	android.permission.VIBRATE	android.permission.BROADCAST_STICKY	android.permission.ACCESS_NETWORK_STATE	
<com.android.internal.util.StateMachine$SmHandler$HaltingState: void enter()>	android.permission.CHANGE_WIFI_STATE	android.permission.GET_TASKS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<android.filterpacks.imageproc.AutoFixFilter: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.settings.Settings$AndroidBeamSettingsActivity: void onResume()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.mms.data.Conversation: void dumpSmsTable(android.content.Context)>	android.permission.READ_SMS	android.permission.RECEIVE_SMS	
<com.android.browser.UrlHandler: boolean handleMenuClick(com.android.browser.Tab,java.lang.String)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.server.am.ActivityManagerService: boolean updateConfigurationLocked(android.content.res.Configuration,com.android.server.am.ActivityRecord,boolean,boolean)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<android.widget.QuickContactBadge$QueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.DataUsageSummary: void onResume()>	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.server.connectivity.Tethering$TetherInterfaceSM$StartingState: void enter()>	android.permission.VIBRATE	android.permission.BROADCAST_STICKY	android.permission.ACCESS_NETWORK_STATE	
<com.android.browser.TabControl: boolean setCurrentTab(com.android.browser.Tab,boolean)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.email.RefreshManager$SendPendingMessagesForAllAccountsImpl: void onPostExecute(java.lang.Long[])>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler: int getPhotoPickSize()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.camera.PanoramaActivity: void onBackPressed()>	android.permission.NFC	android.permission.VIBRATE	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	android.permission.RECORD_AUDIO	
<android.net.wifi.WifiStateMachine$DriverUnloadingState$1: void run()>	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	
<com.android.mms.transaction.MessagingNotification: void notifySendFailed(android.content.Context,boolean)>	android.permission.READ_SMS	android.permission.VIBRATE	
<com.android.inputmethod.keyboard.LatinKeyboardView: boolean onLongPress(com.android.inputmethod.keyboard.Key,com.android.inputmethod.keyboard.PointerTracker)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.phone.CallerInfoCache: void refreshCacheEntry()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.phone.BluetoothHandsfree$VendorSpecificCommandHandler: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: void doWork()>	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void <init>	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	
<android.app.IActivityManager: void killApplicationWithUid(java.lang.String,int)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.email.activity.MessagesAdapter$SearchCursorLoader: java.lang.Object loadInBackground()>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.LocationSettings: void onCreate(android.os.Bundle)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.READ_PHONE_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.contacts.editor.TextFieldsEditorView: void onLabelRebuilt()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.PhoneInterfaceManager: android.os.Bundle getCellLocation()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.mms.ui.ConversationListItem: void updateAvatarView()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.exchange.EasAccountService: void sync(com.android.exchange.adapter.AbstractSyncAdapter)>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_CALENDAR	android.permission.ACCESS_NETWORK_STATE	android.permission.WRITE_CALENDAR	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.util.State: boolean processMessage(android.os.Message)>	android.permission.CHANGE_WIFI_STATE	android.permission.GET_TASKS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.INTERNET	android.permission.BROADCAST_STICKY	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<android.net.wifi.SupplicantStateTracker$HandshakeState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.calendar.agenda.AgendaFragment: void eventsChanged()>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<android.accounts.AccountManager$2: android.accounts.AccountManager$Future2Task start()>	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean disconnectHeadsetInternal(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.server.AlarmManagerService: void <init>	android.permission.SET_TIME_ZONE	android.permission.WAKE_LOCK	
<com.android.internal.policy.impl.LockPatternKeyguardView: boolean dispatchKeyEvent(android.view.KeyEvent)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.contacts.vcard.NfcImportVCardActivity$ImportTask: java.lang.Object doInBackground(java.lang.Object[])>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.provider.UserDictionary$Words: void addWord(android.content.Context,java.lang.String,int,java.lang.String,java.util.Locale)>	android.permission.READ_USER_DICTIONARY	android.permission.WRITE_USER_DICTIONARY	
<android.content.SyncManager$4: void onReceive(android.content.Context,android.content.Intent)>	android.permission.VIBRATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<com.android.mms.ui.MessageListItem: void bind(com.android.mms.ui.MessageItem,boolean,int)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.transaction.SmsMessageSender: void <init>	android.permission.READ_SMS	android.permission.RECEIVE_SMS	
<android.filterpacks.imageproc.FixedRotationFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.internal.telephony.ServiceStateTracker: void handlePollStateResult(int,android.os.AsyncResult)>	android.permission.VIBRATE	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	android.permission.SET_TIME_ZONE	
<android.filterpacks.base.FrameSource: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.inputmethod.keyboard.internal.KeyboardState: void onPressKey(int,boolean,int)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.internal.policy.impl.LockPatternKeyguardView$3: void goToLockScreen()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.email.activity.setup.MailboxSettings$LoadMailboxTask: void callOnPostExecuteForTest(java.lang.Object)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.email.activity.EmailActivity: boolean onOptionsItemSelected(android.view.MenuItem)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<android.server.BluetoothA2dpService: void <init>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.ContactLoader: void onStartLoading()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.LegacyContactListAdapter: android.net.Uri getPersonUri(int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean connectHeadsetInternal(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<android.provider.ContactsContract$Contacts: void markAsContacted(android.content.ContentResolver,long)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.common.widget.GroupingListAdapter: void onContentChanged()>	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.mms.transaction.NotificationTransaction: void sendNotifyRespInd(int)>	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	
<com.android.contacts.list.DefaultContactBrowseListFragment: void onItemClick(int,long)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.OtaUtils: void cleanOtaScreen(boolean)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.settings.bluetooth.BluetoothEventManager: void access$1400(com.android.settings.bluetooth.BluetoothEventManager,com.android.settings.bluetooth.CachedBluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.phone.EmergencyCallHelper: void cleanup()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.detail.ContactDetailLayoutController: void initialize(android.os.Bundle)>	android.permission.NFC	android.permission.READ_PHONE_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.pm.PackageManagerService$AppDirObserver: void onEvent(int,java.lang.String)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.util.List getNeighboringCellInfo()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.inputmethod.latin.SynchronouslyLoadedContactsDictionary: void startDictionaryLoadingTaskLocked()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.internal.telephony.gsm.GSMPhone: void <init>	android.permission.CHANGE_WIFI_STATE	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	android.permission.CHANGE_CONFIGURATION	
<com.android.settings.accounts.AccountSyncSettings: void onActivityCreated(android.os.Bundle)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.server.connectivity.Tethering$TetherMasterSM$InitialState: void chooseUpstreamType(boolean)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.ContactsDictionary: void loadDictionaryAsync()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.mms.transaction.NotificationTransaction: void <init>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.phone.NotificationMgr: void updateInCallNotification()>	android.permission.VIBRATE	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	
<com.android.settings.SoundSettings: void onCreate(android.os.Bundle)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.READ_PHONE_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.server.location.GpsLocationProvider: void access$1000(com.android.server.location.GpsLocationProvider,int,android.net.NetworkInfo)>	android.permission.CHANGE_NETWORK_STATE	android.permission.WAKE_LOCK	
<com.android.settings.widget.SettingsAppWidgetProvider$BluetoothStateTracker: int getTriState(android.content.Context)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<android.bluetooth.BluetoothDeviceProfileState$OutgoingA2dp: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.contacts.vcard.ImportVCardActivity: void onCreate(android.os.Bundle)>	android.permission.NFC	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.vcard.NfcImportVCardActivity: com.android.contacts.vcard.ImportRequest createImportRequest()>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.server.BluetoothAdapterStateMachine$HotOff: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.email.mail.store.ServiceStore: android.os.Bundle checkSettings()>	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	
<com.android.internal.os.RuntimeInit: void wtf(java.lang.String,java.lang.Throwable)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<android.net.IConnectivityManager$Stub: int startUsingNetworkFeature(int,java.lang.String,android.os.IBinder)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.deskclock.AlarmInitReceiver$1: void run()>	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.phone.NotificationMgr: void updateInCallNotification(boolean)>	android.permission.VIBRATE	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	
<com.android.contacts.vcard.NfcImportVCardActivity: void onCreate(android.os.Bundle)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.emailcommon.service.IAccountService: void reconcileAccounts(java.lang.String,java.lang.String)>	android.permission.MANAGE_ACCOUNTS	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.vcard.VCardParserImpl_V30: boolean parseOneVCard()>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.bluetooth.BluetoothPairingDialog: void onCreate(android.os.Bundle)>	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.BLUETOOTH	
<android.net.wifi.WifiManager: android.os.Messenger getWifiServiceMessenger()>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	
<com.android.mms.ui.ComposeMessageActivity$DiscardDraftListener: void onClick(android.content.DialogInterface,int)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.launcher2.DragController: void startDrag(android.graphics.Bitmap,int,int,com.android.launcher2.DragSource,java.lang.Object,int,android.graphics.Point,android.graphics.Rect,float)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	
<com.android.mms.ui.ComposeMessageActivity: android.content.Intent createIntent(android.content.Context,long)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.exchange.adapter.AbstractSyncAdapter: boolean sendLocalChanges(com.android.exchange.adapter.Serializer)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_CALENDAR	android.permission.READ_SYNC_SETTINGS	
<android.location.ILocationManager$Stub$Proxy: java.lang.String getBestProvider(android.location.Criteria,boolean)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.gallery3d.ui.PhotoView: boolean access$3600(com.android.gallery3d.ui.PhotoView,float,float)>	android.permission.NFC	android.permission.VIBRATE	
<com.android.contacts.list.AccountFilterActivity$FilterLoader: java.lang.Object loadInBackground()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.activities.GroupBrowserActivity: void onCreate(android.os.Bundle)>	android.permission.NFC	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.Presenter: void present(com.android.mms.util.ItemLoadedCallback)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<android.net.wifi.WifiStateMachine$DriverUnloadingState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.mms.ui.ConversationList: void openThread(long)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.internal.widget.multiwaveview.GlowPadView: boolean onHoverEvent(android.view.MotionEvent)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.USE_CREDENTIALS	android.permission.READ_CONTACTS	android.permission.MANAGE_ACCOUNTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.gallery3d.app.AbstractGalleryActivity: void onConfigurationChanged(android.content.res.Configuration)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<android.filterpacks.videoproc.BackDropperFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.internal.widget.multiwaveview.GlowPadView: void doFinish()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.USE_CREDENTIALS	android.permission.READ_CONTACTS	android.permission.MANAGE_ACCOUNTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.browser.NavTabScroller$OnRemoveListener: void onRemovePosition(int)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.media.MediaScannerConnection$1: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.calendar.DayView$CalendarGestureListener: boolean onSingleTapUp(android.view.MotionEvent)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<android.bluetooth.BluetoothHeadset: boolean connectHeadsetInternal(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.gallery3d.app.SlideshowPage$1: void renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.internal.telephony.PhoneProxy: void updatePhoneObject(int)>	android.permission.CHANGE_WIFI_STATE	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	android.permission.CHANGE_CONFIGURATION	android.permission.SET_TIME_ZONE	android.permission.WAKE_LOCK	
<android.content.SyncManager: void scheduleSync(android.accounts.Account,int,java.lang.String,android.os.Bundle,long,boolean)>	android.permission.VIBRATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<com.android.email.Controller$15: void broadcastCallback(com.android.email.Controller$ServiceCallbackWrapper)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.WebViewController: com.android.browser.Tab openTab(java.lang.String,com.android.browser.Tab,boolean,boolean)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.server.am.BroadcastQueue: void processNextBroadcast(boolean)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.gallery3d.gadget.MediaSetSource: void reload()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.server.wm.WindowManagerService: void systemReady()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.exchange.EasAccountService: android.os.Bundle validate(java.lang.Class,com.android.emailcommon.provider.HostAuth,android.content.Context)>	android.permission.READ_CALENDAR	android.permission.WAKE_LOCK	
<com.android.internal.telephony.ISms$Stub: boolean copyMessageToIccEf(int,byte[],byte[])>	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.contacts.vcard.ImportVCardActivity$VCardCacheThread: void run()>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.latin.UserBinaryDictionary: void getBigrams(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.CallDetailActivity$6: java.lang.Void doInBackground(java.lang.Void[])>	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WRITE_CALL_LOG	
<com.android.contacts.calllog.CallLogFragment: void updateOnExit()>	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WRITE_CALL_LOG	
<com.android.contacts.activities.ConfirmAddDetailActivity: void startPhotoQuery(long,android.net.Uri)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.gallery3d.ui.PhotoView: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.exchange.adapter.EmailSyncAdapter: void setSyncKey(java.lang.String,boolean)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothHandsfree$21: android.bluetooth.AtCommandResult handleActionCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.settings.bluetooth.BluetoothNameDialogFragment: void setDeviceName(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.server.BackupManagerService$PerformFullBackupTask: void backupOnePackage(android.content.pm.PackageInfo,java.io.OutputStream)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.email.EmailAddressAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.detail.ContactLoaderFragment: void loadUri(android.net.Uri)>	android.permission.READ_PHONE_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.DTMFTwelveKeyDialer: void closeDialer(boolean)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.browser.Tab: void capture()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.email.activity.MessageFileViewFragment: void onClick(android.view.View)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.email.activity.MessageViewFragmentBase$LoadBodyTask: void callOnPostExecuteForTest(java.lang.Object)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<android.server.BluetoothA2dpService: void onBluetoothDisable()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.server.am.ActivityManagerService: void realStartServiceLocked(com.android.server.am.ServiceRecord,com.android.server.am.ProcessRecord)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.server.net.NetworkPolicyManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.ACCESS_WIFI_STATE	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.exchange.ExchangeService$2: void updateFolderList(long)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.bluetooth.BluetoothPairingRequest: void onReceive(android.content.Context,android.content.Intent)>	android.permission.VIBRATE	android.permission.BLUETOOTH	
<com.android.email.activity.MessageCompose$LoadMessageTask: void callOnPostExecuteForTest(java.lang.Object)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.Tab$2: void doUpdateVisitedHistory(android.webkit.WebView,java.lang.String,boolean)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.settings.DataUsageSummary: void setMobileDataEnabled(boolean)>	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.detail.ContactDetailUpdatesFragment$2: void onClick(android.view.View)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: boolean showMessageDetails(com.android.mms.ui.MessageItem)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.gallery3d.ui.PhotoView: boolean switchWithCaptureAnimation(int)>	android.permission.NFC	android.permission.VIBRATE	
<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void fixTimeZone(java.lang.String)>	android.permission.BROADCAST_STICKY	android.permission.SET_TIME_ZONE	
<android.bluetooth.BluetoothDeviceProfileState: void processIncomingConnectCommand(int)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.mms.util.PduLoaderManager$PduTask$1: void run()>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.group.GroupEditorFragment$2: android.content.Loader onCreateLoader(int,android.os.Bundle)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.providers.contacts.ContactsProvider2: void performBackgroundTask(int,java.lang.Object)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.interactions.ImportExportDialogFragment: boolean handleImportRequest(int)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.users.UserSettings: void onCreate(android.os.Bundle)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.READ_PHONE_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.common.widget.CompositeCursorAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.bluetooth.DockService: void access$100(com.android.settings.bluetooth.DockService,android.os.Message)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.nfc.P2pLinkManager: int doSnepProtocol(com.android.nfc.handover.HandoverManager,android.nfc.NdefMessage,android.net.Uri[])>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<android.bluetooth.IBluetooth$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.server.BatteryService: void processValues()>	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture editProperties(java.lang.String,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.internal.telephony.cat.RilMessageDecoder$StateStart: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.phone.PhoneApp: void setBeginningCall(boolean)>	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.UserBinaryDictionary: void asyncReloadDictionaryIfRequired()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.mms.ui.ComposeMessageActivity: boolean saveRingtone(long)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.browser.ActivityController: boolean onContextItemSelected(android.view.MenuItem)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.settings.DreamSettings: void onResume()>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_USER_DICTIONARY	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<android.bluetooth.BluetoothDeviceProfileState: boolean handleIncomingConnection(int,boolean)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<android.app.ActivityManagerNative: void updatePersistentConfiguration(android.content.res.Configuration)>	android.permission.WRITE_SETTINGS	android.permission.CHANGE_CONFIGURATION	
<android.net.IConnectivityManager: boolean setRadios(boolean)>	android.permission.CHANGE_WIFI_STATE	android.permission.CHANGE_NETWORK_STATE	
<android.bluetooth.IBluetoothHeadset$Stub: boolean startVoiceRecognition(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.settings.DataUsageSummary: void setRestrictBackground(boolean)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	
<com.android.mms.transaction.SendTransaction: byte[] sendPdu(byte[],java.lang.String)>	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	
<com.android.internal.widget.multiwaveview.MultiWaveView: void vibrate()>	android.permission.VIBRATE	android.permission.WAKE_LOCK	
<com.android.gallery3d.ui.MenuExecutor$ProgressListener: void onProgressComplete(int)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture updateCredentials(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.phone.PhoneUtils: com.android.phone.PhoneUtils$CallerInfoToken startGetCallerInfo(android.content.Context,com.android.internal.telephony.Connection,com.android.internal.telephony.CallerInfoAsyncQuery$OnQueryCompleteListener,java.lang.Object)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	
<com.android.browser.Controller$Download: void saveDataUri()>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void handleCdmaSubscriptionSource(int)>	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	android.permission.SET_TIME_ZONE	android.permission.WAKE_LOCK	
<com.android.contacts.editor.StructuredNameEditorView: void switchFromFullNameToStructuredName()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.browser.TabControl: com.android.browser.Tab createNewTab(boolean)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.bluetooth.IBluetooth$Stub$Proxy: boolean connectPanDevice(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.browser.UiController: boolean onOptionsItemSelected(android.view.MenuItem)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.calendar.DayView: void access$4500(com.android.calendar.DayView,android.view.MotionEvent)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<android.net.IConnectivityManager$Stub: int untether(java.lang.String)>	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.phone.BluetoothHandsfree$3: android.bluetooth.AtCommandResult handleReadCommand()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<android.content.SyncManager: void access$1100(android.content.SyncManager,android.content.SyncManager$ActiveSyncContext,android.content.SyncResult)>	android.permission.VIBRATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<android.accounts.AccountManager$10: android.accounts.AccountManagerFuture start()>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.settings.deviceinfo.Memory: boolean onOptionsItemSelected(android.view.MenuItem)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.list.ContactEntryListFragment: boolean isSyncActive()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	
<android.filterpacks.imageproc.ToGrayFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.calendar.agenda.AgendaFragment: void handleEvent(com.android.calendar.CalendarController$EventInfo)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.internal.policy.impl.KeyguardViewMediator: void onScreenTurnedOff(int)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.mms.ui.ComposeMessageActivity: void addImage(android.net.Uri,boolean)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothHandsfree$3: android.bluetooth.AtCommandResult handleActionCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.settings.ProxySelector$1: void onClick(android.view.View)>	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	
<com.android.settings.bluetooth.HeadsetProfile: boolean disconnect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.server.input.InputManagerService: long notifyANR(com.android.server.input.InputApplicationHandle,com.android.server.input.InputWindowHandle)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.email.MessagingController: void access$400(com.android.email.MessagingController,com.android.emailcommon.provider.Account,com.android.emailcommon.provider.Mailbox)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.SecuritySettings: void onActivityCreated(android.os.Bundle)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.transaction.SendTransaction: void run()>	android.permission.CHANGE_WIFI_STATE	android.permission.READ_SMS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SMS	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.RECEIVE_SMS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.calendar.EmailAddressAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<android.net.IConnectivityManager$Stub$Proxy: int tether(java.lang.String)>	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.settings.bluetooth.DeviceProfilesSettings: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.exchange.ExchangeService: void requestSync(com.android.emailcommon.provider.Mailbox,int,com.android.exchange.Request)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<android.server.BluetoothService: boolean connectInputDeviceInternal(android.bluetooth.BluetoothDevice)>	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<android.media.effect.effects.ContrastEffect: void apply(int,int,int,int)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.filterpacks.imageproc.CrossProcessFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler: long getWritableEntityId()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.exchange.adapter.CalendarSyncAdapter$EasCalendarSyncParser: boolean parse()>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.bluetooth.DeviceListPreferenceFragment: void addCachedDevices()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.gallery3d.ui.GLView: void renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.internal.policy.impl.LockPatternKeyguardView: void onScreenTurnedOn()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void access$100(com.android.internal.telephony.cdma.CdmaServiceStateTracker)>	android.permission.BROADCAST_STICKY	android.permission.SET_TIME_ZONE	
<com.android.browser.Controller: boolean onContextItemSelected(android.view.MenuItem)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.internal.policy.impl.KeyguardViewMediator: void <init>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.WRITE_SETTINGS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.contacts.dialpad.DialpadFragment: boolean onLongClick(android.view.View)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	
<com.android.internal.telephony.cdma.CdmaSMSDispatcher: void handleServiceCategoryProgramData(com.android.internal.telephony.cdma.SmsMessage)>	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.settings.inputmethod.UserDictionaryAddWordFragment: boolean onOptionsItemSelected(android.view.MenuItem)>	android.permission.READ_USER_DICTIONARY	android.permission.WRITE_USER_DICTIONARY	
<com.android.mms.ui.ComposeMessageActivity: void access$7000(com.android.mms.ui.ComposeMessageActivity,int)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.email.activity.MessageList$1: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.accessibility.AccessibilityEntityProvider: void simulateKeyPress(com.android.inputmethod.keyboard.Key)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.server.sip.SipService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.USE_SIP	android.permission.WAKE_LOCK	
<com.android.internal.widget.LockPatternView: boolean onHoverEvent(android.view.MotionEvent)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<android.media.IAudioService$Stub: void stopBluetoothSco(android.os.IBinder)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<android.media.AudioService: void access$1300(android.media.AudioService,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<com.android.browser.BrowserActivity: boolean onContextItemSelected(android.view.MenuItem)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.contacts.editor.ContactEditorFragment: boolean hasPendingChanges()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.telephony.ISms$Stub$Proxy: java.util.List getAllMessagesFromIccEf()>	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.emailcommon.service.IEmailService$Stub: int searchMessages(long,com.android.emailcommon.service.SearchParams,long)>	android.permission.VIBRATE	android.permission.READ_CALENDAR	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.model.AccountTypeManagerImpl$1: void run()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.app.ManageCachePage: boolean onItemSelected(android.view.MenuItem)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.gallery3d.app.SlideshowPage: boolean onItemSelected(android.view.MenuItem)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.editor.TextFieldsEditorView$2: void afterTextChanged(android.text.Editable)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.ui.MenuExecutor: void access$700(com.android.gallery3d.ui.MenuExecutor,int,com.android.gallery3d.ui.MenuExecutor$ProgressListener)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.settings.bluetooth.CachedBluetoothDeviceManager: void onScanningStateChanged(boolean)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<android.media.effect.effects.StraightenEffect: void apply(int,int,int,int)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.mms.data.WorkingMessage: android.net.Uri access$200(android.content.Context,com.android.mms.data.Conversation,java.lang.StringBuilder)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.phone.BluetoothHandsfree: void onBluetoothEnabled()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean stopScoUsingVirtualVoiceCall(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.systemui.usb.UsbResolverActivity: void onCreate(android.os.Bundle,android.content.Intent,java.lang.CharSequence,android.content.Intent[],java.util.List,boolean)>	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.SimUnlockScreen: void onClick(android.view.View)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<android.nfc.INfcAdapter: boolean enableNdefPush()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.BLUETOOTH	
<com.android.server.input.InputManagerService: long interceptKeyBeforeDispatching(com.android.server.input.InputWindowHandle,android.view.KeyEvent,int)>	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<android.net.wifi.IWifiManager$Stub: android.os.Messenger getWifiServiceMessenger()>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	
<android.filterpacks.text.StringSource: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.nfc.INfcAdapter$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.NFC	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void getSubscriptionInfoAndStartPollingThreads()>	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	android.permission.SET_TIME_ZONE	android.permission.WAKE_LOCK	
<com.android.contacts.list.ContactBrowseListFragment: void checkSelection()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.RingerVolumePreference: void onBindDialogView(android.view.View)>	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.settings.bluetooth.HidProfile: boolean connect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<android.filterpacks.imageproc.PosterizeFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.filterpacks.base.FrameFetch: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.settings.RadioInfo: void onPause()>	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	
<com.android.calendar.AllInOneActivity: boolean onQueryTextSubmit(java.lang.String)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.camera.PanoramaActivity: boolean onOptionsItemSelected(android.view.MenuItem)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.internal.telephony.IccRecords: void onRecordLoaded()>	android.permission.BROADCAST_STICKY	android.permission.CHANGE_CONFIGURATION	
<android.view.WindowManagerPolicy: void init(android.content.Context,android.view.IWindowManager,android.view.WindowManagerPolicy$WindowManagerFuncs,android.os.LocalPowerManager)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.contacts.editor.SplitContactConfirmationDialogFragment$1: void onClick(android.content.DialogInterface,int)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.group.GroupDetailFragment: void access$400(com.android.contacts.group.GroupDetailFragment,android.database.Cursor)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.activities.PeopleActivity: boolean onPrepareOptionsMenu(android.view.Menu)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.transaction.SmsSingleRecipientSender: java.lang.String getOutgoingServiceCenter(long)>	android.permission.READ_SMS	android.permission.RECEIVE_SMS	
<android.net.wifi.WifiApConfigStore$DefaultState: void enter()>	android.permission.CHANGE_WIFI_STATE	android.permission.GET_TASKS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.ContactsBinaryDictionary: void syncReloadDictionaryIfRequired()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.internal.policy.impl.KeyguardViewMediator: void access$1900(com.android.internal.policy.impl.KeyguardViewMediator,boolean)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<android.filterpacks.imageproc.Invert: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.contacts.ContactsActivity: boolean onOptionsItemSelected(android.view.MenuItem)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.latin.suggestions.SuggestionsView: boolean dispatchTouchEvent(android.view.MotionEvent)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.gallery3d.app.AlbumSetPage$6: void run()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<android.filterpacks.imageproc.LomoishFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.settings.wifi.WifiSettings: void onPause()>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.internal.telephony.sip.SipPhoneFactory: com.android.internal.telephony.sip.SipPhone makePhone(java.lang.String,android.content.Context,com.android.internal.telephony.PhoneNotifier)>	android.permission.CHANGE_WIFI_STATE	android.permission.WRITE_SETTINGS	android.permission.CHANGE_CONFIGURATION	
<com.android.mms.ui.ComposeMessageActivity: boolean isForwardable(long)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.mms.ui.ComposeMessageActivity: boolean access$2900(com.android.mms.ui.ComposeMessageActivity,long)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<android.server.BluetoothAdapterStateMachine$BluetoothOn: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.server.am.ActivityManagerService: void requestServiceBindingsLocked(com.android.server.am.ServiceRecord)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.internal.policy.impl.KeyguardViewMediator: void hideLocked()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.contacts.list.DefaultContactListAdapter: void bindView(android.view.View,int,android.database.Cursor,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.bluetooth.BluetoothPermissionActivity: void onCreate(android.os.Bundle)>	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.BLUETOOTH	
<android.filterpacks.videoproc.BackDropperFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.provider.Contacts$Settings: java.lang.String getSetting(android.content.ContentResolver,java.lang.String,java.lang.String)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.inputmethod.latin.LatinIME: void onCreate()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.ACCESS_NETWORK_STATE	
<com.android.phone.InCallScreen: void resetInCallScreenMode()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.systemui.usb.UsbPermissionActivity: void onCreate(android.os.Bundle)>	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.BLUETOOTH	
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void onDataStallAlarm(int)>	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.internal.telephony.cdma.CdmaSMSDispatcher: int processCdmaWapPdu(byte[],int,java.lang.String)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.internal.policy.impl.PhoneWindowManager$9: void run()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.phone.BluetoothHandsfree$16: android.bluetooth.AtCommandResult handleActionCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<android.media.effect.effects.RotateEffect: void apply(int,int,int,int)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.provider.Telephony$Sms$Draft: android.net.Uri addMessage(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.mms.ui.ComposeMessageActivity: void access$5700(com.android.mms.ui.ComposeMessageActivity,android.net.Uri,boolean)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.bluetooth.BluetoothDeviceProfileState$OutgoingHandsfree: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.browser.Tab$3$1: void onClick(android.content.DialogInterface,int)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.settings.TetherSettings: void onCreate(android.os.Bundle)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.READ_PHONE_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.contacts.ContactsActivity: void onStart()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.policy.impl.KeyguardViewMediator: void access$1500(com.android.internal.policy.impl.KeyguardViewMediator)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.browser.SnapshotTab$LoadData: void onPostExecute(android.database.Cursor)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<android.nfc.NfcAdapter: boolean disableNdefPush()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.BLUETOOTH	
<com.android.contacts.util.NameConverter: java.util.Map displayNameToStructuredName(android.content.Context,java.lang.String)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.gallery3d.app.DialogPicker: void onBackPressed()>	android.permission.NFC	android.permission.VIBRATE	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	android.permission.RECORD_AUDIO	
<android.bluetooth.IBluetooth$Stub$Proxy: boolean createBondOutOfBand(java.lang.String,byte[],byte[])>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.activities.PeopleActivity: boolean access$300(com.android.contacts.activities.PeopleActivity)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.DataUsageSummary$4: void onCheckedChanged(android.widget.CompoundButton,boolean)>	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.email.activity.setup.MailboxSettings$LoadMailboxTask: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onDisconnectDone(int,android.os.AsyncResult)>	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	
<com.android.browser.SnapshotBar: void onClick(android.view.View)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.contacts.dialog.ClearFrequentsDialog$1$1: java.lang.Object doInBackground(java.lang.Object[])>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.bluetooth.DevicePickerFragment: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.server.am.ActivityManagerService: com.android.server.am.ProcessRecord startProcessLocked(java.lang.String,android.content.pm.ApplicationInfo,boolean,int,java.lang.String,android.content.ComponentName,boolean,boolean)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.contacts.vcard.ImportProcessor: void run()>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.camera.VideoCamera: void onEffectsUpdate(int,int)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<android.filterpacks.text.StringSource: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.net.wifi.WifiWatchdogStateMachine$NotConnectedState: boolean processMessage(android.os.Message)>	android.permission.CHANGE_WIFI_STATE	android.permission.GET_TASKS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.INTERNET	android.permission.BROADCAST_STICKY	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<android.net.sip.SipAudioCall$1: void onCallEstablished(android.net.sip.SipSession,java.lang.String)>	android.permission.ACCESS_WIFI_STATE	android.permission.WAKE_LOCK	
<com.android.calendar.AllInOneActivity: void eventsChanged()>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.mms.data.WorkingMessage$5: void run()>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<android.provider.Browser: void deleteFromHistory(android.content.ContentResolver,java.lang.String)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.server.pm.PackageManagerService$5: void run()>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.contacts.vcard.ImportVCardActivity: void onStart()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothHandsfree$16: android.bluetooth.AtCommandResult handleReadCommand()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<android.nfc.INfcAdapter: void dispatch(android.nfc.Tag)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.ContactListEmptyView: boolean isSyncActive()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	
<android.net.sip.SipAudioCall: void startAudio()>	android.permission.ACCESS_WIFI_STATE	android.permission.WAKE_LOCK	
<android.media.effect.effects.FillLightEffect: void apply(int,int,int,int)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.server.BluetoothEventLoop: void onInputDeviceConnectionResult(java.lang.String,int)>	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<android.bluetooth.IBluetooth: boolean cancelPairingUserInput(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<android.provider.ContactsContract$SyncState: android.content.ContentProviderOperation newSetOperation(android.accounts.Account,byte[])>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.MmsThumbnailPresenter: void presentVideoThumbnail(com.android.mms.ui.SlideViewInterface,com.android.mms.model.VideoModel)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler$PhotoEditorListener: void onRemovePictureChosen()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.calllog.CallLogAdapter: void onContentChanged()>	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.contacts.list.OnContactBrowserActionListener: void onInvalidSelection()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothHandsfree$20: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<android.bluetooth.BluetoothDeviceProfileState: void sendConnectionAccessRemovalIntent()>	android.permission.BLUETOOTH_ADMIN	android.permission.WAKE_LOCK	
<android.filterpacks.imageproc.ContrastFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.phone.BluetoothHandsfree$5: android.bluetooth.AtCommandResult handleTestCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.contacts.ContactsActivity: void onBackPressed()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.calendar.event.EditEventHelper: boolean saveEvent(com.android.calendar.CalendarEventModel,com.android.calendar.CalendarEventModel,int)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<android.filterpacks.imageproc.NegativeFilter: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.contacts.ContactSaveService: void renameGroup(android.content.Intent)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.telephony.ISms$Stub: boolean disableCellBroadcastRange(int,int)>	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<android.bluetooth.IBluetooth$Stub: boolean createBondOutOfBand(java.lang.String,byte[],byte[])>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<android.net.IConnectivityManager$Stub$Proxy: int untether(java.lang.String)>	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.gallery3d.ui.TileImageView: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<android.bluetooth.BluetoothDeviceProfileState: boolean processCommand(int)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.settings.inputmethod.UserDictionaryAddWordActivity: void onClickConfirm(android.view.View)>	android.permission.READ_USER_DICTIONARY	android.permission.WRITE_USER_DICTIONARY	
<com.android.vcard.VCardParserImpl_V21: boolean parseItem()>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.pm.PackageManagerService: void replaceSystemPackageLI(android.content.pm.PackageParser$Package,android.content.pm.PackageParser$Package,int,int,java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.browser.Controller$Download: boolean onMenuItemClick(android.view.MenuItem)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.settings.bluetooth.DeviceProfilesSettings: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.mms.transaction.NotificationTransaction: void run()>	android.permission.CHANGE_WIFI_STATE	android.permission.READ_SMS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SMS	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.RECEIVE_SMS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean disableCellBroadcast(int)>	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.email.service.MailService: boolean hasMismatchInPopImapAccounts(android.content.Context)>	android.permission.MANAGE_ACCOUNTS	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<android.view.IApplicationToken$Stub: boolean keyDispatchingTimedOut()>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<android.filterpacks.imageproc.SharpenFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.internal.telephony.ITelephony: java.util.List getAllCellInfo()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.exchange.ExchangeService: long checkMailboxes()>	android.permission.VIBRATE	android.permission.READ_CALENDAR	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.server.VibratorService: void systemReady()>	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.providers.downloads.DownloadInfo$Reader: com.android.providers.downloads.DownloadInfo newDownloadInfo(android.content.Context,com.android.providers.downloads.SystemFacade)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.nfc.NfcService: void onSeApduReceived(byte[])>	android.permission.GET_TASKS	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.browser.DownloadHandler: void onDownloadStart(android.app.Activity,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.gallery3d.ui.PhotoView: void captureAnimationDone(int)>	android.permission.NFC	android.permission.VIBRATE	
<com.android.contacts.list.ContactBrowseListFragment: void notifyInvalidSelection()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.app.DialogPicker: void onPause()>	android.permission.NFC	android.permission.VIBRATE	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	android.permission.RECORD_AUDIO	
<android.os.IVibratorService$Stub: void vibrate(long,android.os.IBinder)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	
<com.android.contacts.detail.StreamItemAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.ContactEntryListFragment: void onItemClick(int,long)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothHandsfree$5: android.bluetooth.AtCommandResult handleReadCommand()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.vpndialogs.ManageDialog: void onCreate(android.os.Bundle)>	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.BLUETOOTH	
<com.android.contacts.activities.PhotoSelectionActivity$4: void onAnimationEnd(android.animation.Animator)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.calendar.agenda.AgendaListView$3: void run()>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.contacts.editor.PhotoEditorView: void setPhotoBitmap(android.graphics.Bitmap)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.net.sip.ISipService: void open3(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.ISipSessionListener)>	android.permission.USE_SIP	android.permission.WAKE_LOCK	
<com.android.email.activity.setup.AccountSettingsEditQuickResponsesFragment$QuickResponseFinder: void callOnPostExecuteForTest(java.lang.Object)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.editor.ContactEditorFragment: void onSaveCompleted(boolean,int,boolean,android.net.Uri)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.bluetooth.pbap.BluetoothPbapObexServer: int sendVcardListingXml(int,javax.obex.Operation,int,int,java.lang.String,java.lang.String)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<android.provider.Contacts$People: android.net.Uri addToGroup(android.content.ContentResolver,long,long)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.calendar.CalendarController: void sendEvent(java.lang.Object,long,android.text.format.Time,android.text.format.Time,android.text.format.Time,long,int,long,java.lang.String,android.content.ComponentName)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.phone.BluetoothHandsfree: boolean stopVoiceRecognition()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.providers.downloads.DownloadThread: void run()>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<com.android.nfc.handover.BluetoothHeadsetHandover$2: void onReceive(android.content.Context,android.content.Intent)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.AccountUnlockScreen: void onClick(android.view.View)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.mms.data.WorkingMessage: void sendSmsWorker(java.lang.String,java.lang.String,long)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.vcard.VCardParser: void parse(java.io.InputStream,com.android.vcard.VCardInterpreter)>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.util.StateMachine$SmHandler: void performTransitions()>	android.permission.CHANGE_WIFI_STATE	android.permission.GET_TASKS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.contacts.editor.ContactEditorFragment: void bindEditorsForNewContact(com.android.contacts.model.AccountWithDataSet,com.android.contacts.model.AccountType)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.activities.GroupEditorActivity: void onServiceCompleted(android.content.Intent)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.view.IWindowManager: void clearForcedDisplaySize()>	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.contacts.editor.TextFieldsEditorView$1: void onClick(android.view.View)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.imageproc.ToPackedGrayFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.internal.os.storage.ExternalStorageFormatter$2: void run()>	android.permission.MOUNT_UNMOUNT_FILESYSTEMS	android.permission.MOUNT_FORMAT_FILESYSTEMS	
<com.android.settings.wifi.p2p.WifiP2pSettings: void onResume()>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_USER_DICTIONARY	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.phone.sip.SipSettings: void access$700(com.android.phone.sip.SipSettings,boolean)>	android.permission.WRITE_SETTINGS	android.permission.USE_SIP	
<android.server.BluetoothService: boolean disconnectPanDevice(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.emailcommon.service.IEmailService$Stub$Proxy: void sendMeetingResponse(long,int)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.imageproc.RotateFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.email.GroupMessagingListener: void loadAttachmentFinished(long,long,long)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.accounts.AccountSyncSettings: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<android.bluetooth.IBluetooth: boolean createBondOutOfBand(java.lang.String,byte[],byte[])>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.server.am.BroadcastQueue$AppNotResponding: void run()>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.mms.util.ThumbnailManager: com.android.mms.util.ItemLoadedFuture getThumbnail(android.net.Uri,boolean,com.android.mms.util.ItemLoadedCallback)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.app.AbstractGalleryActivity: void onCreate(android.os.Bundle)>	android.permission.NFC	android.permission.VIBRATE	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	android.permission.RECORD_AUDIO	
<com.android.internal.telephony.ITelephony: java.util.List getNeighboringCellInfo()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.inputmethod.latin.LatinIME: void access$300(com.android.inputmethod.latin.LatinIME,android.view.inputmethod.EditorInfo,boolean)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.server.BluetoothService: boolean setName(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.browser.Tab$2: void onReceivedLoginRequest(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.server.LocationManagerService: java.util.List getProviders(android.location.Criteria,boolean)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.contacts.list.ContactListFilterControllerImpl: com.android.contacts.list.ContactListFilterController createContactListFilterController(android.content.Context)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.vcard.VCardParserImpl_V21: boolean parseOneVCard()>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.os.IPowerManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.contacts.list.JoinContactListAdapter: android.net.Uri getContactUri(int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.quickcontact.QuickContactActivity$5: void onLoadFinished(android.content.Loader,com.android.contacts.ContactLoader$Result)>	android.permission.READ_PHONE_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.LocationManagerService: java.util.List _getProvidersLocked(android.location.Criteria,boolean)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.settings.bluetooth.DeviceProfilesSettings: void refreshProfiles()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.contacts.list.ContactBrowseListFragment: void setSelectedContactUri(android.net.Uri,boolean,boolean,boolean,boolean)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.net.INetworkPolicyManager$Stub: void setNetworkPolicies(android.net.NetworkPolicy[])>	android.permission.ACCESS_WIFI_STATE	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.settings.bluetooth.BluetoothSettings: void onResume()>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_USER_DICTIONARY	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.mms.data.Contact$ContactsCache: com.android.mms.data.Contact getContactInfoForSelf()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.settings.vpn2.VpnSettings: void onActivityCreated(android.os.Bundle)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.latin.ExpandableBinaryDictionary: void loadDictionary()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.settings.bluetooth.CachedBluetoothDevice: void setVisible(boolean)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<android.provider.Telephony$Sms$Outbox: android.net.Uri addMessage(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,boolean,long)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.calendar.month.MonthByWeekAdapter: void onDayTapped(android.text.format.Time)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.internal.policy.impl.LockPatternKeyguardView$AccountAnalyzer: void next()>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.phone.CdmaSystemSelectListPreference$MyHandler: void handleSetCdmaRoamingPreference(android.os.Message)>	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.browser.PhoneUi: void <init>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.email.activity.MessagesAdapter$MessagesCursorLoader: java.lang.Object loadInBackground()>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.ContactEntryListFragment: void onClose()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.InCallScreen: void toggleSpeaker()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<android.filterpacks.imageproc.StraightenFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.mms.util.DownloadManager$4: void run()>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.contacts.activities.DialtactsActivity: void onBackPressed()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.InCallScreen: void hangupRingingCall()>	android.permission.VIBRATE	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	
<com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService: void startUsingContactsDictionaryLocked()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.app.ActivityManagerNative: android.content.Intent registerReceiver(android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.contacts.list.PhoneNumberListAdapter: android.net.Uri getDataUri(int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.am.ActivityRecord: boolean keyDispatchingTimedOut()>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.internal.widget.SlidingTab: boolean onTouchEvent(android.view.MotionEvent)>	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.server.usb.UsbDeviceManager$UsbHandler: void updateState(java.lang.String)>	android.permission.VIBRATE	android.permission.BROADCAST_STICKY	
<com.android.browser.BrowserActivity: void onNewIntent(android.content.Intent)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.contacts.activities.GroupEditorActivity: void onBackPressed()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.ManageSimMessages: void access$500(com.android.mms.ui.ManageSimMessages,android.database.Cursor)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.settings.bluetooth.BluetoothEventManager$UuidChangedHandler: void onReceive(android.content.Context,android.content.Intent,android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.exchange.AbstractSyncService: android.os.Bundle validateAccount(com.android.emailcommon.provider.HostAuth,android.content.Context)>	android.permission.READ_CALENDAR	android.permission.WAKE_LOCK	
<com.android.gallery3d.app.PhotoDataAdapter: java.lang.Object executeAndWait(java.util.concurrent.Callable)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.phone.InCallScreen: void requestUpdateBluetoothIndication()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.internal.widget.SlidingTab: void cancelGrab()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.internal.policy.impl.PasswordUnlockScreen$3: void afterTextChanged(android.text.Editable)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean disconnect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.bluetooth.opp.BluetoothOppTransfer: void start()>	android.permission.BLUETOOTH_ADMIN	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.camera.ui.InLineSettingSwitch: boolean changeIndex(int)>	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.RECORD_AUDIO	
<android.filterfw.core.FilterFunction: android.filterfw.core.Frame execute(android.filterfw.core.KeyValueMap)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.phone.BluetoothHandsfree$24: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.KeyguardViewMediator: void verifyUnlock(android.view.WindowManagerPolicy$OnKeyguardExitResult)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.settings.bluetooth.BluetoothDevicePreference: int getConnectionSummary()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<android.server.BluetoothA2dpService: boolean resumeSink(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<android.net.IConnectivityManager$Stub$Proxy: int startUsingNetworkFeature(int,java.lang.String,android.os.IBinder)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.bluetooth.opp.BluetoothOppBtEnableActivity: void onCreate(android.os.Bundle)>	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.BLUETOOTH	
<android.server.BluetoothAdapterStateMachine$Switching: boolean processMessage(android.os.Message)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.providers.contacts.ContactsProvider2: android.content.res.AssetFileDescriptor openAssetFileLocal(android.net.Uri,java.lang.String)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.settings.bluetooth.BluetoothSettings: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<android.bluetooth.IBluetooth$Stub: boolean setInputDevicePriority(android.bluetooth.BluetoothDevice,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	
<com.android.email.Controller$LegacyListener: void loadAttachmentFinished(long,long,long)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.app.NetInitiatedActivity: void onCreate(android.os.Bundle)>	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.BLUETOOTH	
<com.android.phone.SipCallOptionHandler$1: void run()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WRITE_SETTINGS	android.permission.CHANGE_CONFIGURATION	android.permission.ACCESS_NETWORK_STATE	android.permission.USE_SIP	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.server.am.ActivityManagerService: boolean requestServiceBindingLocked(com.android.server.am.ServiceRecord,com.android.server.am.IntentBindRecord,boolean)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.internal.policy.impl.KeyguardViewMediator: void access$300(com.android.internal.policy.impl.KeyguardViewMediator,int)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.internal.widget.multiwaveview.GlowPadView: void dispatchTriggerEvent(int)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.USE_CREDENTIALS	android.permission.READ_CONTACTS	android.permission.MANAGE_ACCOUNTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.mms.util.DownloadManager: java.lang.String access$400(com.android.mms.util.DownloadManager,android.net.Uri)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.phone.InCallScreen: void handleOtaCallEnd()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.settings.ApplicationSettings: void onActivityCreated(android.os.Bundle)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.server.TelephonyRegistry: void checkListenerPermission(int)>	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	
<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask: android.accounts.AccountManagerFuture start()>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.server.ConnectivityService: void handleConnectivityChange(int,boolean)>	android.permission.BROADCAST_STICKY	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.editor.ContactEditorUtils: void <init>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.imageproc.ImageSlicer: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.net.wifi.p2p.WifiP2pService: android.os.Messenger getMessenger()>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	
<com.android.phone.CallController: com.android.phone.Constants$CallStatusCode placeCallInternal(android.content.Intent)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.phone.BluetoothAtPhonebook$2: android.bluetooth.AtCommandResult handleActionCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void <init>	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	
<com.android.server.net.NetworkStatsService$2: void onReceive(android.content.Context,android.content.Intent)>	android.permission.ACCESS_WIFI_STATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<com.android.contacts.editor.LabeledEditorView: void onOptionalFieldVisibilityChange()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void fixTimeZone(java.lang.String)>	android.permission.BROADCAST_STICKY	android.permission.SET_TIME_ZONE	
<com.android.server.ConnectivityService: void access$1800(com.android.server.ConnectivityService,int)>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.gallery3d.util.JobLimiter$JobWrapper: java.lang.Object run(com.android.gallery3d.util.ThreadPool$JobContext)>	android.permission.NFC	android.permission.VIBRATE	android.permission.INTERNET	android.permission.SET_WALLPAPER	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<android.media.effect.effects.BrightnessEffect: void apply(int,int,int,int)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.settings.bluetooth.BluetoothSettings: void onDeviceBondStateChanged(com.android.settings.bluetooth.CachedBluetoothDevice,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<android.provider.Telephony$Sms$Inbox: android.net.Uri addMessage(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,boolean)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.contacts.calllog.CallLogQueryHandler: void markNewCallsAsOld()>	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WRITE_CALL_LOG	
<com.android.gallery3d.app.Gallery: void onResume()>	android.permission.NFC	android.permission.VIBRATE	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	android.permission.RECORD_AUDIO	
<com.android.mms.transaction.ReadRecTransaction: void process()>	android.permission.CHANGE_WIFI_STATE	android.permission.READ_SMS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SMS	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.RECEIVE_SMS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.mms.data.Conversation: void access$900(android.content.Context)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.nfc.TechListChooserActivity: void onCreate(android.os.Bundle,android.content.Intent,java.lang.CharSequence,android.content.Intent[],java.util.List,boolean)>	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.BLUETOOTH	
<com.android.settings.accounts.AccountPreferenceBase$1$1: void run()>	android.permission.READ_SYNC_STATS	android.permission.READ_SYNC_SETTINGS	
<com.android.email.mail.store.ExchangeStore: android.os.Bundle checkSettings()>	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	
<com.android.contacts.calllog.CallLogAdapter: boolean access$300(com.android.contacts.calllog.CallLogAdapter,java.lang.String,java.lang.String,com.android.contacts.calllog.ContactInfo)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WRITE_CALL_LOG	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.accounts.AccountSyncSettings: void onPause()>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<android.media.IAudioService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.vcard.VCardEntry: java.lang.String toString()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.net.wifi.WifiApConfigStore$InactiveState: void enter()>	android.permission.CHANGE_WIFI_STATE	android.permission.GET_TASKS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.WhitelistDictionary: void loadDictionary()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.editor.ContactEditorFragment: void selectAccountAndCreateContact()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.ContactPhotoManagerImpl$LoaderThread: void preloadPhotosInBackground()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.inputmethod.latin.suggestions.SuggestionsView$2: void onPressKey(int)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.systemui.statusbar.BaseStatusBar$NotificationClicker: void onClick(android.view.View)>	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.DISABLE_KEYGUARD	android.permission.GET_ACCOUNTS	
<com.android.nfc.snep.SnepServer$Callback: com.android.nfc.snep.SnepMessage doGet(int,android.nfc.NdefMessage)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.BLUETOOTH	
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pEnabledState: boolean processMessage(android.os.Message)>	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	
<android.filterpacks.videosink.MediaEncoderFilter: void startRecording(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.gallery3d.ui.PhotoView: boolean snapToNeighborImage()>	android.permission.NFC	android.permission.VIBRATE	
<com.android.contacts.list.ContactBrowseListFragment: void selectDefaultContact()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.model.EntityDelta: com.android.contacts.model.AccountType getRawContactAccountType(android.content.Context)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.net.wifi.WifiWatchdogStateMachine$OnlineState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.emailcommon.service.IEmailService$Stub$Proxy: void deleteAccountPIMData(long)>	android.permission.READ_CALENDAR	android.permission.WAKE_LOCK	
<com.android.gallery3d.app.Gallery: void startGetContent(android.content.Intent)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.camera.ui.InLineSettingKnob: boolean changeIndex(int)>	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.RECORD_AUDIO	
<com.android.gallery3d.app.AlbumSetPage$1: void removeOneComponent(com.android.gallery3d.ui.GLView)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.server.VibratorService$1: void onChange(boolean)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	
<com.android.phone.InCallScreen: void onHoldClick()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.server.net.NetworkStatsService: void access$700(com.android.server.net.NetworkStatsService,int)>	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<com.android.calendar.DayView$CalendarGestureListener: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<android.media.effect.FilterGraphEffect: void apply(int,int,int,int)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.phone.BluetoothHandsfree$18: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.settings.bluetooth.PanProfile: boolean connect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: java.lang.Object doInBackground(java.lang.Object[])>	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	
<android.view.IWindowManager$Stub$Proxy: void exitKeyguardSecurely(android.view.IOnKeyguardExitResult)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.DISABLE_KEYGUARD	android.permission.GET_ACCOUNTS	
<com.android.common.widget.CompositeCursorAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.Controller: void setActiveTab(com.android.browser.Tab)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.browser.BrowserActivity: com.android.browser.Controller createController()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	
<android.bluetooth.BluetoothA2dp: boolean resumeSink(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.email.service.MailService: boolean access$200(com.android.email.service.MailService,com.android.email.Controller,long,int)>	android.permission.READ_PHONE_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.group.GroupEditorFragment$Member: void <init>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.ui.SlideshowView: boolean removeComponent(com.android.gallery3d.ui.GLView)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.internal.telephony.sip.SipPhone$SipConnection: void separate()>	android.permission.ACCESS_WIFI_STATE	android.permission.WAKE_LOCK	
<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy: boolean updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	
<android.filterpacks.base.InputStreamSource: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.camera.VideoCamera: void onInfo(android.media.MediaRecorder,int,int)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.mms.ui.ComposeMessageActivity: void checkPendingNotification()>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.contacts.editor.EventFieldEditorView: void onLabelRebuilt()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.Controller$10: java.lang.Object doInBackground(java.lang.Object[])>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.exchange.adapter.CalendarSyncAdapter$EasCalendarSyncParser: void addEvent(com.android.exchange.adapter.CalendarSyncAdapter$CalendarOperations,java.lang.String,boolean)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.gallery3d.app.PhotoDataAdapter$FullImageJob: android.graphics.BitmapRegionDecoder run(com.android.gallery3d.util.ThreadPool$JobContext)>	android.permission.NFC	android.permission.VIBRATE	android.permission.INTERNET	android.permission.SET_WALLPAPER	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.calendar.event.EditEventFragment: boolean onOptionsItemSelected(android.view.MenuItem)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.internal.telephony.DataConnection$DcActivatingState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	
<com.android.contacts.list.PostalAddressPickerFragment: void onItemClick(int,long)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.providers.contacts.LegacyApiSupport: long findFirstDataId(long,java.lang.String)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.settings.Settings$DateTimeSettingsActivity: void onResume()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<android.server.BluetoothPanProfileHandler: boolean connectPanDevice(android.bluetooth.BluetoothDevice)>	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.settings.bluetooth.CachedBluetoothDevice: void <init>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<android.media.AudioManager: void stopBluetoothSco()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<com.android.settings.bluetooth.BluetoothSettings: void onActivityCreated(android.os.Bundle)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.latin.ContactsDictionary: void getBigrams(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.browser.ActivityController: void start(android.content.Intent)>	android.permission.INTERNET	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.gallery3d.app.Gallery: void onConfigurationChanged(android.content.res.Configuration)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.server.LocationManagerService: void addProximityAlertLocked(double,double,float,long,android.app.PendingIntent)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<android.net.IConnectivityManager$Stub$Proxy: boolean setRadio(int,boolean)>	android.permission.CHANGE_WIFI_STATE	android.permission.CHANGE_NETWORK_STATE	
<com.android.gallery3d.ui.TileImageView: void removeOneComponent(com.android.gallery3d.ui.GLView)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.browser.Tab$3: void createWindow(boolean,android.os.Message)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.exchange.ExchangeService$1: void syncMailboxStatus(long,int,int)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<android.net.wifi.WifiStateMachine: void stopTethering()>	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.calllog.DefaultVoicemailNotifier: void updateNotification(android.net.Uri)>	android.permission.VIBRATE	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.email.MessagingController$11: void run()>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.policy.impl.PatternUnlockScreen: void <init>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.contacts.list.PostalAddressPickerFragment: void finish()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.provider.ContactsContract$Data: android.net.Uri getContactLookupUri(android.content.ContentResolver,android.net.Uri)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.connectivity.Tethering$TetherMasterSM$InitialState: boolean turnOnUpstreamMobileConnection(int)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.browser.BaseUi: void <init>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.internal.policy.impl.PhoneWindowManager: void systemReady()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.settings.bluetooth.DockService: com.android.settings.bluetooth.CachedBluetoothDevice getCachedBluetoothDevice(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.internal.telephony.IccSmsInterfaceManagerProxy: boolean copyMessageToIccEf(int,byte[],byte[])>	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.phone.InCallScreen: void onNewIntent(android.content.Intent)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.gallery3d.gadget.WidgetSource: android.graphics.Bitmap getImage(int)>	android.permission.NFC	android.permission.VIBRATE	android.permission.INTERNET	android.permission.SET_WALLPAPER	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary: void generateBinaryDictionary()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.inputmethod.latin.SynchronouslyLoadedContactsDictionary: void blockingReloadDictionaryIfRequired()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.net.wifi.IWifiManager: android.os.Messenger getWifiStateMachineMessenger()>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	
<android.net.wifi.IWifiManager$Stub: void setFrequencyBand(int,boolean)>	android.permission.CHANGE_WIFI_STATE	android.permission.WRITE_SETTINGS	
<android.media.IAudioService$Stub$Proxy: void setMode(int,android.os.IBinder)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<android.accounts.AccountManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.AUTHENTICATE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.settings.widget.SettingsAppWidgetProvider$StateTracker: void toggleState(android.content.Context)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.settings.bluetooth.DockService: void handleBluetoothStateOn(int)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.browser.DataController$DataControllerHandler: void run()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.inputmethod.latin.ExpandableDictionary: void getBigrams(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.bluetooth.IBluetooth$Stub: boolean connectInputDevice(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.server.net.NetworkPolicyManagerService: void addNetworkPolicyLocked(android.net.NetworkPolicy)>	android.permission.ACCESS_WIFI_STATE	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.gallery3d.app.AlbumPicker: void onResume()>	android.permission.NFC	android.permission.VIBRATE	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	android.permission.RECORD_AUDIO	
<com.android.settings.Settings$PrivacySettingsActivity: void onResume()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.contacts.activities.PeopleActivity: boolean areContactWritableAccountsAvailable()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.pm.PackageManagerService: android.content.pm.PackageParser$Package scanPackageLI(java.io.File,int,int,long)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<android.net.wifi.SupplicantStateTracker$InactiveState: boolean processMessage(android.os.Message)>	android.permission.CHANGE_WIFI_STATE	android.permission.GET_TASKS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.INTERNET	android.permission.BROADCAST_STICKY	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.contacts.editor.SelectAccountDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.BackupManagerService$PerformRestoreTask: void execute()>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.server.pm.PackageManagerService: void <init>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.providers.telephony.MmsSmsProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<android.net.wifi.WifiManager: android.os.Messenger getWifiStateMachineMessenger()>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	
<com.android.mms.transaction.SmsReceiverService: void access$400(com.android.mms.transaction.SmsReceiverService)>	android.permission.READ_SMS	android.permission.VIBRATE	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.server.input.InputManagerService$Callbacks: long interceptKeyBeforeDispatching(com.android.server.input.InputWindowHandle,android.view.KeyEvent,int)>	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.server.PowerManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.inputmethod.latin.UserHistoryDictionary: boolean reloadDictionaryIfRequired()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.settings.deviceinfo.Memory: void onResume()>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_USER_DICTIONARY	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.phone.BluetoothHeadsetService$6: boolean connectHeadsetInternal(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.server.input.InputManagerService: int interceptKeyBeforeQueueing(android.view.KeyEvent,int,boolean)>	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.CALL_PHONE	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.gallery3d.ui.TileImageView: boolean onTouch(android.view.MotionEvent)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<android.accounts.AccountManager$AmsTask: android.accounts.AccountManagerFuture start()>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<android.server.BluetoothAdapterStateMachine$Switching: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.settings.DisplaySettings: void onPause()>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.commands.svc.WifiCommand: void run(java.lang.String[])>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.ExpandableBinaryDictionary: void loadDictionaryAsync()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.editor.ContactEditorFragment$4: void onLoadFinished(android.content.Loader,java.lang.Object)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.ui.GLView: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<android.content.ISyncContext$Stub$Proxy: void onFinished(android.content.SyncResult)>	android.permission.VIBRATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<com.android.calendar.DayFragment: void goTo(android.text.format.Time,boolean,boolean)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<android.net.DhcpStateMachine$RunningState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.settings.Settings$DataUsageSummaryActivity: void onResume()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.internal.telephony.gsm.GsmServiceStateTracker: void setAndBroadcastNetworkSetTimeZone(java.lang.String)>	android.permission.BROADCAST_STICKY	android.permission.SET_TIME_ZONE	
<com.android.inputmethod.latin.SynchronouslyLoadedContactsDictionary: void getWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.gallery3d.ui.GLRootView$IdleRunner: void run()>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.contacts.list.PostalAddressPickerFragment: void setQueryString(java.lang.String,boolean)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.bluetooth.BluetoothSettings: void startScanning()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean enableCellBroadcast(int)>	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.mms.util.Recycler$SmsRecycler: void deleteOldMessages(android.content.Context)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.contacts.GroupMemberLoader: com.android.contacts.GroupMemberLoader constructLoaderForGroupDetailQuery(android.content.Context,long)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.exchange.adapter.AbstractSyncAdapter: void cleanup()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.email.activity.MessageViewFragmentBase$LoadAttachmentsTask: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.providers.contacts.ContactsProvider2$PipeMonitor: java.lang.Object doInBackground(java.lang.Object[])>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.net.NetworkPolicyManagerService: void updateNotificationsLocked()>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	
<com.android.contacts.list.JoinContactListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.inputmethod.UserDictionaryList: void onCreate(android.os.Bundle)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.READ_PHONE_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.email.activity.MailboxListFragment$FindParentMailboxTask: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.BrowserActivity: void onResume()>	android.permission.NFC	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<com.android.gallery3d.app.StateManager: void pause()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.calendar.EventInfoFragment: void initAttendeesCursor(android.view.View)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.soundrecorder.Recorder: void startRecording(int,java.lang.String,android.content.Context)>	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture confirmCredentials(android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.internal.telephony.cdma.CdmaSMSDispatcher: int processMessagePart(byte[],java.lang.String,int,int,int,long,int,boolean)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.contacts.widget.LayoutSuppressingQuickContactBadge: void assignContactFromPhone(java.lang.String,boolean)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.calendar.month.SimpleDayPickerFragment: void onActivityCreated(android.os.Bundle)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.browser.AddBookmarkPage: void onTop(com.android.browser.BreadCrumbView,int,java.lang.Object)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.internal.telephony.gsm.SIMRecords: void onAllRecordsLoaded()>	android.permission.BROADCAST_STICKY	android.permission.CHANGE_CONFIGURATION	
<com.android.emailcommon.service.IEmailService: void loadAttachment(long,boolean)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.model.AccountTypeManagerImpl: void <init>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.ui.MenuExecutor$MediaOperation: java.lang.Object run(com.android.gallery3d.util.ThreadPool$JobContext)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.editor.Editor$EditorListener: void onRequest(int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.widget.SettingsAppWidgetProvider$BluetoothStateTracker: void toggleState(android.content.Context)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: boolean access$3000(com.android.mms.ui.ComposeMessageActivity,long)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.exchange.adapter.ItemOperationsParser: boolean parse()>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.InCallScreen: void closeDialpadInternal(boolean)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.calllog.CallLogAdapter$QueryThread: void run()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WRITE_CALL_LOG	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.imageproc.CropFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.net.wifi.WifiStateMachine$DefaultState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<android.accounts.AccountManager$1: void startTask()>	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.systemui.usb.UsbAccessoryUriActivity: void onCreate(android.os.Bundle)>	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.LockPatternKeyguardView: void recreateUnlockScreen(com.android.internal.policy.impl.LockPatternKeyguardView$UnlockMode)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.wallpaper.fall.FallView: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.email.RefreshManager: boolean sendPendingMessages(long)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.email.provider.AccountReconciler: boolean reconcileAccountsInternal(android.content.Context,java.util.List,android.accounts.Account[],android.content.Context,boolean)>	android.permission.MANAGE_ACCOUNTS	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.settings.bluetooth.LocalBluetoothAdapter: void startScanning(boolean)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.phone.InCallScreen: boolean handleCallKey()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.phone.BluetoothHandsfree$ScoSocketConnectThread: void run()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<android.nfc.INfcAdapter$Stub$Proxy: void dispatch(android.nfc.Tag)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.group.GroupBrowseListFragment: void access$400(com.android.contacts.group.GroupBrowseListFragment)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.policy.impl.SimPukUnlockScreen$1$1: void run()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<android.net.wifi.WifiManager: void setCountryCode(java.lang.String,boolean)>	android.permission.CHANGE_WIFI_STATE	android.permission.WRITE_SETTINGS	
<com.android.contacts.list.DefaultContactBrowseListFragment: void onActivityResult(int,int,android.content.Intent)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.camera.ui.IndicatorControl: void onSettingChanged()>	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.RECORD_AUDIO	
<android.content.ISyncAdapter$Stub: void initialize(android.accounts.Account,java.lang.String)>	android.permission.WRITE_SYNC_SETTINGS	android.permission.READ_SYNC_SETTINGS	
<android.provider.Browser: void updateVisitedHistory(android.content.ContentResolver,java.lang.String,boolean)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.contacts.list.JoinContactListFragment: void onAttach(android.app.Activity)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.JoinContactListFragment: void finish()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.policy.impl.LockPatternKeyguardView$AccountAnalyzer: void run(android.accounts.AccountManagerFuture)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.phone.InCallScreen: void onPhoneStateChanged(android.os.AsyncResult)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void editMmsMessageItem(com.android.mms.ui.MessageItem)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.BreadCrumbView$Controller: void onTop(com.android.browser.BreadCrumbView,int,java.lang.Object)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.content.SyncManager$7: void onSyncRequest(android.accounts.Account,int,java.lang.String,android.os.Bundle)>	android.permission.VIBRATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<com.android.server.ConnectivityService: void setGlobalProxy(android.net.ProxyProperties)>	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	
<com.android.internal.policy.impl.SimUnlockScreen: boolean onKeyDown(int,android.view.KeyEvent)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.phone.CallNotifier: void onRingbackTone(android.os.AsyncResult)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.KeyguardViewMediator$2: void onReceive(android.content.Context,android.content.Intent)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.gallery3d.app.AlbumSetPage: void access$1600(com.android.gallery3d.app.AlbumSetPage,int)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.internal.os.storage.ExternalStorageFormatter: void updateProgressState()>	android.permission.MOUNT_UNMOUNT_FILESYSTEMS	android.permission.MOUNT_FORMAT_FILESYSTEMS	
<com.android.internal.policy.impl.LockPatternKeyguardView$4: void onUserChanged(int)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.internal.policy.impl.LockScreen$SlidingTabMethods: void onTrigger(android.view.View,int)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.settings.DataUsageSummary: void setMobilePolicySplit(boolean)>	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.gallery3d.ui.GestureRecognizer$Listener: boolean onFling(float,float)>	android.permission.NFC	android.permission.VIBRATE	
<com.android.settings.widget.SettingsAppWidgetProvider$StateTracker: int getTriState(android.content.Context)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.mms.ui.ComposeMessageActivity: void addAudio(android.net.Uri)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.camera.VideoCamera: void access$200(com.android.camera.VideoCamera)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.calendar.DeleteEventHelper: void deleteExceptionEvent()>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.settings.bluetooth.DeviceProfilesSettings: void onProfileClicked(com.android.settings.bluetooth.LocalBluetoothProfile)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<android.filterpacks.base.GLTextureSource: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.contacts.list.JoinContactListFragment: void onLoadFinished(android.content.Loader,android.database.Cursor)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.ContactBrowseListFragment: void setSearchMode(boolean)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.app.IBatteryStats$Stub$Proxy: byte[] getStatistics()>	android.permission.BATTERY_STATS	android.permission.BLUETOOTH	
<com.android.browser.TabControl: boolean setCurrentTab(com.android.browser.Tab)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.contacts.activities.ContactSelectionActivity: void onServiceCompleted(android.content.Intent)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.email.provider.AccountReconciler: void reconcileAccounts(android.content.Context,java.util.List,android.accounts.Account[],android.content.Context)>	android.permission.MANAGE_ACCOUNTS	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.contacts.calllog.CallLogFragment: void onResume()>	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WRITE_CALL_LOG	android.permission.READ_CALL_LOG	
<com.android.commands.am.Am: void main(java.lang.String[])>	android.permission.KILL_BACKGROUND_PROCESSES	android.permission.RESTART_PACKAGES	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.gallery3d.app.PhotoPage: void onBackPressed()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.phone.CdmaSystemSelectListPreference: void onDialogClosed(boolean)>	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.server.LocationManagerService: android.os.Bundle _getProviderInfoLocked(java.lang.String)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerService main(android.content.Context,com.android.server.PowerManagerService,boolean,boolean,boolean)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	android.permission.GET_ACCOUNTS	
<com.android.contacts.list.DefaultContactListAdapter: android.net.Uri getContactUri(int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.latin.WhitelistDictionary: void getWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.server.am.ActivityManagerService: void processStartTimedOutLocked(com.android.server.am.ProcessRecord)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.gallery3d.app.ManageCachePage$1: void removeAllComponents()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.mms.ui.ComposeMessageActivity: boolean handleForwardedMessage()>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.contacts.group.GroupBrowseListAdapter: android.net.Uri getGroupUriFromId(long)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.nfc.nxp.NativeNfcManager: void notifyLlcpLinkDeactivated(com.android.nfc.nxp.NativeP2pDevice)>	android.permission.GET_TASKS	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.browser.AccountsChangedReceiver$DeleteRemovedAccounts: void run()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.server.BluetoothService: boolean setDiscoverableTimeout(int)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.bluetooth.pbap.BluetoothPbapActivity: void onCreate(android.os.Bundle)>	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.BLUETOOTH	
<com.android.contacts.group.GroupBrowseListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.emailcommon.service.IEmailServiceCallback$Stub$Proxy: void sendMessageStatus(long,java.lang.String,int,int)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.server.net.NetworkPolicyManagerService: void access$700(com.android.server.net.NetworkPolicyManagerService)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	
<android.net.wifi.WifiStateMachine$SoftApStoppingState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.calendar.DayView$GotoBroadcaster: void onAnimationEnd(android.view.animation.Animation)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.mms.data.WorkingMessage: void asyncDeleteDraftSmsMessage(com.android.mms.data.Conversation)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.gallery3d.ui.GestureRecognizer$MyGestureListener: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>	android.permission.NFC	android.permission.VIBRATE	
<com.android.internal.telephony.IIccPhoneBook$Stub: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	
<com.android.internal.policy.impl.SimPukUnlockScreen$TouchInput: void onClick(android.view.View)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.contacts.interactions.ImportExportDialogFragment: boolean access$000(com.android.contacts.interactions.ImportExportDialogFragment,int)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.email.service.AttachmentDownloadService$DownloadSet: void processQueue()>	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.latin.SynchronouslyLoadedContactsDictionary: void <init>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.activities.ActionBarAdapter$MyTabListener: void onTabSelected(android.app.ActionBar$Tab,android.app.FragmentTransaction)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.ComposeMessageActivity: void onNewIntent(android.content.Intent)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.ContactEntryListFragment: void setSearchMode(boolean)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.camera.ui.InLineSettingItem: boolean changeIndex(int)>	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.RECORD_AUDIO	
<com.android.mms.data.WorkingMessage$1: android.util.Pair doInBackground(java.lang.Void[])>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.phone.BluetoothHandsfree$3: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<android.filterpacks.videosrc.SurfaceTextureTarget: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.phone.ADNList: boolean onContextItemSelected(android.view.MenuItem)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothHandsfree$24: android.bluetooth.AtCommandResult handleTestCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.emailcommon.service.IEmailServiceCallback$Stub: void sendMessageStatus(long,java.lang.String,int,int)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.CdmaSystemSelectListPreference$MyHandler: void resetCdmaRoamingModeToDefault()>	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: android.net.Uri getContactUriForEmail(java.lang.String)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.policy.impl.SimPukUnlockScreen: void onResume()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.inputmethod.keyboard.PointerTracker: void onCancelEvent(int,int,long)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	
<com.android.browser.Controller$9: boolean onMenuItemClick(android.view.MenuItem)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.contacts.ContactLoader: java.lang.Object loadInBackground()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.latin.LatinIME: void onStartInputView(android.view.inputmethod.EditorInfo,boolean)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.filterpacks.imageproc.SimpleImageFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.exchange.EasAccountService: void run()>	android.permission.VIBRATE	android.permission.READ_CALENDAR	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.ContactListAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.app.LoadingListener: void onLoadingFinished()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.gallery3d.ui.PhotoView: void access$1500(com.android.gallery3d.ui.PhotoView)>	android.permission.NFC	android.permission.VIBRATE	
<com.android.exchange.adapter.ContactsSyncAdapter$EasContactsSyncParser: void commandsParser()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.SoundSettings: void onResume()>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_USER_DICTIONARY	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.phone.BluetoothHandsfree$16: android.bluetooth.AtCommandResult handleTestCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.KeyguardScreenCallback: void goToLockScreen()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.mms.ui.ConversationList$DeleteThreadListener$1: void run()>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.providers.contacts.LegacyApiSupport: java.lang.String getContactMethodType(android.net.Uri)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.Bookmarks: void addBookmark(android.content.Context,boolean,java.lang.String,java.lang.String,android.graphics.Bitmap,long)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.contacts.list.ContactBrowseListFragment$ContactLookupTask: java.lang.Object doInBackground(java.lang.Object[])>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.server.BluetoothEventLoop: void onDisplayPasskey(java.lang.String,int,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.phone.InCallScreen: void toggleBluetooth()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.settings.DreamSettings: void onCreate(android.os.Bundle)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.READ_PHONE_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.phone.BluetoothHandsfree$4: android.bluetooth.AtCommandResult handleReadCommand()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<android.filterpacks.base.OutputStreamTarget: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.mms.ui.Divot: void assignContactFromEmail(java.lang.String)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.media.effect.effects.FlipEffect: void apply(int,int,int,int)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.settings.WallpaperTypeSettings: void onActivityCreated(android.os.Bundle)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.wifi.WifiSettings: boolean onOptionsItemSelected(android.view.MenuItem)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.server.am.ActivityManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.GET_TASKS	android.permission.REORDER_TASKS	android.permission.BROADCAST_STICKY	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.KILL_BACKGROUND_PROCESSES	android.permission.RESTART_PACKAGES	android.permission.WRITE_SETTINGS	android.permission.CHANGE_CONFIGURATION	android.permission.WAKE_LOCK	
<com.android.internal.util.StateMachine$SmHandler: void invokeEnterMethods(int)>	android.permission.CHANGE_WIFI_STATE	android.permission.GET_TASKS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.gallery3d.ui.CropView: void render(com.android.gallery3d.ui.GLCanvas)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.contacts.model.AccountTypeWithDataSet: boolean hasData(android.content.Context)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.mms.ui.ComposeMessageActivity$32: void run()>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.provider.BrowserProvider2$DatabaseHelper: void enableSync(android.database.sqlite.SQLiteDatabase)>	android.permission.WRITE_SYNC_SETTINGS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.ContactBrowseListFragment: void onAttach(android.app.Activity)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.telephony.cdma.CDMALTEPhone: void handleEnterEmergencyCallbackMode(android.os.Message)>	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	
<com.android.contacts.list.ContactBrowseListFragment: void onLoadFinished(android.content.Loader,android.database.Cursor)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.util.StateMachine$SmHandler$HaltingState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void editMessageItem(com.android.mms.ui.MessageItem)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.InCallScreen: void onPause()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.SynchronouslyLoadedUserDictionary: void <init>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.mms.transaction.RetrieveTransaction: byte[] sendPdu(byte[],java.lang.String)>	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	
<android.filterpacks.imageproc.TintFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.location.ILocationManager: android.os.Bundle getProviderInfo(java.lang.String)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.browser.Controller: void onActivityResult(int,int,android.content.Intent)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.calendar.month.MonthByWeekFragment: android.net.Uri updateUri()>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.internal.policy.impl.KeyguardUpdateMonitor: void handleUserChanged(int)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState: void chooseUpstreamType(boolean)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.gallery3d.app.AlbumSetPage: void onPause()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.mms.data.WorkingMessage: void asyncDeleteDraftMmsMessage(com.android.mms.data.Conversation)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.inputmethod.latin.UserDictionary: void getWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.settings.net.DataUsageMeteredSettings: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.contacts.detail.PhotoSelectionHandler: void onClick(android.view.View)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.accounts.AccountManager$3: android.accounts.AccountManager$Future2Task start()>	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,boolean,android.accounts.AccountManagerCallback,android.os.Handler)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.browser.Controller: com.android.browser.Tab showPreloadedTab(com.android.browser.IntentHandler$UrlData)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.bluetooth.opp.BluetoothOppService: void onCreate()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.gallery3d.app.AlbumSetPage$1: void renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.gallery3d.ui.PhotoView: void switchToNextImage()>	android.permission.NFC	android.permission.VIBRATE	
<com.android.camera.PanoramaActivity: void onConfigurationChanged(android.content.res.Configuration)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.phone.CallCard: void updateAlreadyDisconnected(com.android.internal.telephony.CallManager)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	
<com.android.internal.policy.impl.PasswordUnlockScreen$2: void onClick(android.view.View)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<android.net.ConnectivityManager: void setGlobalProxy(android.net.ProxyProperties)>	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	
<android.provider.ContactsContract$SyncState: void set(android.content.ContentProviderClient,android.accounts.Account,byte[])>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.telephony.gsm.GsmServiceStateTracker: void queueNextSignalStrengthPoll()>	android.permission.VIBRATE	android.permission.BROADCAST_STICKY	android.permission.SET_TIME_ZONE	android.permission.WAKE_LOCK	
<com.android.settings.Settings$InputMethodAndLanguageSettingsActivity: void onResume()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.contacts.CallContactActivity: void onServiceCompleted(android.content.Intent)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.calendar.DayView$3: void run()>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.phone.InCallScreen: void requestCloseOtaFailureNotice(long)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.browser.DataController$DataControllerHandler: void doUpdateHistoryTitle(java.lang.String,java.lang.String)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.inputmethod.latin.VibratorUtils: void vibrate(long)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	
<com.android.inputmethod.keyboard.PointerTracker: void onRegisterKey(com.android.inputmethod.keyboard.Key)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.emailcommon.utility.EmailAsyncTask: void callOnPostExecuteForTest(java.lang.Object)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.calendar.Utils: void setTimeZone(android.content.Context,java.lang.String)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.contacts.activities.ContactEditorActivity: void onNewIntent(android.content.Intent)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.activities.ShowOrCreateActivity: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.view.WindowManagerPolicy: void screenTurnedOff(int)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.internal.telephony.CallerInfo: com.android.internal.telephony.CallerInfo doSecondaryLookupIfNecessary(android.content.Context,java.lang.String,com.android.internal.telephony.CallerInfo)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.settings.accounts.AccountSyncSettings: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>	android.permission.WRITE_SYNC_SETTINGS	android.permission.READ_SYNC_SETTINGS	
<com.android.calendar.CalendarController: void sendEvent(java.lang.Object,long,android.text.format.Time,android.text.format.Time,long,int,long,java.lang.String,android.content.ComponentName)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.settings.inputmethod.SpellCheckersSettings: void onCreate(android.os.Bundle)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.READ_PHONE_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.gallery3d.app.AlbumPicker: void onConfigurationChanged(android.content.res.Configuration)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.settings.bluetooth.BluetoothPairingDialog: boolean onKeyDown(int,android.view.KeyEvent)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.activities.GroupBrowserActivity: void onStart()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.PhoneNumberPickerFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.providers.downloads.DownloadThread: int readFromResponse(com.android.providers.downloads.DownloadThread$State,com.android.providers.downloads.DownloadThread$InnerState,byte[],java.io.InputStream)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.ContactSaveService: void createGroup(android.content.Intent)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.bluetooth.CachedBluetoothDevice: boolean startPairing()>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.activities.DialtactsActivity: void onCreate(android.os.Bundle)>	android.permission.NFC	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void access$800(com.android.mms.ui.ComposeMessageActivity,com.android.mms.ui.MessageItem)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.VibratorService: void startNextVibrationLocked()>	android.permission.VIBRATE	android.permission.WAKE_LOCK	
<com.android.settings.vpn2.VpnSettings: void onPause()>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.camera.VideoCamera: boolean onKeyDown(int,android.view.KeyEvent)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<android.bluetooth.BluetoothHeadset: boolean stopScoUsingVirtualVoiceCall(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<android.accounts.AccountManager$4: android.accounts.AccountManager$Future2Task start()>	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.settings.net.DataUsageMeteredSettings: void updateNetworks(android.content.Context)>	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.settings.Settings$StorageUseActivity: void onResume()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory$2: void run()>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.gallery3d.app.AlbumSetPage$1: void removeAllComponents()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.activities.ContactEditorAccountsChangedActivity: void onCreate(android.os.Bundle)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.am.ActivityManagerService: boolean shutdown(int)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.phone.HapticFeedback: void vibrate()>	android.permission.VIBRATE	android.permission.WAKE_LOCK	
<com.android.phone.BluetoothHandsfree$27: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.contacts.list.PhoneFavoriteFragment: void onActivityResult(int,int,android.content.Intent)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.latin.LatinIME: void pickSuggestionManually(int,java.lang.CharSequence,int,int)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.editor.AggregationSuggestionView: boolean handleItemClickEvent()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory: android.net.Uri createLoaderUri()>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.contacts.activities.NonPhoneActivity: void onServiceCompleted(android.content.Intent)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.OnContactBrowserActionListener: void onSelectionChange()>	android.permission.READ_PHONE_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.MobileNetworkSettings: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	
<com.android.phone.BluetoothHandsfree: void userWantsAudioOn()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void pollStateDone()>	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	android.permission.SET_TIME_ZONE	
<com.android.inputmethod.keyboard.MoreKeysKeyboardView$1: boolean onCustomRequest(int)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.list.PostalAddressListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.content.ContentService: android.content.SyncManager getSyncManager()>	android.permission.VIBRATE	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.phone.BluetoothHandsfree$DebugThread: void run()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.commands.monkey.MonkeyNetworkMonitor: void register(android.app.IActivityManager)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.phone.InCallScreen$15: void onCancel(android.content.DialogInterface)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.BLUETOOTH	
<android.view.WindowManagerPolicy: void enableKeyguard(boolean)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.emailcommon.service.IEmailService$Stub$Proxy: void startSync(long,boolean)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.server.ConnectivityService: boolean setRadios(boolean)>	android.permission.CHANGE_WIFI_STATE	android.permission.CHANGE_NETWORK_STATE	
<com.android.settings.DreamSettings: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.server.net.NetworkStatsService$5: void onReceive(android.content.Context,android.content.Intent)>	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<com.android.vcard.VCardEntry$InsertOperationConstrutor: boolean onElement(com.android.vcard.VCardEntry$EntryElement)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.transaction.Transaction: byte[] sendPdu(byte[],java.lang.String)>	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	
<com.android.server.am.ActivityManagerService: boolean access$300(com.android.server.am.ActivityManagerService,java.lang.String,int,boolean,boolean,boolean,boolean,int)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.commands.monkey.Monkey: boolean getSystemInterfaces()>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.phone.InCallScreen: void updateScreen()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<android.net.wifi.WifiWatchdogStateMachine$WalledGardenCheckState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.providers.downloads.DownloadService: void deleteDownloadLocked(long)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.mms.ui.ComposeMessageActivity: boolean onOptionsItemSelected(android.view.MenuItem)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.CALL_PHONE	android.permission.RECEIVE_SMS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.OtaUtils: void otaShowProgramFailure(int)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<android.filterpacks.base.FrameBranch: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.mms.ui.ClassZeroActivity: android.net.Uri replaceMessage(android.telephony.SmsMessage)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<android.bluetooth.IBluetoothA2dp$Stub$Proxy: boolean connectSinkInternal(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.inputmethod.accessibility.AccessibilityEntityProvider: boolean performActionForKey(com.android.inputmethod.keyboard.Key,int,android.os.Bundle)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.activities.ConfirmAddDetailActivity: void access$900(com.android.contacts.activities.ConfirmAddDetailActivity,long,android.net.Uri)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.inputmethod.keyboard.MoreKeysKeyboardView$1: void onPressKey(int)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.phone.CallerInfoCache$CacheAsyncTask: java.lang.Object doInBackground(java.lang.Object[])>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.mms.util.Recycler: void deleteOldMessagesByThreadId(android.content.Context,long)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.phone.PhoneApp: void updateBluetoothIndication(boolean)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.internal.telephony.DataConnectionTracker: void restartRadio()>	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	
<com.android.gallery3d.app.ActivityState: boolean onItemSelected(android.view.MenuItem)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.activities.ConfirmAddDetailActivity: void onCreate(android.os.Bundle)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.calendar.EventInfoFragment: void updateAttendees(android.view.View)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.mms.ui.ComposeMessageActivity: void addVideo(android.net.Uri,boolean)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.JoinContactListAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.MessageUtils$ResizeImageResultCallback: void onResizeResult(com.google.android.mms.pdu.PduPart,boolean)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.vcard.VCardEntry$NoteData: void constructInsertOperation(java.util.List,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.email.Controller$15: void loadAttachmentStatus(long,long,int,int)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.DataUsageSummary$ConfirmRestrictFragment$1: void onClick(android.content.DialogInterface,int)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary: void loadDictionaryAsync()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: boolean access$700(com.android.mms.ui.ComposeMessageActivity,com.android.mms.ui.MessageItem)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.inputmethod.latin.UserHistoryDictionary: void startDictionaryLoadingTaskLocked()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.browser.Preloader: void handlePreloadRequest(java.lang.String,java.lang.String,java.util.Map,java.lang.String)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.inputmethod.latin.Dictionary: void getBigrams(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.camera.VideoCamera: void onReviewCancelClicked(android.view.View)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.calendar.event.EditEventFragment$1: void onClick(android.view.View)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.providers.downloads.DownloadProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.bluetooth.pbap.BluetoothPbapService: void onCreate()>	android.permission.BLUETOOTH_ADMIN	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.contacts.editor.AggregationSuggestionEngine: void loadAggregationSuggestions(android.net.Uri)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.settings.bluetooth.CachedBluetoothDevice: void onBondingStateChanged(int)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.internal.app.ResolverActivity: void onCreate(android.os.Bundle,android.content.Intent,java.lang.CharSequence,android.content.Intent[],java.util.List,boolean)>	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.BLUETOOTH	
<com.android.phone.CallCard: void onQueryComplete(int,java.lang.Object,com.android.internal.telephony.CallerInfo)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.app.AlbumPage$2: void removeAllComponents()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.calllog.CallLogFragment: boolean onOptionsItemSelected(android.view.MenuItem)>	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.phone.BluetoothAtPhonebook: com.android.phone.BluetoothAtPhonebook$PhonebookResult access$500(com.android.phone.BluetoothAtPhonebook,java.lang.String,boolean)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<android.bluetooth.IBluetooth: boolean disconnectInputDevice(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.calendar.AllInOneActivity: boolean onNavigationItemSelected(int,long)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.browser.Controller: void doUpdateVisitedHistory(com.android.browser.Tab,boolean)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.settings.bluetooth.BluetoothSettings: void onBluetoothStateChanged(int)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$InactiveState: boolean processMessage(android.os.Message)>	android.permission.GET_TASKS	android.permission.BROADCAST_STICKY	
<com.android.mms.ui.MessageListItem: void access$500(com.android.mms.ui.MessageListItem)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.policy.impl.PhoneWindowManager: android.view.KeyEvent dispatchUnhandledKey(android.view.WindowManagerPolicy$WindowState,android.view.KeyEvent,int)>	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.CALL_PHONE	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<android.location.ILocationManager$Stub: boolean isProviderEnabled(java.lang.String)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.internal.telephony.cdma.CDMAPhone: void handleEnterEmergencyCallbackMode(android.os.Message)>	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	
<com.android.contacts.activities.NonPhoneActivity: void onResume()>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.data.WorkingMessage: void access$800(com.android.mms.data.WorkingMessage,com.android.mms.data.Conversation)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.quicksearchbox.ui.ContactBadge: void onClick(android.view.View)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.internal.app.IBatteryStats: byte[] getStatistics()>	android.permission.BATTERY_STATS	android.permission.BLUETOOTH	
<com.android.gallery3d.app.DialogPicker: boolean onOptionsItemSelected(android.view.MenuItem)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.settings.inputmethod.SpellCheckersSettings: void onActivityCreated(android.os.Bundle)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<android.bluetooth.IBluetoothA2dp$Stub: boolean setPriority(android.bluetooth.BluetoothDevice,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	
<android.filterfw.core.Filter: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.bluetooth.BluetoothPan: boolean disconnect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.common.widget.GroupingListAdapter$1: void onChange(boolean)>	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.contacts.ContactsListActivity: android.net.Uri getContactUri(int)>	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	
<com.android.internal.telephony.cdma.CdmaSMSDispatcher: int dispatchMessage(com.android.internal.telephony.SmsMessageBase)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.wallpaper.nexus.NexusRS: void start()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.contacts.activities.PhotoSelectionActivity: void access$000(com.android.contacts.activities.PhotoSelectionActivity)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.mms.data.WorkingMessage: android.net.Uri readDraftMmsMessage(android.content.Context,com.android.mms.data.Conversation,java.lang.StringBuilder)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.gallery3d.app.PhotoPage: boolean switchWithCaptureAnimation(int)>	android.permission.NFC	android.permission.VIBRATE	
<com.android.calendar.AllInOneActivity: void onNewIntent(android.content.Intent)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.mms.data.WorkingMessage: void access$700(com.android.mms.data.WorkingMessage,com.android.mms.data.Conversation,android.net.Uri,com.google.android.mms.pdu.PduPersister,com.android.mms.model.SlideshowModel,com.google.android.mms.pdu.SendReq)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.bluetooth.opp.BluetoothOppService: void removeBatch(com.android.bluetooth.opp.BluetoothOppBatch)>	android.permission.BLUETOOTH_ADMIN	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.phone.BluetoothHeadsetService$6: boolean stopScoUsingVirtualVoiceCall(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.exchange.adapter.AbstractSyncParser: void commandsParser()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.inputmethod.UserDictionaryAddWordFragment: void onPause()>	android.permission.READ_USER_DICTIONARY	android.permission.WRITE_USER_DICTIONARY	
<android.server.BluetoothEventLoop: void onDevicePropertyChanged(java.lang.String,java.lang.String[])>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.quickcontact.QuickContactActivity: void bindData(com.android.contacts.ContactLoader$Result)>	android.permission.READ_PHONE_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.ConnectivityService$FeatureUser: void <init>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.calendar.AsyncQueryService: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_CALENDAR	
<android.net.IConnectivityManager$Stub: void setGlobalProxy(android.net.ProxyProperties)>	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	
<android.filterpacks.imageproc.PosterizeFilter: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.contacts.list.LegacyPhoneNumberListAdapter: void bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.email.service.MailService$6: void runInternal(android.content.Context)>	android.permission.MANAGE_ACCOUNTS	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.internal.telephony.SMSDispatcher: int dispatchMessage(com.android.internal.telephony.SmsMessageBase)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary: int getContactCount()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.activities.PhotoSelectionActivity: void attachPhotoHandler()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.activities.JoinContactActivity: void onServiceCompleted(android.content.Intent)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler$PhotoEditorListener: void onUseAsPrimaryChosen()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.CallContactActivity: void onCreate(android.os.Bundle)>	android.permission.NFC	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.pm.ShutdownThread$5: void run()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.email.activity.UIControllerBase: void onRefresh()>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.transaction.NotificationTransaction: byte[] sendPdu(byte[],java.lang.String)>	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	
<com.android.gallery3d.app.PhotoPage$2: void onLoadingFinished()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<android.filterpacks.imageproc.RedEyeFilter: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.nfc.nxp.NativeNfcManager: void notifySeFieldDeactivated()>	android.permission.GET_TASKS	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.internal.util.IState: void enter()>	android.permission.CHANGE_WIFI_STATE	android.permission.GET_TASKS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<android.content.SyncManager$SyncHandler: void runBoundToSyncAdapter(android.content.SyncManager$ActiveSyncContext,android.content.ISyncAdapter)>	android.permission.VIBRATE	android.permission.WRITE_SYNC_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.policy.impl.KeyguardStatusViewManager: void <init>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.internal.telephony.CallManager: void setAudioMode()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<com.android.gallery3d.app.ManageCachePage$1: void renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.contacts.list.ProviderStatusWatcher$LoaderTask: java.lang.Object doInBackground(java.lang.Object[])>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.calllog.ClearCallLogDialog$1$1: java.lang.Object doInBackground(java.lang.Object[])>	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WRITE_CALL_LOG	
<com.android.phone.EmergencyCallHelper: void onServiceStateChanged(android.os.Message)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.gallery3d.app.StateManager: boolean itemSelected(android.view.MenuItem)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.phone.InCallScreen: void requestCloseSpcErrorNotice(long)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.server.pm.PackageManagerService: void scanAvailableAsecs()>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.contacts.list.CustomContactListFilterActivity: void onCreate(android.os.Bundle)>	android.permission.NFC	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.vpn2.VpnSettings: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<android.provider.ContactsContract$ProfileSyncState: byte[] get(android.content.ContentProviderClient,android.accounts.Account)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.inputmethod.latin.LatinIME: boolean handleSeparator(int,int,int,int)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.gallery3d.app.AlbumSetDataLoader: void resume()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.internal.policy.impl.AccountUnlockScreen: boolean dispatchKeyEvent(android.view.KeyEvent)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.phone.SipBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>	android.permission.CHANGE_WIFI_STATE	android.permission.WRITE_SETTINGS	android.permission.CHANGE_CONFIGURATION	android.permission.USE_SIP	
<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void pollState()>	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	android.permission.SET_TIME_ZONE	android.permission.WAKE_LOCK	
<com.android.phone.BluetoothHandsfree$10: android.bluetooth.AtCommandResult handleTestCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.internal.telephony.SMSDispatcher: int processMessagePart(byte[],java.lang.String,int,int,int,long,int,boolean)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.contacts.socialwidget.SocialWidgetProvider: void setDisplayNameAndSnippet(android.content.Context,android.widget.RemoteViews,java.lang.CharSequence,java.lang.CharSequence,java.util.List,android.app.PendingIntent)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.net.wifi.WifiStateMachine$ConnectModeState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.phone.InCallScreen: void requestUpdateScreen()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.browser.Controller$10: java.lang.Void doInBackground(java.lang.Void[])>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.net.INetworkPolicyManager$Stub$Proxy: void setRestrictBackground(boolean)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	
<com.android.internal.telephony.DataConnectionTracker: void onSetUserDataEnabled(boolean)>	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	
<com.android.mms.transaction.Transaction: void notifyObservers()>	android.permission.CHANGE_WIFI_STATE	android.permission.READ_SMS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SMS	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.RECEIVE_SMS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.mms.transaction.TransactionService: void update(com.android.mms.transaction.Observable)>	android.permission.CHANGE_WIFI_STATE	android.permission.READ_SMS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SMS	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.RECEIVE_SMS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.server.wm.WindowManagerService: void displayReady()>	android.permission.CHANGE_CONFIGURATION	android.permission.WAKE_LOCK	
<com.android.emailcommon.service.IEmailServiceCallback: void loadAttachmentStatus(long,long,int,int)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.latin.DictionaryCollection: void getBigrams(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.server.am.ActivityManagerService: boolean handleAppCrashLocked(com.android.server.am.ProcessRecord)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<android.content.ContentService: android.content.IContentService main(android.content.Context,boolean)>	android.permission.VIBRATE	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.gallery3d.app.AlbumSetPage$4: boolean onActionItemClicked(android.view.MenuItem)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.systemui.statusbar.policy.NetworkController: void <init>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.browser.IntentHandler$1: java.lang.Object doInBackground(java.lang.Object[])>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.browser.AddBookmarkPage: void descendInto(java.lang.String,long)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.systemui.statusbar.BaseStatusBar: void createAndAddWindows()>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.contacts.detail.PhotoSelectionHandler: com.android.contacts.model.EntityDeltaList getDeltaForAttachingPhotoToContact()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.net.wifi.SupplicantStateTracker$DisconnectedState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.phone.InCallScreen: void internalAnswerAndEnd()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.contacts.list.DefaultContactBrowseListFragment: void checkSelection()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.accounts.AccountPreferenceBase: void onSyncStateUpdated()>	android.permission.READ_SYNC_STATS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.bluetooth.DeviceListPreferenceFragment: void onCreate(android.os.Bundle)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.READ_PHONE_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<android.bluetooth.IBluetooth$Stub: boolean cancelPairingUserInput(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.exchange.adapter.ContactsSyncAdapter: void dirtyContactsWithinDirtyGroups()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.connectivity.Tethering$TetherMasterSM$StartTetheringErrorState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<android.net.IConnectivityManager$Stub$Proxy: void setNetworkPreference(int)>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.calendar.month.MonthByWeekFragment: void setMonthDisplayed(android.text.format.Time,boolean)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.emailcommon.service.IAccountService$Stub: void reconcileAccounts(java.lang.String,java.lang.String)>	android.permission.MANAGE_ACCOUNTS	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.contacts.group.GroupBrowseListFragment$3: void onLoadFinished(android.content.Loader,java.lang.Object)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.calendar.month.SimpleDayPickerFragment: void updateMonthHighlight(android.widget.AbsListView)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.internal.policy.impl.SimPukUnlockScreen: boolean onKeyDown(int,android.view.KeyEvent)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: boolean copyMedia(long)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.common.widget.GroupingListAdapter: void bindGroupView(android.view.View,android.content.Context,android.database.Cursor,int,boolean)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WRITE_CALL_LOG	android.permission.READ_SYNC_SETTINGS	
<com.android.emailcommon.service.IEmailServiceCallback$Stub$Proxy: void loadAttachmentStatus(long,long,int,int)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.CustomContactListFilterActivity$DisplayAdapter: void <init>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.nfc.DeviceHost$DeviceHostListener: void onCardEmulationAidSelected(byte[])>	android.permission.GET_TASKS	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.phone.BluetoothHeadsetService: void access$1500(com.android.phone.BluetoothHeadsetService,android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.settings.bluetooth.LocalBluetoothAdapter: void cancelDiscovery()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.internal.util.State: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.contacts.activities.PeopleActivity: boolean onOptionsItemSelected(android.view.MenuItem)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.ContactLoader: void postViewNotificationToSyncAdapter()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.app.AlbumSetPage: void onBackPressed()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.nfc.nxp.NativeNfcManager: void notifySeFieldActivated()>	android.permission.GET_TASKS	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.mms.ui.ComposeMessageActivity$12: void run()>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.settings.accounts.AccountSyncSettings: void setFeedsState()>	android.permission.READ_SYNC_STATS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.ContactsActivity: void onAttachFragment(android.app.Fragment)>	android.permission.READ_PHONE_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.keyboard.PointerTracker$TimerProxy: void startKeyRepeatTimer(com.android.inputmethod.keyboard.PointerTracker)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.gallery3d.app.AlbumPicker: void onPause()>	android.permission.NFC	android.permission.VIBRATE	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	android.permission.RECORD_AUDIO	
<com.android.phone.BluetoothHandsfree$26: android.bluetooth.AtCommandResult handleActionCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.email.activity.MessageCompose$QuickResponseChecker: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.media.AudioService: void stopBluetoothSco(android.os.IBinder)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<android.content.SyncManager: void access$100(android.content.SyncManager)>	android.permission.VIBRATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<com.android.mms.transaction.TransactionService: void onDestroy()>	android.permission.CHANGE_WIFI_STATE	android.permission.READ_SMS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SMS	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.RECEIVE_SMS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.gallery3d.app.PhotoPage: boolean onItemSelected(android.view.MenuItem)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.server.net.NetworkPolicyManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>	android.permission.ACCESS_WIFI_STATE	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.list.CustomContactListFilterActivity: void onClick(android.view.View)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.email.MessagingListener: void loadAttachmentFinished(long,long,long)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.widget.multiwaveview.GlowPadView: boolean onTouchEvent(android.view.MotionEvent)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.USE_CREDENTIALS	android.permission.READ_CONTACTS	android.permission.MANAGE_ACCOUNTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.internal.util.StateMachine$SmHandler$QuittingState: void enter()>	android.permission.CHANGE_WIFI_STATE	android.permission.GET_TASKS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.mms.ui.MmsThumbnailPresenter: void present(com.android.mms.util.ItemLoadedCallback)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.vcard.NotificationImportExportListener: void onImportFinished(com.android.contacts.vcard.ImportRequest,int,android.net.Uri)>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.ComposeMessageActivity: int getDrmMimeMenuStringRsrc(long)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState: void enter()>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.settings.bluetooth.DockService: void createDialog(android.bluetooth.BluetoothDevice,int,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<android.accounts.IAccountManager$Stub: void invalidateAuthToken(java.lang.String,java.lang.String)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	
<com.android.providers.downloads.DownloadThread: void updateDatabaseFromHeaders(com.android.providers.downloads.DownloadThread$State,com.android.providers.downloads.DownloadThread$InnerState)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.settings.Settings$DeviceAdminSettingsActivity: void onResume()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.contacts.calllog.CallLogFragment: void onStop()>	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WRITE_CALL_LOG	
<com.android.inputmethod.latin.UserBinaryDictionary: void syncReloadDictionaryIfRequired()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.email.service.EmailBroadcastProcessorService: void onHandleIntent(android.content.Intent)>	android.permission.VIBRATE	android.permission.MANAGE_ACCOUNTS	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.settings.accounts.SyncSettings: void onActivityCreated(android.os.Bundle)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.activities.GroupDetailActivity: void onStart()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.Controller: void doStart(android.os.Bundle,android.content.Intent)>	android.permission.INTERNET	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.browser.PhoneUi: void showNavScreen()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.phone.PhoneUtils: void switchHoldingAndActive(com.android.internal.telephony.Call)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<com.android.calendar.event.AttendeesView: void addAttendees(java.util.HashMap)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.server.BluetoothA2dpService: void access$000(android.server.BluetoothA2dpService)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.phone.PhoneUtils: void restoreSpeakerMode(android.content.Context)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.camera.VideoCamera: void onUserInteraction()>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.inputmethod.latin.ContactsBinaryDictionary: void access$500(com.android.inputmethod.latin.ExpandableBinaryDictionary)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.internal.os.RuntimeInit$UncaughtHandler: void uncaughtException(java.lang.Thread,java.lang.Throwable)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.internal.policy.impl.KeyguardScreenCallback: void keyguardDone(boolean)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.server.am.ActivityStack: void activitySleptLocked(com.android.server.am.ActivityRecord)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.server.pm.PackageManagerService: void updateExternalMediaStatusInner(boolean,boolean)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.mms.transaction.MessagingNotification: void addSmsNotificationInfos(android.content.Context,java.util.Set)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.RECEIVE_SMS	
<com.android.internal.app.ChooserActivity: void onCreate(android.os.Bundle,android.content.Intent,java.lang.CharSequence,android.content.Intent[],java.util.List,boolean)>	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.BLUETOOTH	
<com.android.camera.ui.InLineSettingKnob$2: boolean onTouch(android.view.View,android.view.MotionEvent)>	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.RECORD_AUDIO	
<android.view.IWindowManager$Stub: void exitKeyguardSecurely(android.view.IOnKeyguardExitResult)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.DISABLE_KEYGUARD	android.permission.GET_ACCOUNTS	
<com.android.settings.SecuritySettings: void onActivityResult(int,int,android.content.Intent)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.gallery3d.app.AbstractGalleryActivity: void onUserInteraction()>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.settings.Settings$LocationSettingsActivity: void onResume()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.internal.widget.WaveView: void setGrabbedState(int)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<android.net.wifi.IWifiManager$Stub: void setCountryCode(java.lang.String,boolean)>	android.permission.CHANGE_WIFI_STATE	android.permission.WRITE_SETTINGS	
<com.android.settings.deviceinfo.Status: void onResume()>	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.phone.InCallScreen: void access$1000(com.android.phone.InCallScreen,android.os.AsyncResult,char)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.server.VibratorService: void access$400(com.android.server.VibratorService)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	
<android.provider.Contacts$People: android.database.Cursor queryGroups(android.content.ContentResolver,long)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.internal.telephony.gsm.GSMPhone: void setPropertiesByCarrier()>	android.permission.CHANGE_WIFI_STATE	android.permission.WRITE_SETTINGS	android.permission.CHANGE_CONFIGURATION	
<com.android.phone.BluetoothHandsfree: void configAudioParameters()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.commands.bmgr.Bmgr: void main(java.lang.String[])>	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.mms.ui.ComposeMessageActivity$41: void onContentChanged(com.android.mms.ui.MessageListAdapter)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.settings.deviceinfo.UsbSettings: void onPause()>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.gallery3d.app.AlbumPage: boolean onItemSelected(android.view.MenuItem)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.exchange.EasAccountService: boolean setupService()>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.activities.PeopleActivity: void onBackPressed()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.ui.CropView$HighlightRectangle: void removeAllComponents()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.mms.transaction.SmsReceiverService: android.net.Uri storeMessage(android.content.Context,android.telephony.SmsMessage[],int)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.phone.NotificationMgr: void onQueryComplete(int,java.lang.Object,com.android.internal.telephony.CallerInfo)>	android.permission.VIBRATE	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	
<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: java.util.List getAllMessagesFromIccEf()>	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.settings.DockSettings: void onPause()>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.activities.ConfirmAddDetailActivity: void startDisambiguationQuery(java.lang.String)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.bluetooth.IBluetoothA2dp$Stub$Proxy: boolean resumeSink(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.list.DefaultContactBrowseListFragment: void onContactUriQueryFinished(android.net.Uri)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.exchange.adapter.CalendarSyncAdapter$EasCalendarSyncParser: void commandsParser()>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.phone.OtaUtils: void onClickOtaTryAgainButton()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.BLUETOOTH	
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler: void <init>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.internal.policy.impl.LockPatternKeyguardView$3: void pokeWakelock(int)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<android.filterfw.core.SyncRunner: boolean performStep()>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.internal.policy.impl.KeyguardViewBase: void wakeWhenReadyTq(int)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.systemui.statusbar.tablet.TabletStatusBar: void addStatusBarWindow()>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.email.activity.MessageViewFragmentBase$LoadMessageTask: void callOnPostExecuteForTest(java.lang.Object)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.camera.VideoCamera: boolean stopVideoRecording()>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.commands.svc.PowerCommand: void run(java.lang.String[])>	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.settings.bluetooth.DockService: int onStartCommand(android.content.Intent,int,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.contacts.editor.ContactEditorFragment: void access$500(com.android.contacts.editor.ContactEditorFragment,com.android.contacts.model.EntityDelta,com.android.contacts.model.AccountWithDataSet,com.android.contacts.model.AccountWithDataSet)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.calendar.selectcalendars.SelectVisibleCalendarsFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.email.activity.MessageListFragment: void access$2200(com.android.email.activity.MessageListFragment)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.bluetooth.DevicePickerFragment: void addCachedDevices()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.vcard.VCardComposer: boolean initWithRawContactsEntityUri(android.net.Uri)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.calllog.CallLogAdapter: void bindGroupView(android.view.View,android.content.Context,android.database.Cursor,int,boolean)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WRITE_CALL_LOG	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.imageproc.FlipFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.email.service.MailService$6: void run(java.lang.Object)>	android.permission.MANAGE_ACCOUNTS	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.providers.contacts.ContactsProvider2: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.inputmethod.keyboard.LatinKeyboardView: boolean onTouchEvent(android.view.MotionEvent)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.editor.ContactEditorUtils: com.android.contacts.editor.ContactEditorUtils getInstance(android.content.Context)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: boolean access$3700(com.android.mms.ui.ComposeMessageActivity,long)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.browser.AddBookmarkPage: void switchToDefaultView(boolean)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.server.VibratorService: void startVibrationLocked(com.android.server.VibratorService$Vibration)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	
<android.filterpacks.imageproc.FillLightFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.settings.bluetooth.BluetoothSettings: void addDeviceCategory(android.preference.PreferenceGroup,int,com.android.settings.bluetooth.BluetoothDeviceFilter$Filter)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.server.wm.InputMonitor: long notifyANR(com.android.server.input.InputApplicationHandle,com.android.server.input.InputWindowHandle)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<android.bluetooth.IBluetoothHeadset: boolean stopVoiceRecognition(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.deskclock.AlarmReceiver: void handleIntent(android.content.Context,android.content.Intent)>	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture removeAccount(android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler)>	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<android.server.BluetoothEventLoop: java.lang.String checkPairingRequestAndGetAddress(java.lang.String,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.settings.fuelgauge.PowerUsageSummary: void load()>	android.permission.BATTERY_STATS	android.permission.BLUETOOTH	
<com.android.internal.telephony.MccTable: void updateMccMncConfiguration(android.content.Context,java.lang.String)>	android.permission.CHANGE_WIFI_STATE	android.permission.WRITE_SETTINGS	android.permission.CHANGE_CONFIGURATION	android.permission.SET_TIME_ZONE	android.permission.WAKE_LOCK	
<com.android.contacts.editor.LabeledEditorView$3: void onClick(android.content.DialogInterface,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.SlideshowEditActivity$SlideListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.net.wifi.WifiStateMachine: void access$16800(android.net.wifi.WifiStateMachine)>	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.internal.telephony.ITelephony$Stub$Proxy: java.util.List getAllCellInfo()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.inputmethod.latin.Dictionary: boolean isValidWord(java.lang.CharSequence)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.bluetooth.HeadsetBase: void handleInput(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.settings.bluetooth.BluetoothPermissionRequest: boolean checkUserChoice()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.contacts.util.AccountsListAdapter: void <init>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.XLargeUi: boolean onBackKey()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.server.BluetoothEventLoop: void onPanDevicePropertyChanged(java.lang.String,java.lang.String[])>	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.mms.data.WorkingMessage$3: void run()>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.numeric.SinWaveFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.gallery3d.app.AlbumDataLoader: java.lang.Object executeAndWait(java.util.concurrent.Callable)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.server.wm.WindowManagerService: void clearForcedDisplaySize()>	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.gallery3d.app.Gallery: void initializeByIntent()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.settings.bluetooth.DockService: void handleDocked(android.bluetooth.BluetoothDevice,int,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.server.location.ComprehensiveCountryDetector: void runAfterDetection(android.location.Country,android.location.Country,boolean,boolean)>	android.permission.ACCESS_FINE_LOCATION	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	
<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void getSubscriptionInfoAndStartPollingThreads()>	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	android.permission.SET_TIME_ZONE	android.permission.WAKE_LOCK	
<com.android.bluetooth.pbap.BluetoothPbapVcardManager: int getContactsSize()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.server.input.InputManagerService$Callbacks: int interceptKeyBeforeQueueing(android.view.KeyEvent,int,boolean)>	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.CALL_PHONE	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.contacts.list.ContactEntryListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.calllog.CallLogFragment: void updateOnEntry()>	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WRITE_CALL_LOG	
<com.android.phone.BluetoothHandsfree$12: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.email.activity.setup.MailboxSettings$2: void onSuccess(java.lang.Object)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.email.activity.UIControllerBase: boolean onOptionsItemSelected(android.view.MenuItem)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<android.bluetooth.BluetoothHeadset: int getPriority(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.browser.PieControl$TabAdapter$1: void onClick(android.view.View)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.server.location.ComprehensiveCountryDetector: void startLocationBasedDetector(android.location.CountryListener)>	android.permission.ACCESS_FINE_LOCATION	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	
<com.android.settings.SecuritySettings: void onResume()>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_USER_DICTIONARY	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.gallery3d.app.AlbumPicker: void onBackPressed()>	android.permission.NFC	android.permission.VIBRATE	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	android.permission.RECORD_AUDIO	
<com.android.contacts.editor.ContactEditorFragment: void doJoinSuggestedContact(long[])>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.imageproc.ImageCombineFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.contacts.activities.ConfirmAddDetailActivity: void access$300(com.android.contacts.activities.ConfirmAddDetailActivity,com.android.contacts.model.EntityDeltaList)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.server.BluetoothEventLoop: void onRequestPairingConsent(java.lang.String,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<android.provider.Telephony$Sms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[])>	android.permission.READ_SMS	android.permission.RECEIVE_SMS	
<com.android.inputmethod.latin.LatinIME: void handleBackspaceWhileInBatchEdit(int,android.view.inputmethod.InputConnection)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void handlePollStateResult(int,android.os.AsyncResult)>	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	android.permission.SET_TIME_ZONE	
<android.net.wifi.SupplicantStateTracker$DormantState: boolean processMessage(android.os.Message)>	android.permission.CHANGE_WIFI_STATE	android.permission.GET_TASKS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.INTERNET	android.permission.BROADCAST_STICKY	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.browser.GoogleAccountLogin: void startLogin()>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.contacts.group.GroupBrowseListFragment$3: void onLoadFinished(android.content.Loader,android.database.Cursor)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.util.Recycler: android.database.Cursor getAllThreads(android.content.Context)>	android.permission.READ_SMS	android.permission.RECEIVE_SMS	
<com.android.internal.policy.impl.PhoneWindowManager: int interceptMotionBeforeQueueingWhenScreenOff(int)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.server.BatteryService: void update()>	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<com.android.settings.bluetooth.HeadsetProfile$HeadsetServiceListener: void onServiceConnected(int,android.bluetooth.BluetoothProfile)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.settings.bluetooth.DeviceListPreferenceFragment: void onBluetoothStateChanged(int)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<android.bluetooth.BluetoothDeviceProfileState$IncomingA2dp: boolean processMessage(android.os.Message)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.nfc.nxp.NativeNfcManager: void notifySeEmvCardRemoval()>	android.permission.GET_TASKS	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.phone.BluetoothHandsfree$27: android.bluetooth.AtCommandResult handleTestCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.email.activity.MessageFileView$LoadFilenameTask: void callOnPostExecuteForTest(java.lang.Object)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.editor.TextFieldsEditorView: void onOptionalFieldVisibilityChange()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.server.BluetoothEventLoop: void onPropertyChanged(java.lang.String[])>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.contacts.detail.ContactDetailLayoutController: void setContactData(com.android.contacts.ContactLoader$Result)>	android.permission.READ_PHONE_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.calllog.CallLogFragment: void refreshData()>	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WRITE_CALL_LOG	android.permission.READ_CALL_LOG	
<com.android.inputmethod.latin.suggestions.SuggestionsView$2: void onCodeInput(int,int,int)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.internal.policy.impl.PhoneWindowManager: void screenTurnedOff(int)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.camera.VideoCamera: void startVideoRecording()>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean updateMessageOnIccEf(int,int,byte[])>	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<android.server.BluetoothService: boolean removeBondInternal(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.email.activity.UIControllerTwoPane: boolean onOptionsItemSelected(android.view.MenuItem)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.ContactSaveService: void addMembersToGroup(android.content.ContentResolver,long[],long)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.transaction.SmsReceiverService: void access$300(com.android.mms.transaction.SmsReceiverService,android.content.Intent)>	android.permission.READ_SMS	android.permission.VIBRATE	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.camera.ActivityBase: void onPause()>	android.permission.NFC	android.permission.VIBRATE	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	android.permission.RECORD_AUDIO	
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$DefaultState: void enter()>	android.permission.CHANGE_WIFI_STATE	android.permission.GET_TASKS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.phone.BluetoothHandsfree$BluetoothPhoneState: void scoClosed()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.browser.BrowserActivity: boolean onKeyUp(int,android.view.KeyEvent)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.contacts.activities.PeopleActivity: void onResume()>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.location.GpsLocationProvider: void handleUpdateNetworkState(int,android.net.NetworkInfo)>	android.permission.CHANGE_NETWORK_STATE	android.permission.WAKE_LOCK	
<com.android.internal.widget.LockPatternView: void addCellToPattern(com.android.internal.widget.LockPatternView$Cell)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.common.widget.GroupingListAdapter: void bindStandAloneView(android.view.View,android.content.Context,android.database.Cursor)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WRITE_CALL_LOG	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.ContactBrowseListFragment: boolean isSyncActive()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	
<com.android.gallery3d.app.SlideshowPage: void showPendingBitmap()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.mms.ui.ComposeMessageActivity: void access$5800(com.android.mms.ui.ComposeMessageActivity,java.lang.String,android.net.Uri,boolean)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.latin.ContactsBinaryDictionary: int getContactCount()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.list.ContactListFilterController: com.android.contacts.list.ContactListFilterController createContactListFilterController(android.content.Context)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.base.ObjectSource: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.phone.BluetoothHandsfree$10: android.bluetooth.AtCommandResult handleActionCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary: void loadDictionary()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.server.BluetoothA2dpService: void access$300(android.server.BluetoothA2dpService,android.bluetooth.BluetoothDevice,int,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.internal.os.storage.ExternalStorageFormatter$1: void onStorageStateChanged(java.lang.String,java.lang.String,java.lang.String)>	android.permission.MOUNT_UNMOUNT_FILESYSTEMS	android.permission.MOUNT_FORMAT_FILESYSTEMS	
<com.android.voicedialer.RecognizerEngine: void recognize(com.android.voicedialer.RecognizerClient,android.app.Activity,java.io.File,int)>	android.permission.VIBRATE	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.vcard.VCardEntryHandler: void onEntryCreated(com.android.vcard.VCardEntry)>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.pm.PackageManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.READ_EXTERNAL_STORAGE	android.permission.WRITE_SETTINGS	android.permission.GET_PACKAGE_SIZE	android.permission.CLEAR_APP_CACHE	
<com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary: void getBigrams(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.calendar.EventInfoFragment: void doEdit()>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.settings.widget.SettingsAppWidgetProvider$SettingsObserver: void onChange(boolean)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.ContactsActivity: void onCreate(android.os.Bundle)>	android.permission.NFC	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.camera.ActivityBase: boolean onOptionsItemSelected(android.view.MenuItem)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.phone.BluetoothHandsfree$29: android.bluetooth.AtCommandResult handleActionCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<android.media.AudioService: void <init>	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	android.permission.WRITE_SETTINGS	
<com.android.gallery3d.ui.PhotoView: void access$800(com.android.gallery3d.ui.PhotoView)>	android.permission.NFC	android.permission.VIBRATE	
<com.android.internal.policy.impl.KeyguardViewMediator: void verifyUnlockLocked()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.settings.DevelopmentSettings: void resetDangerousOptions()>	android.permission.READ_EXTERNAL_STORAGE	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.internal.telephony.PhoneFactory: void makeDefaultPhones(android.content.Context)>	android.permission.CHANGE_WIFI_STATE	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	android.permission.CHANGE_CONFIGURATION	android.permission.ACCESS_NETWORK_STATE	android.permission.SET_TIME_ZONE	android.permission.WAKE_LOCK	
<com.android.settings.DateTimeSettings: void onPause()>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<android.filterpacks.imageproc.ToRGBAFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.nfc.snep.SnepServer$ConnectionThread: void run()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.BLUETOOTH	
<com.android.settings.inputmethod.KeyboardLayoutPickerFragment: void onPause()>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.bluetooth.pbap.BluetoothPbapService: void startObexServerSession()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	
<com.android.gallery3d.ui.CropView$FaceHighlightView: void renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.mms.transaction.TransactionService: void launchTransaction(int,com.android.mms.transaction.TransactionBundle,boolean)>	android.permission.CHANGE_WIFI_STATE	android.permission.READ_SMS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SMS	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.RECEIVE_SMS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.server.connectivity.Vpn$LegacyVpnRunner: void execute()>	android.permission.VIBRATE	android.permission.BROADCAST_STICKY	
<com.android.gallery3d.ui.PhotoView: com.android.gallery3d.ui.PhotoFallbackEffect buildFallbackEffect(com.android.gallery3d.ui.GLView,com.android.gallery3d.ui.GLCanvas)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.gallery3d.ui.GLView: void removeAllComponents()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.settings.SoundSettings: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.server.wm.WindowManagerService: void shutdown()>	android.permission.VIBRATE	android.permission.MOUNT_UNMOUNT_FILESYSTEMS	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.exchange.adapter.AccountSyncAdapter: java.lang.String getSyncKey()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.policy.impl.LockPatternKeyguardView$3: void keyguardDone(boolean)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.calendar.month.MonthByWeekFragment: android.net.Uri access$500(com.android.calendar.month.MonthByWeekFragment)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.server.wm.WindowManagerService$1: void released()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.phone.CallNotifier: void access$1000(com.android.phone.CallNotifier)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.gallery3d.ui.PhotoView: void removeOneComponent(com.android.gallery3d.ui.GLView)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.phone.InCallScreen: void access$500(com.android.phone.InCallScreen,android.os.AsyncResult)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.mms.ui.ComposeMessageActivity: void launchMultiplePhonePicker()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.Tab: void updateShouldCaptureThumbnails()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.musicfx.ActivityMusic$1: void onReceive(android.content.Context,android.content.Intent)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<android.net.wifi.WifiStateMachine$DriverStartedState: boolean processMessage(android.os.Message)>	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	
<com.android.mms.ui.MessageListAdapter: com.android.mms.ui.MessageItem getCachedMessageItem(java.lang.String,long,android.database.Cursor)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.pm.ShutdownThread: void reboot(android.content.Context,java.lang.String,boolean)>	android.permission.VIBRATE	android.permission.MOUNT_UNMOUNT_FILESYSTEMS	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.contacts.group.GroupDetailFragment: void onAttach(android.app.Activity)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.DateTimeSettings: void onActivityCreated(android.os.Bundle)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.latin.ExpandableDictionary: void loadDictionaryAsync()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.inputmethod.keyboard.KeyboardActionListener: boolean onCustomRequest(int)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.gallery3d.ui.PhotoView: void access$3300(com.android.gallery3d.ui.PhotoView,int,int)>	android.permission.NFC	android.permission.VIBRATE	
<android.provider.BrowserContract$SyncState: android.content.ContentProviderOperation newSetOperation(android.accounts.Account,byte[])>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.server.ThrottleService$MyHandler: void onResetAlarm()>	android.permission.VIBRATE	android.permission.BROADCAST_STICKY	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.camera.PanoramaActivity: void onThumbnailClicked(android.view.View)>	android.permission.NFC	android.permission.VIBRATE	
<com.android.browser.Controller: com.android.browser.Tab createNewTab(boolean,boolean,boolean)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.contacts.editor.ContactEditorFragment$4: void onLoadFinished(android.content.Loader,com.android.contacts.ContactLoader$Result)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.SimContacts$ImportAllSimContactsThread: void run()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.vcard.VCardComposer: boolean init(java.lang.String,java.lang.String[])>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.calendar.CalendarController: void sendEvent(java.lang.Object,com.android.calendar.CalendarController$EventInfo)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.server.pm.PackageManagerService: void loadMediaPackages(java.util.HashMap,int[],java.util.HashSet)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.contacts.group.GroupEditorFragment: void onDoneClicked()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.camera.ShutterButton$OnShutterButtonListener: void onShutterButtonClick()>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.settings.wifi.WifiApEnabler: void setSoftapEnabled(boolean)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.WRITE_SETTINGS	
<com.android.settings.accounts.SyncSettings: void onPause()>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.internal.telephony.cdma.RuimRecords: void onReady()>	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,boolean,android.accounts.AccountManagerCallback,android.os.Handler)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.contacts.list.ContactBrowseListFragment: void onClose()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.calllog.CallLogQueryHandler: void fetchAllCalls()>	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.common.contacts.DataUsageStatUpdater: boolean updateWithRfc822Address(java.util.Collection)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.ConversationListItem: void bind(android.content.Context,com.android.mms.data.Conversation)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.DefaultContactBrowseListFragment: void setFilter(com.android.contacts.list.ContactListFilter,boolean)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.ContactBrowseListFragment$ContactLookupTask: android.net.Uri doInBackground(java.lang.Void[])>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.app.Gallery: void onBackPressed()>	android.permission.NFC	android.permission.VIBRATE	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	android.permission.RECORD_AUDIO	
<com.android.inputmethod.latin.LatinIME: void onStartInputViewInternal(android.view.inputmethod.EditorInfo,boolean)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void queueNextSignalStrengthPoll()>	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	android.permission.SET_TIME_ZONE	android.permission.WAKE_LOCK	
<com.android.mms.ui.ComposeMessageActivity: void onCreate(android.os.Bundle)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean acceptIncomingConnect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<android.media.effect.effects.SepiaEffect: void apply(int,int,int,int)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.mms.transaction.ReadRecTransaction: byte[] getPdu(java.lang.String)>	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	
<com.android.settings.DataUsageSummary: void onCreate(android.os.Bundle)>	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.inputmethod.latin.SubtypeSwitcher: void updateSubtype(android.view.inputmethod.InputMethodSubtype)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.settings.AccessibilitySettings$ToggleAccessibilityServicePreferenceFragment: void onCreate(android.os.Bundle)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.READ_PHONE_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.mms.ui.ComposeMessageActivity: int access$3100(com.android.mms.ui.ComposeMessageActivity,long)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.email.activity.MessageListFragment: boolean onOptionsItemSelected(android.view.MenuItem)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.data.Conversation: void blockMarkAsRead(boolean)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.browser.view.PieStackView: void layout(int,int,boolean,float,int)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.gallery3d.app.PickerActivity: boolean onOptionsItemSelected(android.view.MenuItem)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.internal.telephony.gsm.SimSmsInterfaceManager: java.util.List getAllMessagesFromIccEf()>	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.settings.bluetooth.DeviceProfilesSettings: void onPause()>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.settings.Settings$ManageApplicationsActivity: void onResume()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.nfc.NfcService: void onSeMifareAccess(byte[])>	android.permission.GET_TASKS	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.emailcommon.utility.Utility$ForEachAccount: void onPostExecute(java.lang.Object)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.app.AlbumSetPage$1: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.server.am.ActivityManagerService: void handleApplicationCrash(android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.server.am.ActivityManagerService: void performServiceRestartLocked(com.android.server.am.ServiceRecord)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<android.media.effect.effects.SaturateEffect: void apply(int,int,int,int)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.media.effect.effects.BackDropperEffect: void apply(int,int,int,int)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.mms.util.ThumbnailManager$ThumbnailTask$1: void run()>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothHandsfree$16: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.internal.telephony.ISms$Stub: boolean enableCellBroadcastRange(int,int)>	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.browser.BreadCrumbView: void clear()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.mms.ui.ComposeMessageActivity$1: void run()>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.browser.DownloadHandler$1: void run()>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.settings.Settings$ManageAccountsSettingsActivity: void onResume()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.mms.ui.MessageItem$PduLoadedCallback: void onPduLoaded(com.android.mms.ui.MessageItem)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.editor.RawContactReadOnlyEditorView: void setPhotoBitmap(android.graphics.Bitmap)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.list.DefaultContactListAdapter: android.net.Uri getContactUri(int,android.database.Cursor,int,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.bluetooth.DockService: void handleUndocked(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.PhoneWindowManager: void launchHomeFromHotKey()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.inputmethod.keyboard.LatinKeyboardView$KeyTimerHandler: void startLongPressTimer(com.android.inputmethod.keyboard.PointerTracker)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.settings.bluetooth.DockService$1: void run()>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<android.server.BluetoothService: boolean setTrust(java.lang.String,boolean)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.providers.contacts.CallLogProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.phone.BluetoothHandsfree$18: android.bluetooth.AtCommandResult handleTestCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.exchange.EmailSyncAlarmReceiver: void access$000(com.android.exchange.EmailSyncAlarmReceiver,android.content.Context)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.editor.TextFieldsEditorView: void onFieldChanged(java.lang.String,java.lang.String)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.server.BluetoothEventLoop: void onNetworkDeviceConnected(java.lang.String,java.lang.String,int)>	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.phone.OtaUtils: void otaShowProgramSuccessDialog()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<android.net.IConnectivityManager: int stopUsingNetworkFeature(int,java.lang.String)>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<android.app.IActivityManager: boolean bindBackupAgent(android.content.pm.ApplicationInfo,int)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void onStart()>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.server.ConnectivityService: int tether(java.lang.String)>	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.server.usb.UsbDeviceManager$UsbHandler: void <init>	android.permission.VIBRATE	android.permission.BROADCAST_STICKY	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WRITE_SETTINGS	
<com.android.calendar.alerts.AlertService: void doTimeChanged()>	android.permission.VIBRATE	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.browser.Controller: void reuseTab(com.android.browser.Tab,com.android.browser.IntentHandler$UrlData)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.settings.wifi.WifiSettings: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.browser.Controller: void closeEmptyTab()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.bluetooth.pbap.BluetoothPbapVcardManager: java.util.ArrayList getContactNamesByNumber(java.lang.String)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.server.am.ActivityManagerService: void startProcessLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.bluetooth.pbap.BluetoothPbapVcardManager: java.util.ArrayList loadCallHistoryList(int)>	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.systemui.statusbar.tablet.TabletStatusBar: void createAndAddWindows()>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.Phone getGsmPhone()>	android.permission.CHANGE_WIFI_STATE	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	android.permission.CHANGE_CONFIGURATION	
<com.android.nfc.NfcService: void onLlcpLinkActivated(com.android.nfc.DeviceHost$NfcDepEndpoint)>	android.permission.GET_TASKS	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.phone.DTMFTwelveKeyDialer: void onDialerClose(boolean)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.phone.InCallScreen: void updateIncomingCallWidgetHint(int,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<android.bluetooth.AtCommandHandler: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: boolean isForwardable(long)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.exchange.EmailSyncAdapterService: void performSync(android.content.Context,android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.DTMFTwelveKeyDialerView: boolean dispatchKeyEvent(android.view.KeyEvent)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void doRecovery()>	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.server.VibratorService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	
<com.android.email.activity.setup.AccountSetupOptions$1: void run()>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.phone.BluetoothAtPhonebook$3: android.bluetooth.AtCommandResult handleTestCommand()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<android.bluetooth.IBluetooth$Stub$Proxy: boolean connectInputDevice(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<android.net.IConnectivityManager$Stub: boolean setRadios(boolean)>	android.permission.CHANGE_WIFI_STATE	android.permission.CHANGE_NETWORK_STATE	
<com.android.systemui.statusbar.phone.PhoneStatusBar: void addStatusBarWindow()>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.gallery3d.ui.ScrollBarView: void removeOneComponent(com.android.gallery3d.ui.GLView)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.phone.BluetoothHandsfree$14: android.bluetooth.AtCommandResult handleActionCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.providers.contacts.LegacyApiSupport: int updateSettings(android.content.ContentValues)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.ActivityController: boolean onOptionsItemSelected(android.view.MenuItem)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.camera.VideoCamera: void restorePreferences()>	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.RECORD_AUDIO	
<com.android.emailcommon.service.IEmailService$Stub: void sendMeetingResponse(long,int)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.data.WorkingMessage: void sendMmsWorker(com.android.mms.data.Conversation,android.net.Uri,com.google.android.mms.pdu.PduPersister,com.android.mms.model.SlideshowModel,com.google.android.mms.pdu.SendReq)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.phone.PhoneUtils: com.android.internal.telephony.CallerInfo getCallerInfo(android.content.Context,com.android.internal.telephony.Connection)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	
<com.android.contacts.activities.ContactDetailActivity: void onCreate(android.os.Bundle)>	android.permission.NFC	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.transaction.Transaction: void process()>	android.permission.CHANGE_WIFI_STATE	android.permission.READ_SMS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SMS	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.RECEIVE_SMS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.phone.OtaUtils: void otaShowProgramFailureNotice(int)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<android.provider.ContactsContract$Contacts$AggregationSuggestions$Builder: android.net.Uri build()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.data.ComboAlbumSet: long reload()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<android.bluetooth.IBluetooth$Stub: boolean disconnectInputDevice(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.KeyguardViewBase: void verifyUnlock()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.contacts.vcard.ImportVCardActivity: void onServiceCompleted(android.content.Intent)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.socialwidget.SocialWidgetProvider$1: void onLoadComplete(android.content.Loader,com.android.contacts.ContactLoader$Result)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.telephony.cdma.CdmaDataConnectionTracker: void onSetUserDataEnabled(boolean)>	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	
<com.android.browser.UiController: void closeTab(com.android.browser.Tab)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.contacts.vcard.SelectAccountActivity: android.app.Dialog onCreateDialog(int,android.os.Bundle)>	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.latin.UserBinaryDictionary: void access$500(com.android.inputmethod.latin.ExpandableBinaryDictionary)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.email.provider.AccountReconciler: boolean accountsNeedReconciling(android.content.Context,java.util.List,android.accounts.Account[])>	android.permission.MANAGE_ACCOUNTS	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.gallery3d.gadget.WidgetUtils: android.graphics.Bitmap createWidgetBitmap(com.android.gallery3d.data.MediaItem)>	android.permission.NFC	android.permission.VIBRATE	android.permission.INTERNET	android.permission.SET_WALLPAPER	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<android.accounts.AccountManager$6: android.accounts.AccountManagerFuture start()>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.internal.telephony.PhoneProxy: void deleteAndCreatePhone(int)>	android.permission.CHANGE_WIFI_STATE	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	android.permission.CHANGE_CONFIGURATION	android.permission.SET_TIME_ZONE	android.permission.WAKE_LOCK	
<com.android.settings.inputmethod.InputMethodAndLanguageSettings: void onCreate(android.os.Bundle)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.READ_PHONE_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.ContactsBinaryDictionary: boolean hasContentChanged()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.voicedialer.CommandRecognizerEngine: void onRecognitionSuccess(com.android.voicedialer.RecognizerClient)>	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.gallery3d.ui.SlideshowView: boolean dispatchTouchEvent(android.view.MotionEvent)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.gallery3d.app.AlbumPage$5: boolean onActionItemClicked(android.view.MenuItem)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.internal.telephony.ISms$Stub$Proxy: boolean disableCellBroadcastRange(int,int)>	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.settings.bluetooth.CachedBluetoothDeviceManager: void onBtClassChanged(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.exchange.adapter.ContactsSyncAdapter: void setSyncKey(java.lang.String,boolean)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.app.SlideshowPage$1: boolean removeComponent(com.android.gallery3d.ui.GLView)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.mms.util.Recycler$SmsRecycler: boolean anyThreadOverLimit(android.content.Context)>	android.permission.READ_SMS	android.permission.RECEIVE_SMS	
<com.android.settings.vpn2.VpnSettings: void onCreate(android.os.Bundle)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.READ_PHONE_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<android.media.effect.effects.NegativeEffect: void apply(int,int,int,int)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.settings.DockSettings: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.contacts.activities.ConfirmAddDetailActivity$PersistTask: java.lang.Object doInBackground(java.lang.Object[])>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.provider.ContactsContract$ProfileSyncState: void set(android.content.ContentProviderClient,android.accounts.Account,byte[])>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.imageproc.VignetteFilter: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.bluetooth.BluetoothDevice: boolean setTrust(boolean)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.browser.IntentHandler: void onNewIntent(android.content.Intent)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.gallery3d.app.AlbumPage: void resume()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.email.NotificationController$MessageContentObserver: void onChange(boolean)>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.camera.Camera: void onBackPressed()>	android.permission.NFC	android.permission.VIBRATE	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	android.permission.RECORD_AUDIO	
<com.android.phone.BluetoothHandsfree$IncomingScoAcceptThread: void run()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary: void getWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.mms.ui.ManageSimMessages: void refreshMessageList()>	android.permission.READ_SMS	android.permission.RECEIVE_SMS	
<com.android.server.am.ActivityManagerService: int access$100(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,boolean,boolean,int,int,int)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.settings.inputmethod.SpellCheckersSettings: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.contacts.group.GroupDetailFragment$3: android.content.Loader onCreateLoader(int,android.os.Bundle)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.calendar.month.MonthByWeekAdapter: boolean onTouch(android.view.View,android.view.MotionEvent)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.internal.policy.impl.PhoneWindowManager: void init(android.content.Context,android.view.IWindowManager,android.view.WindowManagerPolicy$WindowManagerFuncs,android.os.LocalPowerManager)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.contacts.list.AccountFilterActivity: boolean onOptionsItemSelected(android.view.MenuItem)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.socialwidget.SocialWidgetProvider: void access$000(android.content.Context,int,android.appwidget.AppWidgetManager,com.android.contacts.ContactLoader$Result)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.PrivacySettings: void onResume()>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_USER_DICTIONARY	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.inputmethod.accessibility.AccessibleKeyboardViewProxy: boolean dispatchHoverEvent(android.view.MotionEvent,com.android.inputmethod.keyboard.PointerTracker)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.phone.sip.SipEditor: void access$500(com.android.phone.sip.SipEditor,android.net.sip.SipProfile)>	android.permission.USE_SIP	android.permission.WAKE_LOCK	
<com.android.server.ConnectivityService$FeatureUser: void binderDied()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<android.bluetooth.IBluetoothA2dp$Stub: boolean suspendSink(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.phone.CallNotifier: void resetAudioStateAfterDisconnect()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<android.content.ISyncAdapter$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.WRITE_SYNC_SETTINGS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.ContactListAdapter: android.net.Uri getContactUri(int,android.database.Cursor,int,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.filterfw.core.Filter: void process(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.contacts.list.PhoneNumberPickerFragment: void onActivityResult(int,int,android.content.Intent)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.ActivityController: boolean onKeyUp(int,android.view.KeyEvent)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.server.BluetoothService: boolean disconnectInputDeviceInternal(android.bluetooth.BluetoothDevice)>	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.emailcommon.service.IEmailService$Stub: void loadAttachment(long,boolean)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.InCallScreenShowActivation: void onCreate(android.os.Bundle)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.contacts.util.NameConverter: java.lang.String structuredNameToDisplayName(android.content.Context,android.content.ContentValues)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.camera.VideoCamera: void onError(android.media.MediaRecorder,int,int)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.internal.policy.impl.KeyguardViewCallback: void pokeWakelock(int)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.emailcommon.service.IEmailService$Stub: void startSync(long,boolean)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.bluetooth.BluetoothEventManager$DockEventHandler: void onReceive(android.content.Context,android.content.Intent,android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.calendar.EventInfoFragment: void showContactInfo(com.android.calendar.CalendarEventModel$Attendee,android.graphics.Rect)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.videosrc.SurfaceTextureTarget: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.server.am.BatteryStatsService: byte[] getStatistics()>	android.permission.BATTERY_STATS	android.permission.BLUETOOTH	
<com.android.contacts.list.ShortcutIntentBuilder$ContactLoadingAsyncTask: java.lang.Void doInBackground(java.lang.Void[])>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.server.connectivity.Tethering$TetherInterfaceSM$TetheredState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.providers.downloads.DownloadService: boolean scanFile(com.android.providers.downloads.DownloadInfo,boolean,boolean)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.contacts.util.NameConverter: android.content.ContentValues displayNameToStructuredName(android.content.Context,java.lang.String,android.content.ContentValues)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.vcard.VCardEntry$EntryElement: void constructInsertOperation(java.util.List,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler: com.android.contacts.model.EntityDeltaList getDeltaForAttachingPhotoToContact()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.base.NullFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.calendar.DayView: android.view.View switchViews(boolean,float,float,float)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.settings.DevelopmentSettings: void onResume()>	android.permission.READ_EXTERNAL_STORAGE	android.permission.WRITE_SETTINGS	
<com.android.phone.BluetoothHandsfree$12: android.bluetooth.AtCommandResult handleReadCommand()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.internal.policy.impl.KeyguardViewMediator$3: void onReceive(android.content.Context,android.content.Intent)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.inputmethod.latin.SynchronouslyLoadedUserDictionary: void blockingReloadDictionaryIfRequired()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.settings.SettingsPreferenceFragment: boolean onOptionsItemSelected(android.view.MenuItem)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.gallery3d.app.GalleryActionBar: boolean onNavigationItemSelected(int,long)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.calendar.AllInOneActivity: void setMainPane(android.app.FragmentTransaction,int,int,long,boolean)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.server.net.NetworkPolicyManagerService: void updateNetworkRulesLocked()>	android.permission.ACCESS_WIFI_STATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.gallery3d.gadget.WidgetService$PhotoRVFactory: android.widget.RemoteViews getViewAt(int)>	android.permission.NFC	android.permission.VIBRATE	android.permission.INTERNET	android.permission.SET_WALLPAPER	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.internal.policy.impl.GlobalActions$2: void onPress()>	android.permission.VIBRATE	android.permission.MOUNT_UNMOUNT_FILESYSTEMS	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.settings.LocationSettings: void onActivityCreated(android.os.Bundle)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.PostalAddressPickerFragment: void onLoadFinished(android.content.Loader,java.lang.Object)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.ComposeMessageActivity: boolean access$2800(com.android.mms.ui.ComposeMessageActivity,long)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.phone.InCallScreen: void access$600(com.android.phone.InCallScreen)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.settings.accounts.AccountSyncSettings: void onCreate(android.os.Bundle)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.READ_PHONE_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.contacts.activities.ContactDetailActivity: void onResume()>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.app.AlbumPage$MyLoadingListener: void onLoadingFinished()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.nfc.NfcService: void onRemoteFieldDeactivated()>	android.permission.GET_TASKS	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.server.WifiService: android.os.Messenger getWifiStateMachineMessenger()>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	
<android.bluetooth.IBluetoothHeadset: boolean startVoiceRecognition(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.gallery3d.ui.EdgeView: void removeAllComponents()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.list.AccountFilterActivity: void onResume()>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.latin.ContactsDictionary: void getWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.ex.chips.BaseRecipientAdapter$DefaultFilter: android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary: void syncReloadDictionaryInternal()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.server.BluetoothA2dpService: boolean disconnect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.gallery3d.app.PickerActivity: void onCreate(android.os.Bundle)>	android.permission.NFC	android.permission.VIBRATE	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	android.permission.RECORD_AUDIO	
<android.net.wifi.WifiStateMachine$DriverLoadedState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.browser.UI: void setUseQuickControls(boolean)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.net.wifi.WifiStateMachine$TetheredState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.KeyguardViewMediator: void onSystemReady()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.contacts.list.EmailAddressListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.location.ComprehensiveCountryDetector: void setCountryListener(android.location.CountryListener)>	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	
<com.android.browser.NavigationBarTablet: void onAction(java.lang.String,java.lang.String,java.lang.String)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.phone.BluetoothHandsfree$30: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.contacts.editor.ContactEditorFragment$EntityDeltaComparator: int compare(java.lang.Object,java.lang.Object)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.Controller: void closeTab(com.android.browser.Tab)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.gallery3d.app.ManageCachePage: void onProgressComplete(int)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.browser.BaseUi: boolean onBackKey()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.gallery3d.ui.PhotoView$MyGestureListener: boolean onFling(float,float)>	android.permission.NFC	android.permission.VIBRATE	
<com.android.calendar.month.MonthByWeekFragment: void doResumeUpdates()>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.internal.policy.impl.PasswordUnlockScreen: boolean onKeyDown(int,android.view.KeyEvent)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.contacts.editor.EventFieldEditorView: void onTypeSelectionChange(int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.bluetooth.BluetoothVisibilityTimeoutFragment: void onClick(android.content.DialogInterface,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.vcard.VCardEntry: boolean isIgnorable()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.provider.BrowserContract$Bookmarks: android.net.Uri buildFolderUri(long)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.filterpacks.imageproc.VignetteFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.mms.ui.RecipientsAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.net.wifi.WifiStateMachine$SoftApStartedState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.vcard.VCardEntry$ImData: void constructInsertOperation(java.util.List,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.providers.downloads.StorageManager: void verifySpaceBeforeWritingToFile(int,java.lang.String,long)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.gallery3d.ui.MenuExecutor: void onProgressComplete(int,com.android.gallery3d.ui.MenuExecutor$ProgressListener)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.internal.policy.impl.KeyguardUpdateMonitor$SimStateCallback: void onSimStateChanged(com.android.internal.telephony.IccCard$State)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.browser.Bookmarks$1: java.lang.Void doInBackground(java.lang.Void[])>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.server.BluetoothService: void finishDisable()>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.internal.telephony.ISms: boolean enableCellBroadcastRange(int,int)>	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.internal.policy.impl.KeyguardViewMediator: void resetStateLocked()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.browser.Tab: void removeFromTree()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$GroupCreatedState: boolean processMessage(android.os.Message)>	android.permission.GET_TASKS	android.permission.BROADCAST_STICKY	
<com.android.internal.widget.multiwaveview.GlowPadView$2: void onAnimationEnd(android.animation.Animator)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.USE_CREDENTIALS	android.permission.READ_CONTACTS	android.permission.MANAGE_ACCOUNTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<android.widget.QuickContactBadge: void onClick(android.view.View)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.vcard.VCardEntryConstructor: void onEntryEnded()>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothHandsfree$ScoSocketConnectThread: void shutdown()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<android.bluetooth.IBluetoothA2dp: boolean setPriority(android.bluetooth.BluetoothDevice,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	
<com.android.settings.PrivacySettings: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.mms.ui.ConversationListItem: void access$000(com.android.mms.ui.ConversationListItem)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.ContactEntryListFragment: void onLoadFinished(android.content.Loader,android.database.Cursor)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.DownloadHandler: void onDownloadStartNoStream(android.app.Activity,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<android.bluetooth.IBluetoothHeadset$Stub: boolean startScoUsingVirtualVoiceCall(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.phone.InCallScreen$12: void onClick(android.content.DialogInterface,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.BLUETOOTH	
<com.android.contacts.list.AccountFilterActivity$MyLoaderCallbacks: void onLoadFinished(android.content.Loader,java.util.List)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.am.ActivityRecord$Token: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.settings.ChooseLockGeneric$ChooseLockGenericFragment: void onActivityCreated(android.os.Bundle)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.vcard.VCardParserImpl_V30: void parse(java.io.InputStream)>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.UiModeManagerService$8: void retrieveLocation()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.browser.Controller: com.android.browser.SnapshotTab createNewSnapshotTab(long,boolean)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.phone.CallCard: void updateCallStateWidgets(com.android.internal.telephony.Call)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.list.ContactBrowseListFragment: void prepareEmptyView()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	
<com.android.settings.fuelgauge.PowerUsageSummary: boolean onOptionsItemSelected(android.view.MenuItem)>	android.permission.BATTERY_STATS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.server.am.ActivityManagerService: boolean makeAppCrashingLocked(com.android.server.am.ProcessRecord,java.lang.String,java.lang.String,java.lang.String)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.contacts.ContactLoader$Result: long getFirstWritableRawContactId(android.content.Context)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.email.activity.MailboxFinder$FindMailboxTask: void callOnPostExecuteForTest(java.lang.Object)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.email.SecurityPolicy: void deleteSecuredAccounts(android.content.Context)>	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	android.permission.WAKE_LOCK	
<com.android.inputmethod.latin.AutoCorrection: boolean allowsToBeAutoCorrected(java.util.concurrent.ConcurrentHashMap,java.lang.CharSequence,boolean)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.bluetooth.BluetoothDevice: boolean createBondOutOfBand(byte[],byte[])>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.internal.telephony.CallerInfoAsyncQuery: com.android.internal.telephony.CallerInfoAsyncQuery startQuery(int,android.content.Context,java.lang.String,com.android.internal.telephony.CallerInfoAsyncQuery$OnQueryCompleteListener,java.lang.Object)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	
<com.android.mms.transaction.SmsReceiverService: int moveOutboxMessagesToFailedBox()>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onSetUserDataEnabled(boolean)>	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	
<com.android.bluetooth.pbap.BluetoothPbapService: int onStartCommand(android.content.Intent,int,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.providers.telephony.SmsProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>	android.permission.READ_SMS	android.permission.RECEIVE_SMS	
<com.android.contacts.list.ContactBrowseListFragment: void onContactUriQueryFinished(android.net.Uri)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.InCallScreen: void access$2300(com.android.phone.InCallScreen)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.browser.SnapshotTab: void capture()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.calendar.DayView: void onClick(android.view.View)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.calendar.month.SimpleWeeksAdapter: boolean onTouch(android.view.View,android.view.MotionEvent)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.email.service.AttachmentDownloadService: void run()>	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<android.provider.Browser: void clearHistory(android.content.ContentResolver)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.phone.BluetoothHandsfree$2: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.phone.BluetoothHandsfree: boolean terminateScoUsingVirtualVoiceCall()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.activities.ActionBarAdapter: boolean onQueryTextChange(java.lang.String)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.activities.ActionBarAdapter$MyNavigationListener: boolean onNavigationItemSelected(int,long)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.TetherSettings: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<android.net.IConnectivityManager$Stub: int tether(java.lang.String)>	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: boolean handleForwardedMessage()>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<android.bluetooth.BluetoothProfileState$StableState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.contacts.list.AccountFilterActivity$MyLoaderCallbacks: void onLoadFinished(android.content.Loader,java.lang.Object)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.email.activity.MessageViewFragment: void onClick(android.view.View)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.telephony.cdma.CDMALTEPhone: void dispose()>	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	
<com.android.gallery3d.ui.PhotoView: void resetToFirstPicture()>	android.permission.NFC	android.permission.VIBRATE	
<com.android.calendar.month.MonthByWeekFragment: void updateMonthHighlight(android.widget.AbsListView)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.inputmethod.keyboard.PointerTracker: void onUpEvent(int,int,long)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.providers.contacts.ContactsProvider2: int deleteInTransaction(android.net.Uri,java.lang.String,java.lang.String[])>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.providers.contacts.ContactsProvider2: android.database.Cursor queryLocal(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,long,android.os.CancellationSignal)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.media.effect.effects.PosterizeEffect: void apply(int,int,int,int)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.gallery3d.ui.GestureRecognizer$Listener: void onUp()>	android.permission.NFC	android.permission.VIBRATE	
<com.android.gallery3d.app.AlbumPage$2: void renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.server.net.NetworkStatsService: void performPoll(int)>	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<com.android.inputmethod.keyboard.SuddenJumpingTouchEventHandler: boolean handleSuddenJumping(android.view.MotionEvent)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.net.NetworkIdentity: android.net.NetworkIdentity buildNetworkIdentity(android.content.Context,android.net.NetworkState)>	android.permission.ACCESS_WIFI_STATE	android.permission.READ_PHONE_STATE	
<com.android.bluetooth.opp.BluetoothOppService: void updateShare(android.database.Cursor,int,boolean)>	android.permission.BLUETOOTH_ADMIN	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<android.media.effect.effects.GrainEffect: void apply(int,int,int,int)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean disableCellBroadcastRange(int,int)>	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.contacts.list.PhoneNumberListAdapter: void bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.telephony.ITelephony: android.os.Bundle getCellLocation()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void setTimeFromNITZString(java.lang.String,long)>	android.permission.BROADCAST_STICKY	android.permission.SET_TIME_ZONE	android.permission.WAKE_LOCK	
<com.android.contacts.editor.StructuredNameEditorView: void onOptionalFieldVisibilityChange()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.bluetooth.IBluetoothA2dp$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<android.content.ISyncAdapter$Stub$Proxy: void initialize(android.accounts.Account,java.lang.String)>	android.permission.WRITE_SYNC_SETTINGS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.telephony.DataConnectionTracker: void onDataSetupComplete(android.os.AsyncResult)>	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	
<android.filterpacks.imageproc.ColorTemperatureFilter: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.server.BluetoothService: boolean setBondState(java.lang.String,int,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<android.location.ILocationManager$Stub$Proxy: void requestLocationUpdatesPI(java.lang.String,android.location.Criteria,long,float,boolean,android.app.PendingIntent)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.email.MessagingController$2: void run()>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.util.State: void enter()>	android.permission.CHANGE_WIFI_STATE	android.permission.GET_TASKS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.contacts.editor.BaseRawContactEditorView: void setPhotoBitmap(android.graphics.Bitmap)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.provider.ContactsContract$ProfileSyncState: android.content.ContentProviderOperation newSetOperation(android.accounts.Account,byte[])>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.calendar.EmailAddressAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.emailcommon.service.IAccountService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.VIBRATE	android.permission.MANAGE_ACCOUNTS	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.browser.AddBookmarkPage: void setAccount(java.lang.String,java.lang.String)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.contacts.list.ContactEntryListAdapter: void bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.DefaultContactBrowseListFragment: void prepareEmptyView()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	
<com.android.phone.AccelerometerListener: void setOrientation(int)>	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<android.net.wifi.WifiStateMachine$SupplicantStoppingState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.phone.BluetoothAtPhonebook$2: android.bluetooth.AtCommandResult handleReadCommand()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<android.filterpacks.imageproc.BitmapOverlayFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.server.sip.SipService: void open3(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.ISipSessionListener)>	android.permission.USE_SIP	android.permission.WAKE_LOCK	
<com.android.contacts.editor.TextFieldsEditorView: void notifyEditorListener()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.Settings$DevelopmentSettingsActivity: void onResume()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.UserHistoryDictionary: void loadDictionary()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.inputmethod.latin.LatinIME: void onRefreshKeyboard()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.settings.bluetooth.CachedBluetoothDevice: void connect(boolean)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.browser.DeviceAccountLogin: void login(int,com.android.browser.DeviceAccountLogin$AutoLoginCallback)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.browser.PieControl: void buildTabs()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.camera.VideoCamera: void onStopVideoRecording()>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.camera.ui.EffectSettingPopup: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.RECORD_AUDIO	
<com.android.server.sip.SipService$ConnectivityReceiver$1: void run()>	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<com.android.contacts.list.ContactListAdapter: android.net.Uri getContactUri(int,android.database.Cursor)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.ShortcutIntentBuilder$LoadingAsyncTask: java.lang.Object doInBackground(java.lang.Object[])>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.phone.BluetoothHandsfree: void userWantsAudioOff()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.list.EmailAddressPickerFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.vcard.ImportVCardActivity: android.app.Dialog onCreateDialog(int,android.os.Bundle)>	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.WirelessSettings: void onResume()>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_USER_DICTIONARY	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.LatinIME: void handleCharacter(int,int,int,int)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.phone.BluetoothHeadsetService: void setState(android.bluetooth.BluetoothDevice,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.wallpaper.grass.GrassRS: void access$300(com.android.wallpaper.grass.GrassRS)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.calendar.event.EditEventHelper$EditDoneRunnable: void run()>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.mms.util.Recycler$SmsRecycler: boolean checkForThreadsOverLimit(android.content.Context)>	android.permission.READ_SMS	android.permission.RECEIVE_SMS	
<com.android.exchange.ContactsSyncAdapterService: void access$000(android.content.Context,android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>	android.permission.VIBRATE	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.editor.PhoneticNameEditorView: void onOptionalFieldVisibilityChange()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.net.ConnectivityManager: boolean setRadios(boolean)>	android.permission.CHANGE_WIFI_STATE	android.permission.CHANGE_NETWORK_STATE	
<android.filterpacks.imageproc.BitmapSource: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.settings.bluetooth.HidProfile: void setPreferred(android.bluetooth.BluetoothDevice,boolean)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.activities.TransactionSafeActivity: void onCreate(android.os.Bundle)>	android.permission.NFC	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.latin.WhitelistDictionary: boolean reloadDictionaryIfRequired()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.gallery3d.app.Gallery: void startViewAction(android.content.Intent)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.list.AccountFilterActivity: void onCreate(android.os.Bundle)>	android.permission.NFC	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.wifi.WifiSettingsForSetupWizardXL: void onCreate(android.os.Bundle)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	
<com.android.exchange.EasSyncService: android.os.Bundle validateAccount(com.android.emailcommon.provider.HostAuth,android.content.Context)>	android.permission.READ_CALENDAR	android.permission.WAKE_LOCK	
<com.android.server.ConnectivityService: void access$2000(com.android.server.ConnectivityService)>	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	
<com.android.contacts.list.ProviderStatusWatcher$LoaderTask: void onPostExecute(java.lang.Boolean)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.inputmethod.InputMethodAndLanguageSettings: void onActivityCreated(android.os.Bundle)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.PhoneFavoriteMergedAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothHandsfree: void <init>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.calendar.month.MonthByWeekFragment$2: void run()>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.commands.monkey.Monkey: void main(java.lang.String[])>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.camera.ActivityBase: void onConfigurationChanged(android.content.res.Configuration)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.gallery3d.app.AlbumSetDataLoader$ReloadTask: void run()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.activities.PeopleActivity: void onAction(int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.util.ReverseGeocoder: java.lang.String computeAddress(com.android.gallery3d.util.ReverseGeocoder$SetLatLong)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.nfc.handover.HandoverManager: boolean tryHandover(android.nfc.NdefMessage)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<android.server.BluetoothA2dpService: void onSinkPropertyChanged(java.lang.String,java.lang.String[])>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.server.net.NetworkPolicyManagerService: void access$800(com.android.server.net.NetworkPolicyManagerService,android.net.NetworkTemplate,int)>	android.permission.ACCESS_WIFI_STATE	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	
<android.server.BluetoothAdapterStateMachine$PerProcessState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.settings.ChooseLockGeneric$ChooseLockGenericFragment: void onCreate(android.os.Bundle)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.READ_PHONE_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.contacts.activities.ActionBarAdapter$Listener: void onSelectedTabChanged()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.Controller: void onResume()>	android.permission.NFC	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<com.android.contacts.vcard.ExportProcessor: void run()>	android.permission.VIBRATE	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.activities.PeopleActivity$ContactDetailLoaderFragmentListener: void onDetailsLoaded(com.android.contacts.ContactLoader$Result)>	android.permission.READ_PHONE_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.WallpaperTypeSettings: void onCreate(android.os.Bundle)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.READ_PHONE_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.contacts.activities.ActionBarAdapter: void setCurrentTab(int,boolean)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.calendar.EventInfoFragment: boolean saveReminders()>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.contacts.detail.ContactLoaderFragment$1: void onLoadFinished(android.content.Loader,java.lang.Object)>	android.permission.READ_PHONE_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.calendar.CalendarController: void sendEventRelatedEvent(java.lang.Object,long,long,long,long,int,int,long)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.contacts.calllog.ContactInfoHelper: com.android.contacts.calllog.ContactInfo lookupContactFromUri(android.net.Uri)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.development.Connectivity: void onStartDelayedCycle()>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.WAKE_LOCK	
<com.android.phone.BluetoothHandsfree$28: android.bluetooth.AtCommandResult handleReadCommand()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<android.filterpacks.imageproc.DocumentaryFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.phone.OtaUtils: int startNonInteractiveOtasp(android.content.Context)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.browser.UrlHandler: boolean shouldOverrideUrlLoading(com.android.browser.Tab,android.webkit.WebView,java.lang.String)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.camera.VideoCamera: boolean onOptionsItemSelected(android.view.MenuItem)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.mms.ui.ComposeMessageActivity: void onUserInteraction()>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.camera.CameraPreference$OnPreferenceChangedListener: void onSharedPreferenceChanged()>	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.RECORD_AUDIO	
<android.net.ConnectivityManager: boolean setRadio(int,boolean)>	android.permission.CHANGE_WIFI_STATE	android.permission.CHANGE_NETWORK_STATE	
<android.bluetooth.AtCommandHandler: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void saveDraft(boolean)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.internal.telephony.sip.SipPhoneBase: void setPropertiesByCarrier()>	android.permission.CHANGE_WIFI_STATE	android.permission.WRITE_SETTINGS	android.permission.CHANGE_CONFIGURATION	
<android.filterpacks.base.GLTextureSource: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.contacts.calllog.VoicemailNotifier: void updateNotification(android.net.Uri)>	android.permission.VIBRATE	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.contacts.list.PhoneNumberPickerFragment: void onLoadFinished(android.content.Loader,android.database.Cursor)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.media.AudioService$SetModeDeathHandler: void binderDied()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<com.android.server.net.NetworkStatsService: void updateIfacesLocked()>	android.permission.ACCESS_WIFI_STATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.calendar.month.SimpleDayPickerFragment: void onScroll(android.widget.AbsListView,int,int,int)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.internal.policy.impl.LockScreen$SlidingTabMethods: void onGrabbedStateChange(android.view.View,int)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.internal.telephony.cdma.CDMALTEPhone: void setPropertiesByCarrier()>	android.permission.CHANGE_WIFI_STATE	android.permission.WRITE_SETTINGS	android.permission.CHANGE_CONFIGURATION	
<com.android.inputmethod.latin.spellcheck.DictionaryPool: com.android.inputmethod.latin.spellcheck.DictAndProximity takeOrGetNull()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.phone.BluetoothHandsfree$15: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.nfc.nxp.NativeNfcManager: void notifyTargetDeselected()>	android.permission.GET_TASKS	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.browser.AddBookmarkPage$1: void onLoadFinished(android.content.Loader,java.lang.Object)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.settings.tts.TtsEngineSettingsFragment: void onCreate(android.os.Bundle)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.READ_PHONE_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.calendar.DayFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.inputmethod.latin.SynchronouslyLoadedContactsDictionary: void getBigrams(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.mms.transaction.TransactionService: int beginMmsConnectivity()>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.contacts.list.EmailAddressPickerFragment: void onLoadFinished(android.content.Loader,java.lang.Object)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.imageproc.SharpenFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.filterpacks.imageproc.RedEyeFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.email.activity.MessageViewFragmentBase$LoadBodyTask: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.GoogleAccountLogin: void startLoginIfNeeded(android.app.Activity,java.lang.Runnable)>	android.permission.INTERNET	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.email.activity.UIControllerOnePane: boolean onOptionsItemSelected(android.view.MenuItem)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.ContactSaveService: void removeMembersFromGroup(android.content.ContentResolver,long[],long)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.PostalAddressListAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.videosrc.MediaSource: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.gallery3d.data.ClusterAlbum: long reload()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.exchange.adapter.EmailSyncAdapter: boolean parse(java.io.InputStream)>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<android.net.wifi.WifiWatchdogStateMachine: android.net.wifi.WifiWatchdogStateMachine makeWifiWatchdogStateMachine(android.content.Context)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	
<android.media.effect.effects.CrossProcessEffect: void apply(int,int,int,int)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.calendar.DayView: void doSingleTapUp(android.view.MotionEvent)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.email.service.MailService: void reconcileAccountsWithAccountManager(android.content.Context,java.util.List,android.accounts.Account[],android.content.Context)>	android.permission.MANAGE_ACCOUNTS	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.inputmethod.latin.UserBinaryDictionary: boolean isValidWord(java.lang.CharSequence)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.net.wifi.SupplicantStateTracker$UninitializedState: boolean processMessage(android.os.Message)>	android.permission.CHANGE_WIFI_STATE	android.permission.GET_TASKS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.INTERNET	android.permission.BROADCAST_STICKY	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.server.am.ActivityManagerService: void skipPendingBroadcastLocked(int)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.contacts.group.GroupBrowseListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onDataStallAlarm(int)>	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<android.location.ILocationManager$Stub: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_LOCATION_EXTRA_COMMANDS	
<com.android.settings.bluetooth.DeviceProfilesSettings: void onResume()>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_USER_DICTIONARY	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.phone.BluetoothHandsfree$25: android.bluetooth.AtCommandResult handleReadCommand()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.phone.BluetoothHandsfree$28: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<android.location.ILocationManager$Stub: void requestLocationUpdates(java.lang.String,android.location.Criteria,long,float,boolean,android.location.ILocationListener)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.browser.WebViewController: boolean switchToTab(com.android.browser.Tab)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.bluetooth.IBluetoothA2dp$Stub$Proxy: boolean disconnectSinkInternal(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.KeyguardViewManager$KeyguardViewHost: void dispatchDraw(android.graphics.Canvas)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.google.android.mms.pdu.PduPersister: com.google.android.mms.pdu.GenericPdu load(android.net.Uri)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.gallery3d.app.SlideshowPage: void onBackPressed()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.inputmethod.keyboard.KeyboardView: boolean onTouchEvent(android.view.MotionEvent)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.list.CustomContactListFilterActivity$CustomFilterConfigurationLoader: com.android.contacts.list.CustomContactListFilterActivity$AccountSet loadInBackground()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.widget.LayoutSuppressingQuickContactBadge: void onClick(android.view.View)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.browser.IntentHandler$1: java.lang.Void doInBackground(java.lang.Void[])>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.gallery3d.ui.PhotoView$MyGestureListener: void onUp()>	android.permission.NFC	android.permission.VIBRATE	
<com.android.mms.data.WorkingMessage: void updateDraftSmsMessage(com.android.mms.data.Conversation,java.lang.String)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.phone.BluetoothHeadsetService$6: boolean setPriority(android.bluetooth.BluetoothDevice,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	
<com.android.server.ThrottleService$MyHandler: void onPolicyChanged()>	android.permission.VIBRATE	android.permission.BROADCAST_STICKY	android.permission.READ_PHONE_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	
<com.android.gallery3d.app.ActivityState: void setContentPane(com.android.gallery3d.ui.GLView)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.activities.PeopleActivity: void setQueryTextToFragment(java.lang.String)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.WirelessSettings: void onCreate(android.os.Bundle)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.READ_PHONE_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.exchange.adapter.AttachmentLoader: void doProgressCallback(int)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.calendar.alerts.AlertService: void postNotification(com.android.calendar.alerts.AlertService$NotificationInfo,java.lang.String,android.content.Context,boolean,com.android.calendar.alerts.AlertService$NotificationPrefs,com.android.calendar.alerts.NotificationMgr,int)>	android.permission.VIBRATE	android.permission.READ_CALENDAR	
<com.android.server.BackupManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.calendar.event.AttendeesView$PresenceQueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.model.SlideshowModel: com.android.mms.model.SlideshowModel createFromMessageUri(android.content.Context,android.net.Uri)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.calendar.month.SimpleDayPickerFragment: void setMonthDisplayed(android.text.format.Time,boolean)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.emailcommon.service.EmailServiceProxy$2: void run()>	android.permission.VIBRATE	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.telephony.gsm.GsmServiceStateTracker: void pollStateDone()>	android.permission.VIBRATE	android.permission.BROADCAST_STICKY	android.permission.SET_TIME_ZONE	
<android.bluetooth.IBluetoothHeadset: boolean setPriority(android.bluetooth.BluetoothDevice,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	
<com.android.camera.Camera: void access$1300(com.android.camera.Camera)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.browser.PhoneUi: void hideNavScreen(int,boolean)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.contacts.list.DefaultContactBrowseListFragment: void onAttach(android.app.Activity)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.ui.SlotView: void removeOneComponent(com.android.gallery3d.ui.GLView)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.internal.telephony.gsm.SimSmsInterfaceManager: boolean enableCellBroadcastRange(int,int)>	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.phone.BluetoothAtPhonebook$3: android.bluetooth.AtCommandResult handleReadCommand()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.contacts.util.NameConverter: java.lang.String structuredNameToDisplayName(android.content.Context,java.util.Map)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.net.nsd.INsdManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.INTERNET	android.permission.WRITE_SETTINGS	
<com.android.phone.OtaUtils: void otaPerformActivation()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<android.filterpacks.base.ObjectSource: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.settings.inputmethod.UserDictionaryList: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.contacts.list.PhoneNumberListAdapter: android.net.Uri getContactUri(int,android.database.Cursor,int,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.nfc.snep.SnepServer$ServerThread: void run()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.BLUETOOTH	
<com.android.contacts.group.GroupEditorFragment: void selectAccountAndCreateGroup()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.development.Connectivity: void access$1300(com.android.development.Connectivity)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.WAKE_LOCK	
<com.android.calendar.EventInfoFragment: void updateResponse(long,long,int)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.browser.BrowserYesNoPreference: void onDialogClosed(boolean)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.providers.downloads.DownloadThread: void checkPausedOrCanceled(com.android.providers.downloads.DownloadThread$State)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.vcard.NfcImportVCardActivity$ImportTask: com.android.contacts.vcard.ImportRequest doInBackground(com.android.contacts.vcard.VCardService[])>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.bluetooth.DockService: void access$200(com.android.settings.bluetooth.DockService,android.bluetooth.BluetoothDevice,int,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$GroupNegotiationState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.calendar.SearchActivity: void onResume()>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.internal.policy.impl.KeyguardViewMediator: void setKeyguardEnabled(boolean)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.providers.contacts.LegacyApiSupport: int delete(android.net.Uri,int,long)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.email.GroupMessagingListener: void loadAttachmentFailed(long,long,long,com.android.emailcommon.mail.MessagingException,boolean)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothHandsfree$29: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.phone.BluetoothHandsfree$8: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.KeyguardUpdateMonitor: void reportSimUnlocked()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.settings.bluetooth.CachedBluetoothDevice: void refreshName()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.mms.data.Conversation: android.net.Uri getUri()>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.mms.ui.ManageSimMessages: void init()>	android.permission.READ_SMS	android.permission.RECEIVE_SMS	
<com.android.phone.OtaUtils: void otaShowHome()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.GlobalActions$SinglePressAction: boolean onLongPress()>	android.permission.VIBRATE	android.permission.MOUNT_UNMOUNT_FILESYSTEMS	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.mms.ui.MmsThumbnailPresenter$1: void onItemLoaded(java.lang.Object,java.lang.Throwable)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.activities.PeopleActivity: boolean onSearchRequested()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.ConnectivityService: boolean isNetworkMeteredUnchecked(int)>	android.permission.ACCESS_WIFI_STATE	android.permission.READ_PHONE_STATE	
<com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary: void asyncReloadDictionaryIfRequired()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.development.AccountsTester$3: void onClick(android.content.DialogInterface,int)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<android.provider.BrowserContract$Settings: void setSyncEnabled(android.content.Context,boolean)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.camera.VideoCamera$1: void run()>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.phone.CallNotifier$InCallTonePlayer: void run()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.mms.util.PduLoaderManager$PduTask: void run()>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.settings.SubSettings: void onResume()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<android.view.IApplicationToken: void windowsVisible()>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.voicedialer.VoiceDialerActivity: int playSound(int)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	
<com.android.contacts.activities.ContactSelectionActivity: boolean onQueryTextChange(java.lang.String)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.net.INetworkPolicyManager$Stub$Proxy: void setNetworkPolicies(android.net.NetworkPolicy[])>	android.permission.ACCESS_WIFI_STATE	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.email.activity.UIControllerTwoPane$RefreshTask: void onSuccess(java.lang.Object)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.exchange.ExchangeService$2: void deleteAccountPIMData(long)>	android.permission.READ_CALENDAR	android.permission.WAKE_LOCK	
<android.filterpacks.base.OutputStreamTarget: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.inputmethod.keyboard.KeyboardActionListener$Adapter: void onCodeInput(int,int,int)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.calllog.CallLogAdapter: void bindChildView(android.view.View,android.content.Context,android.database.Cursor)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WRITE_CALL_LOG	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.group.GroupEditorFragment: boolean isGroupMembershipEditable()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.XLargeUi: void showWeb(boolean)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.net.wifi.SupplicantStateTracker$UninitializedState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.server.TelephonyRegistry: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.BROADCAST_STICKY	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	
<com.android.email.activity.MessageViewFragmentBase$LoadAttachmentsTask: void callOnPostExecuteForTest(java.lang.Object)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.model.EntityDeltaList: void buildSplitContactDiff(java.util.ArrayList,int,int,int[])>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.Preloader$PreloaderSession: void <init>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.exchange.adapter.AttachmentLoader: void finishLoadAttachment()>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.PhoneApp: void updateProximitySensorMode(com.android.internal.telephony.Phone$State)>	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.contacts.detail.ContactDetailLayoutController: void <init>	android.permission.NFC	android.permission.READ_PHONE_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.telephony.Phone: void dispose()>	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	
<android.filterpacks.imageproc.ImageCombineFilter: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.contacts.editor.ContactEditorFragment: void access$2100(com.android.contacts.editor.ContactEditorFragment)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.am.BroadcastQueue: void scheduleBroadcastsLocked()>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.settings.vpn2.VpnSettings: void onResume()>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_USER_DICTIONARY	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<android.server.BluetoothA2dpService: boolean connect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.camera.VideoCamera: void initializeEffectsPreview()>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.contacts.calllog.CallLogQueryHandler: void markMissedCallsAsRead()>	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WRITE_CALL_LOG	
<android.view.WindowManagerPolicy: long interceptKeyBeforeDispatching(android.view.WindowManagerPolicy$WindowState,android.view.KeyEvent,int)>	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.settings.bluetooth.A2dpProfile: void setPreferred(android.bluetooth.BluetoothDevice,boolean)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.AccountUnlockScreen: void onResume()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.contacts.list.PostalAddressPickerFragment: void setSearchMode(boolean)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.activities.AttachPhotoActivity$Listener: void onContactLoaded(com.android.contacts.ContactLoader$Result)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothHandsfree: void onBluetoothDisabled()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.calendar.alerts.AlertActivity: void access$400(com.android.calendar.alerts.AlertActivity,long)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.settings.inputmethod.UserDictionaryList: void onActivityCreated(android.os.Bundle)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.inputmethod.InputMethodAndSubtypeEnabler: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.settings.bluetooth.LocalBluetoothAdapter: void setBluetoothStateInt(int)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<android.net.wifi.p2p.IWifiP2pManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	
<com.android.contacts.list.ContactBrowseListFragment$ContactLookupTask: void onPostExecute(android.net.Uri)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.am.ActivityManagerService: void startAppProblemLocked(com.android.server.am.ProcessRecord)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.email.activity.MessageListFragment: void onRefresh(boolean)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.PostalAddressPickerFragment: boolean isSyncActive()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	
<android.filterpacks.imageproc.SaturateFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.server.location.ComprehensiveCountryDetector: void removePhoneStateListener()>	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	
<android.location.LocationManager: void requestSingleUpdate(android.location.Criteria,android.location.LocationListener,android.os.Looper)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.inputmethod.latin.ExpandableBinaryDictionary: void generateBinaryDictionary()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.internal.policy.impl.KeyguardViewMediator: void handleHide()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler$PhotoEditorListener: void onRequest(int)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.latin.Suggest: void initWhitelistAndAutocorrectAndPool(android.content.Context,java.util.Locale)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.mms.transaction.SmsReceiverService: void handleSendMessage()>	android.permission.READ_SMS	android.permission.VIBRATE	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.internal.telephony.gsm.GsmServiceStateTracker$3: void onChange(boolean)>	android.permission.BROADCAST_STICKY	android.permission.SET_TIME_ZONE	
<com.android.gallery3d.app.AlbumSetPage$1: boolean dispatchTouchEvent(android.view.MotionEvent)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.settings.Settings$UserDictionarySettingsActivity: void onResume()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.server.wm.WindowManagerService: void rebootSafeMode()>	android.permission.VIBRATE	android.permission.MOUNT_UNMOUNT_FILESYSTEMS	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.settings.AccessibilitySettings: void onActivityCreated(android.os.Bundle)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.inputmethod.InputMethodAndSubtypeEnabler: void onPause()>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.browser.Controller: void closeCurrentTab()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.contacts.group.GroupDetailDisplayUtils: void bindGroupSourceView(android.content.Context,android.view.View,java.lang.String,java.lang.String)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.email.activity.UIControllerSearchTwoPane: boolean onOptionsItemSelected(android.view.MenuItem)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.policy.impl.KeyguardViewMediator: void access$1200(com.android.internal.policy.impl.KeyguardViewMediator)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<android.server.BluetoothService: boolean disconnectInputDevice(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.FaceUnlock: void handleCancel()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.phone.BluetoothHeadsetService$6: boolean connect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<android.server.BluetoothService: boolean setBondState(java.lang.String,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.bluetooth.pbap.BluetoothPbapVcardManager: int composeAndSendCallLogVcards(int,javax.obex.Operation,int,int,boolean)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<android.server.BluetoothEventLoop: void onRequestPasskey(java.lang.String,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.UserHistoryDictionary: void getWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.browser.Controller: com.android.browser.Tab openTab(com.android.browser.IntentHandler$UrlData)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.calendar.SearchActivity: void search(java.lang.String,android.text.format.Time)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<android.telephony.gsm.SmsManager: boolean copyMessageToSim(byte[],byte[],int)>	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.calendar.month.SimpleDayPickerFragment$2: void onChanged()>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.providers.downloads.DownloadThread: void handleEndOfStream(com.android.providers.downloads.DownloadThread$State,com.android.providers.downloads.DownloadThread$InnerState)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.activities.PeopleActivity: void updateViewConfiguration(boolean)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.transaction.ReadRecTransaction: byte[] sendPdu(byte[])>	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	
<com.android.internal.telephony.cdma.CDMAPhone: void <init>	android.permission.CHANGE_WIFI_STATE	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	android.permission.CHANGE_CONFIGURATION	android.permission.SET_TIME_ZONE	android.permission.WAKE_LOCK	
<com.android.camera.Camera: void onCreate(android.os.Bundle)>	android.permission.NFC	android.permission.VIBRATE	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	android.permission.RECORD_AUDIO	
<com.android.browser.TabControl: void recreateWebView(com.android.browser.Tab)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: java.util.List getAdnRecordsInEf(int)>	android.permission.READ_CONTACTS	android.permission.WAKE_LOCK	
<com.android.contacts.model.EntityModifier: void migrateStateForNewContact(android.content.Context,com.android.contacts.model.EntityDelta,com.android.contacts.model.EntityDelta,com.android.contacts.model.AccountType,com.android.contacts.model.AccountType)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.editor.ContactEditorFragment$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.am.ActivityManagerService: void retrieveSettings()>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.server.DeviceStorageMonitorService: void <init>	android.permission.VIBRATE	android.permission.BROADCAST_STICKY	android.permission.CLEAR_APP_CACHE	
<com.android.inputmethod.latin.LatinIME$3: void onClick(android.content.DialogInterface,int)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.email.service.MailService: void setupAccountManagerAccount(android.content.Context,com.android.emailcommon.provider.Account,boolean,boolean,boolean,android.accounts.AccountManagerCallback)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.mms.ui.ComposeMessageActivity: boolean haveSomethingToCopyToSDCard(long)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.internal.policy.impl.GlobalActions$Action: boolean onLongPress()>	android.permission.VIBRATE	android.permission.MOUNT_UNMOUNT_FILESYSTEMS	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.contacts.calllog.CallLogFragment: void fetchCalls()>	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<android.filterpacks.base.NullFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.wallpaper.grass.GrassView: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.settings.TetherSettings: void onActivityCreated(android.os.Bundle)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: boolean copyMessageToIccEf(int,byte[],byte[])>	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<android.content.SyncManager$SyncHandler: void runSyncFinishedOrCanceledLocked(android.content.SyncResult,android.content.SyncManager$ActiveSyncContext)>	android.permission.VIBRATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<com.android.phone.AccelerometerListener$1: void onSensorChanged(android.hardware.SensorEvent)>	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.server.pm.PackageManagerService: android.content.pm.PackageParser$Package scanPackageLI(android.content.pm.PackageParser$Package,int,int,long)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<android.net.wifi.SupplicantStateTracker$ScanState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.providers.contacts.LegacyApiSupport: int update(int,long,android.content.ContentValues)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothHandsfree$4: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.contacts.activities.ConfirmAddDetailActivity$QueryEntitiesTask: void onPostExecute(com.android.contacts.model.EntityDeltaList)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.CallDetailActivity: com.android.contacts.PhoneCallDetails access$300(com.android.contacts.CallDetailActivity,android.net.Uri)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.NsdService$NsdStateMachine$DefaultState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.settings.bluetooth.RequestPermissionHelperActivity: void onCreate(android.os.Bundle)>	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.BLUETOOTH	
<com.android.server.ConnectivityService: int untether(java.lang.String)>	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.phone.BluetoothHandsfree$19: android.bluetooth.AtCommandResult handleActionCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.exchange.adapter.Parser: boolean parse()>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.bluetooth.CachedBluetoothDevice: void setRssi(short)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<android.server.BluetoothService: void disconnectDevices()>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.contacts.activities.GroupDetailActivity: boolean onPrepareOptionsMenu(android.view.Menu)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.activities.ContactDetailActivity$3$1: void run()>	android.permission.READ_PHONE_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.email.activity.setup.AccountSetupExchangeFragment: void saveSettingsAfterEdit()>	android.permission.READ_PHONE_STATE	android.permission.WAKE_LOCK	
<android.bluetooth.IBluetooth$Stub$Proxy: boolean cancelPairingUserInput(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.exchange.EasAccountService: void runPingLoop()>	android.permission.VIBRATE	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.server.pm.PackageManagerService: boolean deleteSystemPackageLI(android.content.pm.PackageParser$Package,int,com.android.server.pm.PackageManagerService$PackageRemovedInfo,boolean)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.internal.widget.multiwaveview.GlowPadView: void setGrabbedState(int)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.USE_CREDENTIALS	android.permission.READ_CONTACTS	android.permission.MANAGE_ACCOUNTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.mms.ui.DeliveryReportActivity: java.util.List getSmsReportItems()>	android.permission.READ_SMS	android.permission.RECEIVE_SMS	
<com.android.server.am.ActivityManagerService: void crashApplication(com.android.server.am.ProcessRecord,android.app.ApplicationErrorReport$CrashInfo)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<android.location.ILocationManager$Stub: android.os.Bundle getProviderInfo(java.lang.String)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.calendar.DayView: void access$5000(com.android.calendar.DayView,android.view.MotionEvent,android.view.MotionEvent,float,float)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.browser.provider.BrowserProvider2$DatabaseHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>	android.permission.WRITE_SYNC_SETTINGS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.bluetooth.LocalBluetoothProfileManager: void setBluetoothStateOn()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.contacts.editor.PhotoActionPopup$Listener: void onRemovePictureChosen()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.calllog.CallLogAdapter: java.lang.String getBetterNumberFromContacts(java.lang.String,java.lang.String)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.voicedialer.VoiceDialerActivity$VoiceDialerBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.calendar.event.EditEventView: void onCancel(android.content.DialogInterface)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.contacts.list.LegacyPhoneNumberListAdapter: android.net.Uri getPhoneUri(int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothHandsfree: void disconnectHeadset()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary: void generateBinaryDictionary()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.inputmethod.keyboard.PointerTracker: boolean callListenerOnPressAndCheckKeyboardLayoutChange(com.android.inputmethod.keyboard.Key)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.server.LocationManagerService: void requestLocationUpdatesLocked(java.lang.String,long,float,boolean,com.android.server.LocationManagerService$Receiver)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.server.am.ActivityManagerService$AppDeathRecipient: void binderDied()>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.server.connectivity.Tethering$TetherMasterSM$ErrorState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.ContactsBinaryDictionary: void asyncReloadDictionaryIfRequired()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.emailcommon.service.ServiceProxy$ProxyRunnable: void run()>	android.permission.VIBRATE	android.permission.MANAGE_ACCOUNTS	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.imageproc.ToPackedGrayFilter: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean stopVoiceRecognition(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.gallery3d.ui.SlideshowView: void renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.contacts.list.PostalAddressPickerFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.app.PhotoPage$1: boolean onTouch(android.view.MotionEvent)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.camera.VideoCamera$MyBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.server.WifiService: android.os.Messenger getWifiServiceMessenger()>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	
<com.android.phone.RespondViaSmsManager$RespondViaSmsCancelListener: void onCancel(android.content.DialogInterface)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary: void getWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.activities.PhotoSelectionActivity$2: void run()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.emailcommon.service.IEmailServiceCallback$Stub$Proxy: void syncMailboxListStatus(long,int,int)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.providers.contacts.LegacyApiSupport: int updateAll(android.net.Uri,int,android.content.ContentValues,java.lang.String,java.lang.String[])>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.activities.PeopleActivity: void access$200(com.android.contacts.activities.PeopleActivity,int)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.media.IAudioService: void stopBluetoothSco(android.os.IBinder)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<com.android.contacts.list.ContactListFilterControllerImpl: void setContactListFilter(com.android.contacts.list.ContactListFilter,boolean)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.data.ContactList: com.android.mms.data.ContactList blockingGetByUris(android.os.Parcelable[])>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.providers.downloads.DownloadService: boolean access$700(com.android.providers.downloads.DownloadService,com.android.providers.downloads.DownloadInfo,boolean,boolean)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<android.filterpacks.imageproc.ContrastFilter: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.contacts.group.GroupBrowseListAdapter: void setCursor(android.database.Cursor)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.camera.Camera: void onPause()>	android.permission.NFC	android.permission.VIBRATE	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	android.permission.RECORD_AUDIO	
<com.android.internal.widget.multiwaveview.GlowPadView: void access$300(com.android.internal.widget.multiwaveview.GlowPadView,int,float,float)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.USE_CREDENTIALS	android.permission.READ_CONTACTS	android.permission.MANAGE_ACCOUNTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.settings.SettingsPreferenceFragment: void onResume()>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_USER_DICTIONARY	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.phone.sip.SipEditor: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>	android.permission.USE_SIP	android.permission.WAKE_LOCK	
<android.view.IApplicationToken$Stub$Proxy: boolean keyDispatchingTimedOut()>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<android.bluetooth.IBluetooth$Stub$Proxy: boolean setTrust(java.lang.String,boolean)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.quicksearchbox.ui.ContactBadge: void assignContactFromPhone(java.lang.String,boolean)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.server.pm.PackageManagerService$10: void run()>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.gallery3d.ui.GLRootView: void setContentPane(com.android.gallery3d.ui.GLView)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.settings.bluetooth.BluetoothDevicePreference$1: void onClick(android.content.DialogInterface,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.mms.ui.ComposeMessageActivity$BackgroundQueryHandler: void onDeleteComplete(int,java.lang.Object,int)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.contacts.model.AccountTypeManager: com.android.contacts.model.AccountTypeManager getInstance(android.content.Context)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothHandsfree$23: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.server.net.NetworkPolicyManagerService$8: void onReceive(android.content.Context,android.content.Intent)>	android.permission.ACCESS_WIFI_STATE	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.activities.ConfirmAddDetailActivity: void access$800(com.android.contacts.activities.ConfirmAddDetailActivity,java.lang.String)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.accounts.AccountManager: android.accounts.AccountManagerFuture confirmCredentials(android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.phone.DTMFTwelveKeyDialer: void clearInCallScreenReference()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.internal.telephony.IccSmsInterfaceManagerProxy: boolean updateMessageOnIccEf(int,int,byte[])>	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.mms.transaction.SmsReceiverService: void handleSmsSent(android.content.Intent,int)>	android.permission.READ_SMS	android.permission.VIBRATE	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.browser.Tab$3: void access$1600(com.android.browser.Tab$3,boolean,android.os.Message)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture addAccount(java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<android.media.AudioService$ScoClient: void requestScoState(int)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<com.android.contacts.editor.EventFieldEditorView$2: void onDateSet(com.android.contacts.datepicker.DatePicker,int,int,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.util.AccountSelectionUtil: android.app.Dialog getSelectAccountDialog(android.content.Context,int,android.content.DialogInterface$OnClickListener,android.content.DialogInterface$OnCancelListener)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.app.SlideshowPage: void access$100(com.android.gallery3d.app.SlideshowPage)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.settings.bluetooth.DeviceProfilesSettings: void onActivityCreated(android.os.Bundle)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.transaction.SmsReceiverService: void access$100(com.android.mms.transaction.SmsReceiverService,android.content.Intent,int)>	android.permission.READ_SMS	android.permission.VIBRATE	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.internal.policy.impl.LockScreen$3: void run()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.internal.policy.impl.KeyguardViewCallback: void keyguardDoneDrawing()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.emailcommon.service.IEmailService$Stub: void deleteAccountPIMData(long)>	android.permission.READ_CALENDAR	android.permission.WAKE_LOCK	
<com.android.settings.SoundSettings: void onActivityCreated(android.os.Bundle)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.server.NativeDaemonConnector: void listenToSocket()>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.internal.policy.impl.LockPatternKeyguardView: void access$200(com.android.internal.policy.impl.LockPatternKeyguardView,com.android.internal.policy.impl.LockPatternKeyguardView$Mode,boolean)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<android.location.ILocationManager$Stub$Proxy: void addProximityAlert(double,double,float,long,android.app.PendingIntent)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.mms.ui.ComposeMessageActivity$BackgroundQueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.settings.LocationSettings: void onResume()>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_USER_DICTIONARY	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.browser.ActivityController: void onPause()>	android.permission.NFC	android.permission.WAKE_LOCK	
<com.android.mms.ui.ComposeMessageActivity: void loadMessageContent()>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.exchange.ExchangeService$CalendarObserver$1: void run()>	android.permission.READ_CALENDAR	android.permission.WAKE_LOCK	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void addVideo(android.net.Uri,boolean)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.PhoneNumberPickerFragment: void finish()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.Bookmarks$1: void updateImages(android.content.ContentResolver,java.lang.String,android.content.ContentValues)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.contacts.ContactSaveService: void createRawContact(android.content.Intent)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.test.FragmentTestActivity: void onServiceCompleted(android.content.Intent)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.TabControl: com.android.browser.SnapshotTab createSnapshotTab(long)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.contacts.list.ShortcutIntentBuilder$ContactLoadingAsyncTask: java.lang.Object doInBackground(java.lang.Object[])>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.settings.bluetooth.DevicePickerFragment: void onDevicePreferenceClick(com.android.settings.bluetooth.BluetoothDevicePreference)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void setAndBroadcastNetworkSetTimeZone(java.lang.String)>	android.permission.BROADCAST_STICKY	android.permission.SET_TIME_ZONE	
<android.content.SyncManager$9: void onStatusChanged(int)>	android.permission.VIBRATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<com.android.internal.telephony.ISms$Stub: boolean enableCellBroadcast(int)>	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.wallpaper.galaxy.GalaxyView: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.camera.ui.IndicatorControlContainer: void onSettingChanged()>	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.RECORD_AUDIO	
<android.server.BluetoothInputProfileHandler: boolean connectInputDeviceInternal(android.bluetooth.BluetoothDevice)>	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.list.ProfileAndContactsLoader: android.database.Cursor loadInBackground()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.filterpacks.numeric.SinWaveFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.contacts.ContactSaveService$2: void run()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.email.activity.MessageCompose$LoadMessageTask: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.app.StateManager: void restoreFromState(android.os.Bundle)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.google.android.mms.util.PduCache: boolean put(java.lang.Object,java.lang.Object)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.mms.util.Recycler$MmsRecycler: void deleteOldMessagesByThreadId(android.content.Context,long)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.gallery3d.ui.CropView: void removeOneComponent(com.android.gallery3d.ui.GLView)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.emailcommon.service.IEmailServiceCallback$Stub: void syncMailboxStatus(long,int,int)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.transaction.SmsReceiverService: void sendFirstQueuedMessage()>	android.permission.READ_SMS	android.permission.VIBRATE	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<android.net.INetworkPolicyManager: boolean isNetworkMetered(android.net.NetworkState)>	android.permission.ACCESS_WIFI_STATE	android.permission.READ_PHONE_STATE	
<com.android.mms.util.ItemLoadedCallback: void onItemLoaded(java.lang.Object,java.lang.Throwable)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.pm.PackageManagerService: android.content.pm.IPackageManager main(android.content.Context,boolean,boolean)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge: boolean performAction(int,int,android.os.Bundle)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.settings.tts.TextToSpeechSettings: void onCreate(android.os.Bundle)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.READ_PHONE_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.server.ServerThread$1: void run()>	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.BROADCAST_STICKY	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_COARSE_LOCATION	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.contacts.list.PhoneNumberListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.group.GroupEditorFragment$4: void onLoadFinished(android.content.Loader,java.lang.Object)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.Tab: void setController(com.android.browser.WebViewController)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.os.storage.IMountService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.MOUNT_UNMOUNT_FILESYSTEMS	android.permission.MOUNT_FORMAT_FILESYSTEMS	
<com.android.phone.PhoneApp: void dismissCallScreen()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.gallery3d.app.StateManager: void switchState(com.android.gallery3d.app.ActivityState,java.lang.Class,android.os.Bundle)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.util.AccountSelectionUtil: android.app.Dialog getSelectAccountDialog(android.content.Context,int,android.content.DialogInterface$OnClickListener)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.bluetooth.opp.BluetoothOppService$BluetoothShareContentObserver: void onChange(boolean)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<android.filterpacks.imageproc.BlackWhiteFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$GroupCreatingState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.email.RefreshManager$SendPendingMessagesForAllAccountsImpl: void onPostExecute(java.lang.Object)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.WallpaperHandler: void run()>	android.permission.INTERNET	android.permission.SET_WALLPAPER	
<com.android.settings.widget.SettingsAppWidgetProvider$BluetoothStateTracker: void setImageViewResources(android.content.Context,android.widget.RemoteViews)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.server.am.ActivityStack: void completeResumeLocked(com.android.server.am.ActivityRecord)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.phone.AccelerometerListener$OrientationListener: void orientationChanged(int)>	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.camera.Camera: void createCameraScreenNail(boolean)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.camera.ui.IndicatorControlBar: void onSettingChanged()>	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.RECORD_AUDIO	
<com.android.gallery3d.app.PhotoPage$1: void renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.internal.telephony.IccCard: void handleCdmaSubscriptionSource()>	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	
<com.android.settings.accounts.ManageAccountsSettings: void onSyncStateUpdated()>	android.permission.READ_SYNC_STATS	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.ui.SurfaceRenderFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.exchange.ExchangeService: boolean isMailboxSyncable(com.android.emailcommon.provider.Account,int)>	android.permission.READ_CALENDAR	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothHandsfree$26: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.server.wm.InputMonitor: long interceptKeyBeforeDispatching(com.android.server.input.InputWindowHandle,android.view.KeyEvent,int)>	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.internal.policy.impl.GlobalActions$3: boolean onLongPress()>	android.permission.VIBRATE	android.permission.MOUNT_UNMOUNT_FILESYSTEMS	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<android.view.IWindowManager$Stub: void clearForcedDisplaySize()>	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.internal.telephony.sip.SipPhone$SipConnection$1: void onCallHeld(android.net.sip.SipAudioCall)>	android.permission.ACCESS_WIFI_STATE	android.permission.WAKE_LOCK	
<com.android.settings.WirelessSettings: void onPause()>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.phone.CallNotifier: void onCdmaCallWaiting(android.os.AsyncResult)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.server.accessibility.AccessibilityManagerService: void <init>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WRITE_SETTINGS	
<com.android.deskclock.AlarmAlert: void snooze()>	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	
<android.bluetooth.IBluetoothHeadset$Stub: boolean stopScoUsingVirtualVoiceCall(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.calendar.AllInOneActivity: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.gallery3d.app.StateManager: void onBackPressed()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.inputmethod.latin.Suggest: void <init>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.camera.VideoCamera: boolean access$1200(com.android.camera.VideoCamera)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.phone.BluetoothHandsfree$11: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.bluetooth.pbap.BluetoothPbapVcardManager: java.util.ArrayList getPhonebookNameList(int)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.camera.ui.InLineSettingSwitch$1: void onCheckedChanged(android.widget.CompoundButton,boolean)>	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.RECORD_AUDIO	
<com.android.calendar.event.EditEventFragment: void handleEvent(com.android.calendar.CalendarController$EventInfo)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.server.am.ActivityManagerService: void onUserRemoved(android.content.Intent)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.phone.BluetoothHandsfree$23: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<android.content.ContentService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.WRITE_SYNC_SETTINGS	android.permission.READ_SYNC_STATS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.OtaStartupReceiver: void onReceive(android.content.Context,android.content.Intent)>	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	
<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void handleCdmaSubscriptionSource(int)>	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	android.permission.SET_TIME_ZONE	android.permission.WAKE_LOCK	
<com.android.email.activity.MessageViewFragment: java.io.File performAttachmentSave(com.android.email.activity.MessageViewFragmentBase$MessageViewAttachmentInfo)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.contacts.editor.SelectAccountDialogFragment: void access$000(com.android.contacts.editor.SelectAccountDialogFragment,com.android.contacts.model.AccountWithDataSet)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.LocationManagerService: void addProximityAlert(double,double,float,long,android.app.PendingIntent)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.internal.telephony.Connection: void separate()>	android.permission.ACCESS_WIFI_STATE	android.permission.WAKE_LOCK	
<com.android.phone.BluetoothHandsfree$BluetoothPhoneState$2: void onReceive(android.content.Context,android.content.Intent)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.contacts.dialpad.DialpadFragment: void onPause()>	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	
<com.android.contacts.ContactLoader: void deliverResult(java.lang.Object)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.accounts.AccountManager$1: android.accounts.AccountManager$Future2Task start()>	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<android.content.ISyncAdapter$Stub: void startSync(android.content.ISyncContext,java.lang.String,android.accounts.Account,android.os.Bundle)>	android.permission.WRITE_SYNC_SETTINGS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.PhoneUtils: boolean answerAndEndHolding(com.android.internal.telephony.CallManager,com.android.internal.telephony.Call)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.emailcommon.service.IEmailService$Stub$Proxy: void updateFolderList(long)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.emailcommon.utility.EmailAsyncTask$1: void callOnPostExecuteForTest(java.lang.Object)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<android.media.effect.effects.VignetteEffect: void apply(int,int,int,int)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.phone.ContactsAsyncHelper$OnImageLoadCompleteListener: void onImageLoadComplete(int,android.graphics.drawable.Drawable,android.graphics.Bitmap,java.lang.Object)>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.SimContacts: void actuallyImportOneSimContact(android.database.Cursor,android.content.ContentResolver,android.accounts.Account)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.bluetooth.BluetoothA2dp: boolean setPriority(android.bluetooth.BluetoothDevice,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.settings.users.UserDetailsSettings: boolean onOptionsItemSelected(android.view.MenuItem)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.settings.accounts.SyncSettings: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.contacts.editor.ContactEditorFragment: boolean revert()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.email.activity.MessageViewFragmentBase: java.io.File performAttachmentSave(com.android.email.activity.MessageViewFragmentBase$MessageViewAttachmentInfo)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<android.net.sip.ISipService$Stub: void open3(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.ISipSessionListener)>	android.permission.USE_SIP	android.permission.WAKE_LOCK	
<android.net.NetworkPolicyManager: void setNetworkPolicies(android.net.NetworkPolicy[])>	android.permission.ACCESS_WIFI_STATE	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	
<android.accounts.IAccountManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.AUTHENTICATE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.server.VibratorService: void onInputDeviceChanged(int)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	
<com.android.nfc.DeviceHost$DeviceHostListener: void onSeEmvCardRemoval()>	android.permission.GET_TASKS	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.mms.transaction.MessagingNotification: void notifySendFailed(android.content.Context)>	android.permission.READ_SMS	android.permission.VIBRATE	
<com.android.email.activity.MessageViewFragment: void onSaveAttachment(com.android.email.activity.MessageViewFragmentBase$MessageViewAttachmentInfo)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<android.telephony.TelephonyManager: java.util.List getNeighboringCellInfo()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.providers.contacts.GlobalSearchSupport$SearchSuggestion: java.util.ArrayList asList(java.lang.String[])>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.policy.impl.KeyguardUpdateMonitor$InfoCallback: void onUserChanged(int)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.email.service.EmailBroadcastProcessorService: void onSystemAccountChanged()>	android.permission.MANAGE_ACCOUNTS	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.contacts.editor.ContactEditorFragment$5: android.content.CursorLoader onCreateLoader(int,android.os.Bundle)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.Tab: void onNewPicture(android.webkit.WebView,android.graphics.Picture)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.phone.EmergencyCallHelper: void placeEmergencyCall()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.ContactsBinaryDictionary: void loadDictionary()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.mms.ui.ComposeMessageActivity$29: void run()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.email.activity.setup.MailboxSettings$2: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.activities.TransactionSafeActivity: void onAttachFragment(android.app.Fragment)>	android.permission.READ_PHONE_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.interactions.ImportExportDialogFragment: void access$100(com.android.contacts.interactions.ImportExportDialogFragment)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.server.am.BroadcastQueue: void skipPendingBroadcastLocked(int)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<android.net.sip.SipManager: void close(java.lang.String)>	android.permission.USE_SIP	android.permission.WAKE_LOCK	
<android.provider.Telephony$Sms: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],java.lang.String,java.lang.String)>	android.permission.READ_SMS	android.permission.RECEIVE_SMS	
<android.filterpacks.base.CallbackFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.server.net.NetworkPolicyManagerService: void systemReady()>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	
<com.android.settings.accounts.AccountSyncSettings: void onAccountsUpdated(android.accounts.Account[])>	android.permission.READ_SYNC_STATS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void access$100(com.android.internal.telephony.cdma.CdmaServiceStateTracker)>	android.permission.BROADCAST_STICKY	android.permission.SET_TIME_ZONE	
<com.android.internal.telephony.IccPhoneBookInterfaceManager: java.util.List getAdnRecordsInEf(int)>	android.permission.READ_CONTACTS	android.permission.WAKE_LOCK	
<com.android.contacts.ContactsUtils: int getThumbnailSize(android.content.Context)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.settings.TetherSettings: void startTethering()>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<android.filterpacks.videosink.MediaEncoderFilter: void process(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.mms.transaction.RetrieveTransaction: byte[] getPdu(java.lang.String)>	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	
<com.android.settings.bluetooth.DeviceListPreferenceFragment: void onDevicePreferenceClick(com.android.settings.bluetooth.BluetoothDevicePreference)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.server.am.ActivityManagerService: void trimApplications()>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.phone.BluetoothHandsfree$12: android.bluetooth.AtCommandResult handleTestCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.browser.BreadCrumbView: void popView()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.systemui.statusbar.phone.PhoneStatusBar: void vibrate()>	android.permission.VIBRATE	android.permission.WAKE_LOCK	
<com.android.settings.users.UserDetailsSettings: void onActivityCreated(android.os.Bundle)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.policy.impl.KeyguardViewMediator: void handleShow()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.bluetooth.opp.BluetoothOppService: void insertShare(android.database.Cursor,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.contacts.ContactListEmptyView: void show(boolean,boolean,boolean,boolean,boolean,boolean,boolean)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	
<com.android.phone.InCallScreen: void connectBluetoothAudio()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.ContactLoader: void loadGroupMetaData(com.android.contacts.ContactLoader$Result)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.net.wifi.p2p.WifiP2pService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	
<android.filterpacks.base.FrameStore: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.browser.DataController: com.android.browser.DataController getInstance(android.content.Context)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.calendar.agenda.AgendaWindowAdapter: boolean queueQuery(com.android.calendar.agenda.AgendaWindowAdapter$QuerySpec)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<android.location.ILocationManager$Stub: java.util.List getProviders(android.location.Criteria,boolean)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.inputmethod.accessibility.AccessibleKeyboardViewProxy: boolean onTransitionKey(com.android.inputmethod.keyboard.Key,com.android.inputmethod.keyboard.Key,android.view.MotionEvent)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.bluetooth.IBluetooth$Stub: boolean setName(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.contacts.list.CustomContactListFilterActivity: void onResume()>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.inputmethod.latin.SubtypeSwitcher: void updateAllParameters()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.dialog.ClearFrequentsDialog$1$1: java.lang.Void doInBackground(java.lang.Void[])>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.content.SyncManager: void sendSyncFinishedOrCanceledMessage(android.content.SyncManager$ActiveSyncContext,android.content.SyncResult)>	android.permission.VIBRATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<com.android.contacts.activities.GroupEditorActivity: void onResume()>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.EmailAddressListAdapter: void bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: void releaseAllPointersExcept(com.android.inputmethod.keyboard.PointerTracker,long)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.exchange.CalendarSyncEnabler: java.lang.String enableEasCalendarSyncInternalForTest()>	android.permission.WRITE_SYNC_SETTINGS	android.permission.GET_ACCOUNTS	
<android.server.BluetoothEventLoop: void onRequestOobData(java.lang.String,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.phone.OtaUtils: void otaShowProgramFailureDialog()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.launcher2.Launcher: void onCreate(android.os.Bundle)>	android.permission.GET_ACCOUNTS	android.permission.SET_WALLPAPER_HINTS	
<android.content.SyncManager: void access$900(android.content.SyncManager)>	android.permission.VIBRATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<com.android.browser.AddBookmarkPage$SaveBookmarkRunnable: void run()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.contacts.list.PhoneNumberListAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.GoogleAccountLogin: void run()>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.contacts.widget.PinnedHeaderListDemoActivity$TestPinnedHeaderListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.app.CropImage: void onCreate(android.os.Bundle)>	android.permission.NFC	android.permission.VIBRATE	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	android.permission.RECORD_AUDIO	
<com.android.internal.telephony.IccSmsInterfaceManager: void enforceReceiveAndSend(java.lang.String)>	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.mms.data.WorkingMessage$1: java.lang.Object doInBackground(java.lang.Object[])>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<android.filterpacks.ui.SurfaceTargetFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.calendar.month.SimpleDayPickerFragment: void doResumeUpdates()>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<android.net.IConnectivityManager$Stub$Proxy: int stopUsingNetworkFeature(int,java.lang.String)>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.gallery3d.app.PhotoPage$1: void removeAllComponents()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.phone.PhoneApp$MediaButtonBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.emailcommon.service.IEmailService: int searchMessages(long,com.android.emailcommon.service.SearchParams,long)>	android.permission.VIBRATE	android.permission.READ_CALENDAR	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.DevelopmentSettings: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>	android.permission.READ_EXTERNAL_STORAGE	android.permission.WRITE_SETTINGS	
<com.android.nfc.NfcService: void onSeEmvCardRemoval()>	android.permission.GET_TASKS	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.gallery3d.app.ManageCachePage$1: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<android.net.ConnectivityManager: int tether(java.lang.String)>	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	
<android.location.ILocationManager$Stub: void addProximityAlert(double,double,float,long,android.app.PendingIntent)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.mms.transaction.SmsReceiverService: void access$000(com.android.mms.transaction.SmsReceiverService,android.content.Intent,int)>	android.permission.READ_SMS	android.permission.VIBRATE	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.internal.policy.impl.PhoneWindowManager$2: void run()>	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.MOUNT_UNMOUNT_FILESYSTEMS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.settings.bluetooth.DockService: void access$700(com.android.settings.bluetooth.DockService,android.bluetooth.BluetoothDevice,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.deskclock.AlarmAlert: boolean dispatchKeyEvent(android.view.KeyEvent)>	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	
<android.bluetooth.AtParser: android.bluetooth.AtCommandResult process(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.server.am.ActivityManagerService: boolean bindBackupAgent(android.content.pm.ApplicationInfo,int)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.gallery3d.app.SlideshowPage: void resume()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<android.net.IConnectivityManager: int tether(java.lang.String)>	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.gallery3d.ui.SlotView: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.browser.FetchUrlMimeType: void run()>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.internal.app.ExternalMediaFormatActivity: void onCreate(android.os.Bundle)>	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.BLUETOOTH	
<com.android.phone.DTMFTwelveKeyDialer: void openDialer(boolean)>	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.server.LocationManagerService: android.location.Location _getLastKnownLocationLocked(java.lang.String)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.email.SecurityPolicy: void onPasswordExpiring(android.content.Context)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	android.permission.WAKE_LOCK	
<com.android.nfc.DeviceHost$DeviceHostListener: void onSeMifareAccess(byte[])>	android.permission.GET_TASKS	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.phone.BluetoothHandsfree: void audioOff()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.list.ContactEntryListAdapter: android.net.Uri getContactUri(int,android.database.Cursor,int,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.inputmethod.InputMethodAndSubtypeEnabler: void onResume()>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_USER_DICTIONARY	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.KeyguardScreenCallback: void forgotPattern(boolean)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.contacts.list.ContactPickerFragment: void onLoadFinished(android.content.Loader,java.lang.Object)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.pm.PackageManagerService: void scanDirLI(java.io.File,int,int,long)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.browser.OpenDownloadReceiver: void onReceiveAsync(android.content.Context,long)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<android.net.wifi.SupplicantStateTracker$DefaultState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.providers.contacts.ContactsProvider2: void outputRawContactsAsVCard(android.net.Uri,java.io.OutputStream,java.lang.String,java.lang.String[])>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.gallery3d.app.SlideshowPage$1: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.detail.ContactDetailFragment$3: void onClick(android.view.View)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary: void <init>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.bluetooth.pbap.BluetoothPbapService$2: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<android.net.wifi.WifiStateMachine$TetheredState: boolean processMessage(android.os.Message)>	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	
<android.net.wifi.WifiWatchdogStateMachine$WalledGardenCheckState: boolean processMessage(android.os.Message)>	android.permission.VIBRATE	android.permission.INTERNET	
<com.android.calendar.event.EditEventFragment: boolean onActionBarItemSelected(int)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.internal.policy.impl.KeyguardStatusViewManager$1: void onUserChanged(int)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.emailcommon.service.EmailServiceProxy$13: void run()>	android.permission.VIBRATE	android.permission.READ_CALENDAR	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.detail.ContactDetailFragment$ViewAdapter: android.view.View getHeaderEntryView(android.view.View,android.view.ViewGroup)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.providers.contacts.LegacyApiSupport: int updateContactMethods(long,android.content.ContentValues)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.transaction.RetrieveTransaction: void sendAcknowledgeInd(com.google.android.mms.pdu.RetrieveConf)>	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	
<com.android.phone.sip.SipEditor: void access$400(com.android.phone.sip.SipEditor)>	android.permission.USE_SIP	android.permission.WAKE_LOCK	
<com.android.contacts.activities.AttachPhotoActivity: void onCreate(android.os.Bundle)>	android.permission.NFC	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.calendar.DeleteEventHelper: void access$900(com.android.calendar.DeleteEventHelper)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.gallery3d.ui.SlotView: boolean removeComponent(com.android.gallery3d.ui.GLView)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.settings.bluetooth.LocalBluetoothProfile: boolean isPreferred(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<android.filterpacks.imageproc.LomoishFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.commands.svc.Svc$Command: void run(java.lang.String[])>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.server.am.BroadcastQueue: boolean sendPendingBroadcastsLocked(com.android.server.am.ProcessRecord)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.browser.BrowserSettings: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	
<com.android.phone.InCallScreen: void access$800(com.android.phone.InCallScreen)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.contacts.list.PhoneNumberPickerFragment: void prepareEmptyView()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	
<com.android.settings.bluetooth.DeviceListPreferenceFragment: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.email.service.PopImapAuthenticatorService$PopImapAuthenticator: android.os.Bundle addAccount(android.accounts.AccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>	android.permission.WRITE_SYNC_SETTINGS	android.permission.AUTHENTICATE_ACCOUNTS	
<com.android.inputmethod.keyboard.PointerTracker: void startLongPressTimer(com.android.inputmethod.keyboard.Key)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.editor.ContactEditorFragment: void onJoinCompleted(android.net.Uri)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.activities.PeopleActivity: void onContactListFilterChanged()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void reconnectAfterFail(com.android.internal.telephony.DataConnection$FailCause,com.android.internal.telephony.ApnContext,int)>	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	
<com.android.internal.util.StateMachine$SmHandler: void processMsg(android.os.Message)>	android.permission.CHANGE_WIFI_STATE	android.permission.GET_TASKS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.INTERNET	android.permission.BROADCAST_STICKY	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.phone.EmergencyCallHelper: void startRetryTimer()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<android.net.wifi.SupplicantStateTracker$DisconnectedState: boolean processMessage(android.os.Message)>	android.permission.CHANGE_WIFI_STATE	android.permission.GET_TASKS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.INTERNET	android.permission.BROADCAST_STICKY	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.server.pm.PackageManagerService: void replacePackageLI(android.content.pm.PackageParser$Package,int,int,java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.camera.ActivityBase: void gotoGallery()>	android.permission.NFC	android.permission.VIBRATE	
<com.android.bluetooth.pbap.BluetoothPbapService: void stopObexServerSession()>	android.permission.BLUETOOTH_ADMIN	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.systemui.statusbar.policy.NetworkController: void onReceive(android.content.Context,android.content.Intent)>	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	
<android.bluetooth.HeadsetBase$1: void run()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.internal.telephony.IccPhoneBookInterfaceManager: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	
<com.android.mms.ui.ConversationList$2: void run()>	android.permission.READ_SMS	android.permission.RECEIVE_SMS	
<com.android.contacts.list.ContactBrowseListFragment: void refreshSelectedContactUri()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.editor.SelectAccountDialogFragment: void onAccountSelected(com.android.contacts.model.AccountWithDataSet)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.common.contacts.DataUsageStatUpdater: boolean updateWithAddress(java.util.Collection)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.users.UserSettings: boolean onOptionsItemSelected(android.view.MenuItem)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.vcard.ExportProcessor: void runInternal()>	android.permission.VIBRATE	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.phone.BluetoothHandsfree$30: android.bluetooth.AtCommandResult handleTestCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.LatinIME: void onCurrentInputMethodSubtypeChanged(android.view.inputmethod.InputMethodSubtype)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.phone.BluetoothHandsfree$14: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.mms.data.WorkingMessage: void discard()>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.gallery3d.ui.PhotoView: boolean removeComponent(com.android.gallery3d.ui.GLView)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.vcard.VCardEntry$WebsiteData: void constructInsertOperation(java.util.List,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.email.Controller$15$1: void call(com.android.emailcommon.service.IEmailServiceCallback)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.wifi.p2p.WifiP2pSettings: void onPause()>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.camera.VideoCamera: void onCreate(android.os.Bundle)>	android.permission.NFC	android.permission.VIBRATE	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	android.permission.RECORD_AUDIO	
<com.android.phone.OtaUtils: void setSpeaker(boolean)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void checkPendingNotification()>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.common.contacts.BaseEmailAddressAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.DownloadTouchIcon: java.lang.Object doInBackground(java.lang.Object[])>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.systemui.usb.UsbResolverActivity: void onCreate(android.os.Bundle)>	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.BLUETOOTH	
<com.android.phone.EmergencyCallHelper: void onDisconnect(android.os.Message)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.mms.data.WorkingMessage$4: void run()>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.phone.BluetoothHandsfree$BluetoothPhoneState: void access$1800(com.android.phone.BluetoothHandsfree$BluetoothPhoneState,boolean,com.android.internal.telephony.Connection)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.email.activity.UIControllerOnePane: void onRefresh()>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.exchange.EasOutboxService: void run()>	android.permission.VIBRATE	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothHeadsetService$6: boolean startVoiceRecognition(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.contacts.model.AccountTypeManagerImpl$FindInvitablesTask: java.lang.Object doInBackground(java.lang.Object[])>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.gallery3d.app.AlbumPage: void doCluster(int)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.providers.contacts.LegacyApiSupport: int updateGroups(long,android.content.ContentValues)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.ContactsUtils: boolean areContactWritableAccountsAvailable(android.content.Context)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.calendar.AllInOneActivity: void initFragments(long,int,android.os.Bundle)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.calendar.agenda.AgendaListView: void goTo(android.text.format.Time,long,java.lang.String,boolean,boolean)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.settings.wifi.WifiEnabler: void onCheckedChanged(android.widget.CompoundButton,boolean)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	
<com.android.internal.policy.impl.PasswordUnlockScreen$4: void onClick(android.view.View)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.inputmethod.latin.suggestions.SuggestionsView$2: boolean onCustomRequest(int)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.internal.policy.impl.LockScreen$1: void onUserChanged(int)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.contacts.ContactPhotoManagerImpl$LoaderThread: void queryPhotosForPreload()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.filterfw.core.Filter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.contacts.ContactLoader: void loadInvitableAccountTypes(com.android.contacts.ContactLoader$Result)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.TetherSettings: void onActivityResult(int,int,android.content.Intent)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler: long access$1600(com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.activities.GroupEditorActivity: void onStart()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.LocationManagerService: void requestLocationUpdatesPI(java.lang.String,android.location.Criteria,long,float,boolean,android.app.PendingIntent)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.internal.telephony.SMSDispatcher: int dispatchNormalMessage(com.android.internal.telephony.SmsMessageBase)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.gallery3d.app.AlbumPage: void onResume()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.server.net.NetworkPolicyManagerService$10: void onReceive(android.content.Context,android.content.Intent)>	android.permission.ACCESS_WIFI_STATE	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.exchange.ExchangeService: void sendMessageRequest(com.android.exchange.Request)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.camera.ui.IndicatorButton: void onSettingChanged()>	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.RECORD_AUDIO	
<android.server.BluetoothService: void handlePanDeviceStateChange(android.bluetooth.BluetoothDevice,int,int)>	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.vcard.VCardParserImpl_V21: void handleNest()>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.bluetooth.IBluetoothHeadset: boolean disconnect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.vcard.VCardEntry$NameData: void constructInsertOperation(java.util.List,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.transaction.SmsReceiverService: void handleBootCompleted()>	android.permission.READ_SMS	android.permission.VIBRATE	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.browser.UrlHandler$RLZTask: void onPostExecute(java.lang.Object)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.browser.WebViewController: com.android.browser.Tab openTab(java.lang.String,boolean,boolean,boolean)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.exchange.adapter.EmailSyncAdapter: boolean sendLocalChanges(com.android.exchange.adapter.Serializer)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.ThrottleService$MyHandler: void checkThrottleAndPostNotification(long)>	android.permission.VIBRATE	android.permission.BROADCAST_STICKY	
<com.android.gallery3d.app.PhotoDataAdapter$DataListener: void onLoadingFinished()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<android.filterpacks.imageproc.DrawOverlayFilter: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.camera.PanoramaActivity: void onCreate(android.os.Bundle)>	android.permission.NFC	android.permission.VIBRATE	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	android.permission.RECORD_AUDIO	
<com.android.mms.ui.MessageItem$PduLoadedMessageItemCallback: void onItemLoaded(java.lang.Object,java.lang.Throwable)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.SimContacts: boolean onContextItemSelected(android.view.MenuItem)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.SipCallOptionHandler: void access$300(com.android.phone.SipCallOptionHandler,android.net.sip.SipProfile)>	android.permission.CHANGE_WIFI_STATE	android.permission.WRITE_SETTINGS	android.permission.CHANGE_CONFIGURATION	android.permission.USE_SIP	
<com.android.contacts.editor.ContactEditorFragment: void setPhoto(long,android.graphics.Bitmap,java.lang.String)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.CallContactActivity: void onResume()>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary: void syncReloadDictionaryIfRequired()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.settings.accounts.AccountPreferenceBase: void onActivityCreated(android.os.Bundle)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.model.AccountTypeManagerImpl$FindInvitablesTask: java.util.Map doInBackground(java.lang.Void[])>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler: com.android.contacts.model.EntityDeltaList getDeltaForAttachingPhotoToContact()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothHandsfree$23: android.bluetooth.AtCommandResult handleTestCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.internal.widget.WaveView: boolean onHoverEvent(android.view.MotionEvent)>	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<android.bluetooth.BluetoothPan: boolean connect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.browser.Controller: com.android.browser.Tab openTab(java.lang.String,boolean,boolean,boolean,com.android.browser.Tab)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.inputmethod.latin.suggestions.SuggestionsView: void addToDictionary(java.lang.CharSequence)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.browser.SuggestionsAdapter$SuggestFilter: android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.ACCESS_NETWORK_STATE	
<android.test.IsolatedContext$MockAccountManager: void invalidateAuthToken(java.lang.String,java.lang.String)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	
<android.location.ILocationManager: java.util.List getProviders(android.location.Criteria,boolean)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<android.view.IApplicationToken$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.settings.Settings$VpnSettingsActivity: void onResume()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<android.net.ConnectivityManager: void setNetworkPreference(int)>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.mms.ui.ComposeMessageActivity: void addCallAndContactMenuItems(android.view.ContextMenu,com.android.mms.ui.ComposeMessageActivity$MsgListMenuClickListener,com.android.mms.ui.MessageItem)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.ui.CropView$FaceHighlightView: void removeAllComponents()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.bluetooth.pbap.BluetoothPbapObexServer: int pullVcardEntry(byte[],com.android.bluetooth.pbap.BluetoothPbapObexServer$AppParamValue,javax.obex.Operation,java.lang.String,java.lang.String)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<android.server.BluetoothService: boolean cancelBondProcess(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<android.filterpacks.base.GLTextureTarget: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.media.IMediaScannerListener: void scanCompleted(java.lang.String,android.net.Uri)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.mms.ui.ComposeMessageActivity: boolean access$3000(com.android.mms.ui.ComposeMessageActivity,long)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.email.activity.ContactStatusLoader: com.android.email.activity.ContactStatusLoader$Result loadInBackground()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.ComposeMessageActivity$8: void onTextChanged(java.lang.CharSequence,int,int,int)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.settings.wifi.WifiSettingsForSetupWizardXL: void onBackButtonPressed()>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	
<com.android.internal.telephony.cdma.RuimPhoneBookInterfaceManager: boolean updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	
<com.android.browser.BrowserHistoryPage$ClearHistoryTask: void run()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.contacts.list.DefaultContactBrowseListFragment: void setSelectedContactUri(android.net.Uri)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.OtaUtils: void otaShowSuccessFailure()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void startDelayedRetry(com.android.internal.telephony.DataConnection$FailCause,com.android.internal.telephony.ApnContext,int)>	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	
<com.android.contacts.editor.ContactEditorFragment: void doSaveAction()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.camera.Camera: void initializeSecondTime()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<android.content.pm.IPackageManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.READ_EXTERNAL_STORAGE	android.permission.WRITE_SETTINGS	android.permission.GET_PACKAGE_SIZE	android.permission.CLEAR_APP_CACHE	
<com.android.camera.PanoramaActivity: void gotoGallery()>	android.permission.NFC	android.permission.VIBRATE	
<com.android.settings.accounts.AccountSyncSettings$1: void onClick(android.content.DialogInterface,int)>	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<android.filterpacks.imageproc.ImageEncoder: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.gallery3d.app.ManageCachePage$1: void removeOneComponent(com.android.gallery3d.ui.GLView)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.internal.policy.impl.KeyguardViewMediator: void keyguardDoneDrawing()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.contacts.activities.GroupDetailActivity: void onServiceCompleted(android.content.Intent)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.camera.ui.BasicSettingPopup: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.RECORD_AUDIO	
<com.android.browser.UrlInputView: void finishInput(java.lang.String,java.lang.String,java.lang.String)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.view.WindowManagerPolicy: int interceptMotionBeforeQueueingWhenScreenOff(int)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: void enter()>	android.permission.CHANGE_WIFI_STATE	android.permission.GET_TASKS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.server.am.ActivityManagerService: boolean attachApplicationLocked(android.app.IApplicationThread,int)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.gallery3d.data.LocalMergeAlbum: long reload()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.gallery3d.app.AbstractGalleryActivity: boolean onOptionsItemSelected(android.view.MenuItem)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.gallery3d.app.PhotoPage: void setContentPane(com.android.gallery3d.ui.GLView)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.list.ContactPickerFragment: void onLoadFinished(android.content.Loader,android.database.Cursor)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.Tab$2: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.contacts.list.ContactEntryListFragment: void onAttach(android.app.Activity)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.base.GLTextureTarget: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.browser.BrowserHistoryPage$3: void onClick(android.content.DialogInterface,int)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.browser.BrowserBookmarksPage$2: boolean onMenuItemClick(android.view.MenuItem)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.inputmethod.latin.LatinIME: void onConfigurationChanged(android.content.res.Configuration)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.net.wifi.IWifiManager$Stub$Proxy: android.os.Messenger getWifiServiceMessenger()>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	
<com.android.browser.DataController: void <init>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.phone.DTMFTwelveKeyDialer: boolean onKeyDown(int,android.view.KeyEvent)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.inputmethod.keyboard.PointerTracker: void onShowMoreKeysPanel(int,int,com.android.inputmethod.keyboard.PointerTracker$KeyEventHandler)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.common.widget.CompositeCursorAdapter: void bindView(android.view.View,int,android.database.Cursor,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.calendar.agenda.AgendaWindowAdapter: void doQuery(com.android.calendar.agenda.AgendaWindowAdapter$QuerySpec)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<android.media.effect.SingleFilterEffect: void apply(int,int,int,int)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.vcard.VCardParserImpl_V30: void parseOne(java.io.InputStream)>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.policy.impl.KeyguardViewMediator: void onUserSwitched(int)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.internal.policy.impl.AccountUnlockScreen$1: void run()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<android.net.IConnectivityManager: void setNetworkPreference(int)>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.gallery3d.ui.EdgeView: void render(com.android.gallery3d.ui.GLCanvas)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.mms.util.Recycler$MmsRecycler: void deleteOldMessagesInSameThreadAsMessage(android.content.Context,android.net.Uri)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.server.BatteryService: void access$000(com.android.server.BatteryService)>	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<com.android.settings.DeviceInfoSettings: void onCreate(android.os.Bundle)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.READ_PHONE_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.browser.view.PieMenu$PieView: void layout(int,int,boolean,float,int)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.filterpacks.base.FrameSource: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.internal.telephony.gsm.GsmSMSDispatcher: int dispatchMessage(com.android.internal.telephony.SmsMessageBase)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.inputmethod.latin.LatinIME: void restartSuggestionsOnWordBeforeCursorIfAtEndOfWord(android.view.inputmethod.InputConnection)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.calendar.month.MonthByWeekFragment: void onResume()>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.settings.widget.SettingsAppWidgetProvider$BluetoothStateTracker$1: java.lang.Object doInBackground(java.lang.Object[])>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.voicedialer.VoiceDialerActivity: void updateBluetoothParameters(boolean)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.gallery3d.data.FilterTypeSet: long reload()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.mms.transaction.Observer: void update(com.android.mms.transaction.Observable)>	android.permission.CHANGE_WIFI_STATE	android.permission.READ_SMS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SMS	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.RECEIVE_SMS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<android.filterpacks.text.StringLogger: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.browser.Controller: void <init>	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.vcard.ImportProcessor: boolean readOneVCard(java.io.InputStream,int,java.lang.String,com.android.vcard.VCardInterpreter,int[])>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.imageproc.CropRectFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.settings.bluetooth.DevicePickerFragment: void onDeviceAdded(com.android.settings.bluetooth.CachedBluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.browser.SuggestionsAdapter: void onClick(android.view.View)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.settings.bluetooth.DeviceProfilesSettings: void onDeviceAttributesChanged()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.internal.telephony.gsm.GsmServiceStateTracker: void revertToNitzTimeZone()>	android.permission.BROADCAST_STICKY	android.permission.SET_TIME_ZONE	
<com.android.providers.media.MediaProvider: android.os.ParcelFileDescriptor getThumb(com.android.providers.media.MediaProvider$DatabaseHelper,android.database.sqlite.SQLiteDatabase,java.lang.String,long,android.net.Uri)>	android.permission.READ_EXTERNAL_STORAGE	android.permission.WRITE_EXTERNAL_STORAGE	
<android.content.SyncManager: void maybeRescheduleSync(android.content.SyncResult,android.content.SyncOperation)>	android.permission.VIBRATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<com.android.mms.data.Conversation: android.net.Uri getUri(long)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.settings.bluetooth.BluetoothNameDialogFragment$3: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.phone.BluetoothHandsfree: void startDebug()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.phone.InCallScreen: boolean onKeyDown(int,android.view.KeyEvent)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.phone.BluetoothHandsfree$17: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.voicedialer.VoiceDialerActivity: void access$2200(com.android.voicedialer.VoiceDialerActivity,boolean)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.contacts.editor.SplitContactConfirmationDialogFragment$Listener: void onSplitContactConfirmed()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.app.PickerActivity: void onConfigurationChanged(android.content.res.Configuration)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.contacts.activities.ActionBarAdapter: void setCurrentTab(int)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.bluetooth.IBluetoothHeadset$Stub: boolean disconnectHeadsetInternal(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.server.am.BatteryStatsService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.BATTERY_STATS	android.permission.BLUETOOTH	
<com.android.settings.SettingsPreferenceFragment: void onStart()>	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.BLUETOOTH	
<android.location.LocationManager: void requestSingleUpdate(android.location.Criteria,android.app.PendingIntent)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.inputmethod.keyboard.PointerTracker$TimerProxy: void startLongPressTimer(int)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.exchange.adapter.CalendarSyncAdapter$EasCalendarSyncParser: void changeParser(com.android.exchange.adapter.CalendarSyncAdapter$CalendarOperations)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.contacts.editor.EventFieldEditorView: void clearAllFields()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.ContactsListActivity: android.net.Uri getSelectedUri(int)>	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	
<com.android.mms.data.WorkingMessage: boolean loadFromUri(android.net.Uri)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.nfc.handover.BluetoothHeadsetHandover: void startBonding()>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.server.BatteryService$1: void onUEvent(android.os.UEventObserver$UEvent)>	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<com.android.gallery3d.app.PickerActivity: void onPause()>	android.permission.NFC	android.permission.VIBRATE	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	android.permission.RECORD_AUDIO	
<com.android.email.activity.setup.AccountSettingsEditQuickResponsesFragment$QuickResponseFinder: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.InCallScreen: void access$400(com.android.phone.InCallScreen,android.os.AsyncResult)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.vcard.ImportProcessor: void onEntryCreated(com.android.vcard.VCardEntry)>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothHandsfree$11: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.development.Connectivity: void onCrash()>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.calendar.DayView: void doFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<android.provider.Contacts$Settings: void setSetting(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.calllog.CallLogNotificationsService: void onHandleIntent(android.content.Intent)>	android.permission.VIBRATE	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WRITE_CALL_LOG	android.permission.READ_CALL_LOG	
<com.android.phone.InCallScreen: com.android.phone.InCallScreen$SyncWithPhoneStateStatus syncWithPhoneState()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.settings.widget.SettingsAppWidgetProvider: android.widget.RemoteViews buildUpdate(android.content.Context)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.server.pm.PackageManagerService: void installNewPackageLI(android.content.pm.PackageParser$Package,int,int,java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.systemui.statusbar.phone.PhoneStatusBar: com.android.systemui.statusbar.phone.PhoneStatusBarView makeStatusBarView()>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.internal.telephony.ISms: boolean disableCellBroadcastRange(int,int)>	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.common.contacts.DataUsageStatUpdater: boolean update(java.util.Collection,java.util.Collection,java.lang.String)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.gadget.WidgetSource: void reload()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.settings.TetherSettings: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.email.activity.MessageListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.server.am.ActivityManagerService: void closeSystemDialogsLocked(int,java.lang.String)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.calendar.month.MonthByWeekFragment: void onCreate(android.os.Bundle)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.calendar.CalendarSettingsActivity: void onBuildHeaders(java.util.List)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.app.AbstractGalleryActivity: void onResume()>	android.permission.NFC	android.permission.VIBRATE	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	android.permission.RECORD_AUDIO	
<com.android.exchange.CalendarSyncAdapterService$SyncAdapterImpl: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>	android.permission.VIBRATE	android.permission.READ_CALENDAR	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.keyboard.SuddenJumpingTouchEventHandler: boolean onTouchEvent(android.view.MotionEvent)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.server.am.ActivityManagerService$ServiceRestarter: void run()>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.internal.telephony.ISms$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.internal.policy.impl.PasswordUnlockScreen: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.gallery3d.ui.ImportCompleteListener: void onProgressComplete(int)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.mms.ui.MmsThumbnailPresenter$1: void onItemLoaded(com.android.mms.util.ThumbnailManager$ImageLoaded,java.lang.Throwable)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.latin.SynchronouslyLoadedUserDictionary: void getBigrams(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.net.wifi.p2p.IWifiP2pManager$Stub: android.os.Messenger getMessenger()>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	
<com.android.settings.SettingsSafetyLegalActivity: void onCreate(android.os.Bundle)>	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.BLUETOOTH	
<com.android.phone.SipBroadcastReceiver$1: void run()>	android.permission.USE_SIP	android.permission.WAKE_LOCK	
<com.android.mms.ui.ComposeMessageActivity: void onStop()>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<android.content.SyncManager: void access$700(android.content.SyncManager,android.content.Intent)>	android.permission.VIBRATE	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.contacts.list.LegacyContactListAdapter: android.net.Uri getContactUri(int,android.database.Cursor,int,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.calendar.DayView: boolean onTouchEvent(android.view.MotionEvent)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<android.bluetooth.BluetoothDevice: boolean cancelBondProcess()>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<android.server.BluetoothService: void pairingAttempt(java.lang.String,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.gallery3d.ui.CropView$FaceHighlightView: boolean removeComponent(com.android.gallery3d.ui.GLView)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.ContactsActivity: android.app.Dialog onCreateDialog(int,android.os.Bundle)>	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.exchange.EasSyncService: boolean setupService()>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.app.ActivityState: void onCreate(android.os.Bundle,android.os.Bundle)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.calendar.SearchActivity: void onNewIntent(android.content.Intent)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.contacts.calllog.DefaultVoicemailNotifier$NewCallsQuery: com.android.contacts.calllog.DefaultVoicemailNotifier$NewCall[] query()>	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<android.provider.ContactsContract$Directory: void notifyDirectoryChange(android.content.ContentResolver)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.pm.ShutdownThread: void beginShutdownSequence(android.content.Context)>	android.permission.VIBRATE	android.permission.MOUNT_UNMOUNT_FILESYSTEMS	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.email.activity.MessageViewFragmentBase$ReloadMessageTask: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.server.BluetoothEventLoop: void onAgentAuthorize(java.lang.String,java.lang.String,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.browser.SnapshotTab: void restoreState(android.os.Bundle)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.mms.transaction.ReadRecTransaction: void notifyObservers()>	android.permission.CHANGE_WIFI_STATE	android.permission.READ_SMS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SMS	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.RECEIVE_SMS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.gallery3d.app.ActivityState: void resume()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.server.am.ActivityRecord$Token: void windowsVisible()>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.browser.OpenDownloadReceiver: void access$000(com.android.browser.OpenDownloadReceiver,android.content.Context,long)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.contacts.vcard.ImportVCardActivity: void onResume()>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.ContactBrowseListFragment: void setQueryString(java.lang.String,boolean)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.bluetooth.BluetoothAdapter: void setDiscoverableTimeout(int)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<android.net.wifi.WifiApConfigStore$ActiveState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.contacts.activities.PeopleActivity: void onServiceCompleted(android.content.Intent)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.activities.TransactionSafeActivity: android.app.Dialog onCreateDialog(int,android.os.Bundle)>	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.calendar.alerts.AlertService: boolean updateAlertNotification(android.content.Context)>	android.permission.VIBRATE	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.inputmethod.keyboard.PointerTracker: void onMoveEvent(int,int,long)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.exchange.adapter.ContactsSyncAdapter$EasContactsSyncParser: void deleteParser(com.android.exchange.adapter.ContactsSyncAdapter$ContactOperations)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.camera.ui.InLineSettingRestore: boolean changeIndex(int)>	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.RECORD_AUDIO	
<com.android.contacts.detail.ContactLoaderFragment: android.net.Uri getPreAuthorizedUri(android.net.Uri)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.bluetooth.BluetoothEventManager$AdapterStateChangedHandler: void onReceive(android.content.Context,android.content.Intent,android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.gallery3d.app.AlbumPicker: boolean onOptionsItemSelected(android.view.MenuItem)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.gallery3d.app.PhotoPage$1: boolean dispatchTouchEvent(android.view.MotionEvent)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.email.activity.MessageViewFragmentBase$UpdatePreviewIconTask: void callOnPostExecuteForTest(java.lang.Object)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.calllog.DefaultVoicemailNotifier$DefaultNewCallsQuery: com.android.contacts.calllog.DefaultVoicemailNotifier$NewCall[] query()>	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.phone.MobileNetworkSettings$MyHandler: void handleSetPreferredNetworkTypeResponse(android.os.Message)>	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.contacts.list.ContactListAdapter: void bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.ContactsUtils: boolean areGroupWritableAccountsAvailable(android.content.Context)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.data.FilterDeleteSet: long reload()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.mms.ui.ComposeMessageActivity: void addAttachment(java.lang.String,android.net.Uri,boolean)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothHandsfree$13: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.internal.telephony.ITelephonyRegistry: void listen(java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)>	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	
<com.android.phone.NotificationMgr: void updateNotificationsAtStartup()>	android.permission.VIBRATE	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.gallery3d.ui.UndoBarView: void renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.phone.CallCard: void updateRingingCall(com.android.internal.telephony.CallManager)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.browser.UrlHandler: boolean startActivityForUrl(com.android.browser.Tab,java.lang.String)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.nfc.NfcService$NfcAdapterService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.NFC	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.mms.data.Contact$ContactsCache: com.android.mms.data.Contact getContactInfoForEmailAddress(java.lang.String)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.calendar.event.EditEventHelper: boolean saveReminders(java.util.ArrayList,long,java.util.ArrayList,java.util.ArrayList,boolean)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean connect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.mms.transaction.SmsSingleRecipientSender: boolean sendMessage(long)>	android.permission.READ_SMS	android.permission.SEND_SMS	
<android.provider.CallLog$Calls: android.net.Uri addCall(com.android.internal.telephony.CallerInfo,android.content.Context,java.lang.String,int,int,long,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WRITE_CALL_LOG	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.activities.AttachPhotoActivity: void onStart()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.PhoneInterfaceManager: void silenceRingerInternal()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<com.android.gallery3d.app.Gallery: void onPause()>	android.permission.NFC	android.permission.VIBRATE	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	android.permission.RECORD_AUDIO	
<com.android.internal.widget.SlidingTab: boolean onInterceptTouchEvent(android.view.MotionEvent)>	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.settings.TetherSettings: void startProvisioningIfNecessary(int)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<android.net.NetworkStateTracker: boolean teardown()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.internal.telephony.gsm.GsmServiceStateTracker: void access$100(com.android.internal.telephony.gsm.GsmServiceStateTracker)>	android.permission.BROADCAST_STICKY	android.permission.SET_TIME_ZONE	
<com.android.internal.policy.impl.KeyguardViewManager: boolean wakeWhenReadyTq(int)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<android.filterpacks.videosink.MediaEncoderFilter: void updateMediaRecorderParams()>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.gallery3d.data.FilterTypeSet: void updateData()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.camera.VideoCamera: void access$1000(com.android.camera.VideoCamera)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.settings.DockSettings: void onActivityCreated(android.os.Bundle)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.ClassZeroActivity: void access$200(com.android.mms.ui.ClassZeroActivity)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<android.net.wifi.SupplicantStateTracker$ScanState: boolean processMessage(android.os.Message)>	android.permission.CHANGE_WIFI_STATE	android.permission.GET_TASKS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.INTERNET	android.permission.BROADCAST_STICKY	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAccountsByTypeAndFeatures(java.lang.String,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)>	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.server.wm.WindowManagerService$WMThread: void run()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	android.permission.GET_ACCOUNTS	
<com.android.providers.calendar.CalendarReceiver: void removeScheduledAlarms(android.content.ContentResolver)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<android.net.IConnectivityManager$Stub$Proxy: boolean setRadios(boolean)>	android.permission.CHANGE_WIFI_STATE	android.permission.CHANGE_NETWORK_STATE	
<com.android.server.WifiService: void checkAndStartWifi()>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	
<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: void enforceReceiveAndSend(java.lang.String)>	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<android.bluetooth.BluetoothDeviceProfileState$OutgoingHid: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<android.content.AbstractThreadedSyncAdapter$ISyncAdapterImpl: void initialize(android.accounts.Account,java.lang.String)>	android.permission.WRITE_SYNC_SETTINGS	android.permission.READ_SYNC_SETTINGS	
<com.android.email.Controller: void sendMessage(com.android.emailcommon.provider.EmailContent$Message)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.vcard.VCardParserImpl_V30: boolean parseItem()>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.SnapshotTab: void setController(com.android.browser.WebViewController)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.filterpacks.imageproc.GrainFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.browser.SnapshotTab: void onNewPicture(android.webkit.WebView,android.graphics.Picture)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.mms.ui.SlideshowActivity: void onCreate(android.os.Bundle)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<android.filterpacks.videosrc.CameraSource: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.settings.bluetooth.BluetoothEnabler: void setSwitch(android.widget.Switch)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.phone.PhoneInterfaceManager: void access$000(com.android.phone.PhoneInterfaceManager)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.phone.InCallScreen: void openDialpadInternal(boolean)>	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.providers.downloads.DownloadInfo: void sendIntentIfRequested()>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.server.ConnectivityService: void enforcePreference()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.server.WifiService: void setFrequencyBand(int,boolean)>	android.permission.CHANGE_WIFI_STATE	android.permission.WRITE_SETTINGS	
<com.android.settings.net.DataUsageMeteredSettings: void onCreate(android.os.Bundle)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.READ_PHONE_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.contacts.editor.LabeledEditorView: void notifyEditorListener()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.latin.SynchronouslyLoadedUserDictionary: void loadDictionary()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: boolean saveRingtone(long)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.settings.bluetooth.DeviceListPreferenceFragment: void onResume()>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_USER_DICTIONARY	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.activities.PeopleActivity: void configureFragments(boolean)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.server.BluetoothEventLoop: void onDeviceRemoved(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: boolean access$2900(android.net.wifi.p2p.WifiP2pService$P2pStateMachine,java.lang.String)>	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	
<com.android.inputmethod.latin.Suggest: com.android.inputmethod.latin.SuggestedWords getSuggestedWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.keyboard.ProximityInfo,int)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.settings.Settings$AdvancedWifiSettingsActivity: void onResume()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.mms.ui.ComposeMessageActivity: void access$2700(com.android.mms.ui.ComposeMessageActivity,android.view.ContextMenu,com.android.mms.ui.ComposeMessageActivity$MsgListMenuClickListener,com.android.mms.ui.MessageItem)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.inputmethod.KeyboardLayoutPickerFragment: void onCreate(android.os.Bundle)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.READ_PHONE_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy: java.util.List getAdnRecordsInEf(int)>	android.permission.READ_CONTACTS	android.permission.WAKE_LOCK	
<android.filterpacks.imageproc.CrossProcessFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.filterpacks.imageproc.BlackWhiteFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.camera.ui.EffectSettingPopup$Listener: void onSettingChanged()>	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.RECORD_AUDIO	
<com.android.inputmethod.latin.ContactsDictionary: void loadDictionary()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.browser.AutofillHandler$LoadFromDb: void run()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.exchange.adapter.ContactsSyncAdapter$EasContactsSyncParser: void commit()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.telephony.gsm.SimSmsInterfaceManager: void enforceReceiveAndSend(java.lang.String)>	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.mms.ui.ManageSimMessages: void access$000(com.android.mms.ui.ManageSimMessages)>	android.permission.READ_SMS	android.permission.RECEIVE_SMS	
<com.android.browser.Tab: void <init>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.contacts.activities.PhotoSelectionActivity: void displayPhoto()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.vcard.VCardEntry$PostalData: void constructInsertOperation(java.util.List,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.model.AccountWithDataSet: boolean hasData(android.content.Context)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.filterpacks.imageproc.DrawOverlayFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.settings.bluetooth.DevicePickerFragment: void onActivityCreated(android.os.Bundle)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.MessageItem: void <init>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.TabControl: void saveState(android.os.Bundle)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.calendar.SearchActivity: void onCreate(android.os.Bundle)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.exchange.ExchangeService: void waitForConnectivity()>	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<android.content.ContentService: void <init>	android.permission.VIBRATE	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<android.filterpacks.imageproc.ResizeFilter: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.internal.policy.impl.PatternUnlockScreen$2: void onClick(android.view.View)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<android.app.ActivityManagerNative: void killApplicationWithUid(java.lang.String,int)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.email.service.AttachmentDownloadService: void watchdogAlarm()>	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.RadioInfo: void onResume()>	android.permission.ACCESS_FINE_LOCATION	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	
<com.android.internal.policy.impl.KeyguardViewMediator: void keyguardDone(boolean)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.emailcommon.service.EmailServiceProxy$1: void run()>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.Settings$LocalePickerActivity: void onResume()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<android.media.AudioService$ScoClient: void clearCount(boolean)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<com.android.mms.util.Recycler: void deleteMessagesForThread(android.content.Context,long,int)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<android.net.IConnectivityManager: int untether(java.lang.String)>	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.phone.BluetoothHandsfree: boolean initiateScoUsingVirtualVoiceCall()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.settings.deviceinfo.UsbSettings: void onResume()>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_USER_DICTIONARY	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.phone.sip.SipSettings$2$1: void run()>	android.permission.WRITE_SETTINGS	android.permission.USE_SIP	
<com.android.internal.widget.multiwaveview.GlowPadView: boolean trySwitchToFirstTouchState(float,float)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.USE_CREDENTIALS	android.permission.READ_CONTACTS	android.permission.MANAGE_ACCOUNTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.group.GroupEditorFragment$2: android.content.CursorLoader onCreateLoader(int,android.os.Bundle)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.location.LocationManager: void requestSingleUpdate(java.lang.String,android.app.PendingIntent)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<android.preference.VolumePreference$SeekBarVolumizer: void <init>	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.phone.EmergencyCallHelper: void startSequenceInternal(android.os.Message)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.mms.transaction.TransactionService$ConnectivityBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>	android.permission.CHANGE_WIFI_STATE	android.permission.READ_SMS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SMS	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.RECEIVE_SMS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.contacts.list.ContactPickerFragment: void onAttach(android.app.Activity)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.bluetooth.pbap.BluetoothPbapVcardManager: int getCallHistorySize(int)>	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.browser.BrowserBookmarksPage$OpenAllInTabsTask: android.database.Cursor doInBackground(java.lang.Void[])>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.inputmethod.latin.WhitelistDictionary: void startDictionaryLoadingTaskLocked()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.providers.contacts.ContactsProvider2: int updateInTransaction(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.am.ActivityManagerService: void sendServiceArgsLocked(com.android.server.am.ServiceRecord,boolean)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<android.bluetooth.IBluetooth: boolean createBond(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.KeyguardViewManager: void show()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.camera.EffectsRecorder$EffectsListener: void onEffectsUpdate(int,int)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.server.BackupManagerService$PerformFullRestoreTask: void run()>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.phone.BluetoothHandsfree$5: android.bluetooth.AtCommandResult handleActionCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.BLUETOOTH	
<com.android.phone.PhoneUtils: boolean hangupRingingAndActive(com.android.internal.telephony.Phone)>	android.permission.VIBRATE	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	
<com.android.camera.VideoCamera: void onPreviewTextureCopied()>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.settings.wifi.WifiSettings: void onResume()>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_USER_DICTIONARY	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<android.filterpacks.imageproc.BitmapSource: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.internal.policy.impl.LockPatternKeyguardView: void show()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.inputmethod.latin.DictionaryCollection: boolean isValidWord(java.lang.CharSequence)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.model.EntityDeltaList: void buildSplitContactDiff(java.util.ArrayList,int[])>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.keyboard.LatinKeyboardView$KeyTimerHandler: void startKeyRepeatTimer(com.android.inputmethod.keyboard.PointerTracker)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.emailcommon.service.IEmailService$Stub: void updateFolderList(long)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.group.GroupEditorFragment$3: android.content.Loader onCreateLoader(int,android.os.Bundle)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.calendar.agenda.AgendaFragment: void onResume()>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.camera.VideoCamera: void onConfigurationChanged(android.content.res.Configuration)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.browser.SnapshotTab: void postCapture()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.email.activity.setup.AccountCheckSettingsFragment$AccountCheckTask: com.android.emailcommon.mail.MessagingException doInBackground(java.lang.Void[])>	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	
<android.widget.QuickContactBadge: void assignContactFromEmail(java.lang.String,boolean)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.settings.DisplaySettings: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>	android.permission.WRITE_SETTINGS	android.permission.CHANGE_CONFIGURATION	
<com.android.contacts.calllog.CallLogAdapter$CallFetcher: void fetchCalls()>	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean startVoiceRecognition(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.contacts.list.CustomContactListFilterActivity$CustomFilterConfigurationLoader: java.lang.Object loadInBackground()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.SecuritySettings: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.camera.VideoCamera: void onShutterButtonClick()>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler$PhotoListener: void onRemovePictureChosen()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothAtPhonebook$3: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.deskclock.AlarmAlert: void access$000(com.android.deskclock.AlarmAlertFullScreen)>	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	
<android.bluetooth.BluetoothHeadset: boolean startScoUsingVirtualVoiceCall(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.voicedialer.VoiceDialerActivity$1: void onServiceConnected(int,android.bluetooth.BluetoothProfile)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.email.activity.MessageViewFragment: void onOpenAttachment(com.android.email.activity.MessageViewFragmentBase$MessageViewAttachmentInfo)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.internal.policy.impl.KeyguardViewMediator: void access$1700(com.android.internal.policy.impl.KeyguardViewMediator,com.android.internal.policy.impl.KeyguardViewManager$ShowListener)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.calendar.agenda.AgendaWindowAdapter: void access$2400(com.android.calendar.agenda.AgendaWindowAdapter,com.android.calendar.agenda.AgendaWindowAdapter$QuerySpec)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.browser.AddBookmarkPage: long addFolderToCurrent(java.lang.String)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.contacts.list.DefaultContactBrowseListFragment: void setQueryString(java.lang.String,boolean)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.telephony.SmsManager: boolean deleteMessageFromIcc(int)>	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.contacts.activities.ShowOrCreateActivity: void onResume()>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.util.Recycler$MmsRecycler: void deleteOldMessages(android.content.Context)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.server.BackupManagerService$BackupRestoreTask: void execute()>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.calendar.SearchActivity: boolean onOptionsItemSelected(android.view.MenuItem)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.browser.PhoneUi: void toggleNavScreen()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.camera.CameraScreenNail$Listener: void onPreviewTextureCopied()>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.contacts.list.AccountFilterActivity: java.util.List access$100(android.content.Context)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.email.MessagingController: void synchronizeMailboxSynchronous(com.android.emailcommon.provider.Account,com.android.emailcommon.provider.Mailbox)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: int access$3900(com.android.mms.ui.ComposeMessageActivity,long,boolean)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<android.media.IAudioService$Stub$Proxy: void startBluetoothSco(android.os.IBinder)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask$1$1: void onResult(android.os.Bundle)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.gallery3d.ui.UndoBarView: void removeOneComponent(com.android.gallery3d.ui.GLView)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.list.ContactListFilterControllerImpl: void selectCustomFilter()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.widget.SlidingTab: void onVisibilityChanged(android.view.View,int)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.exchange.ExchangeService$2: android.os.Bundle validate(com.android.emailcommon.provider.HostAuth)>	android.permission.READ_CALENDAR	android.permission.WAKE_LOCK	
<com.android.contacts.interactions.ImportExportDialogFragment: void doShareVisibleContacts()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.settings.widget.SettingsAppWidgetProvider$SyncStateTracker: void toggleState(android.content.Context)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.editor.ContactEditorFragment: void access$300(com.android.contacts.editor.ContactEditorFragment,android.content.Context,com.android.contacts.editor.RawContactEditorView)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.TetherSettings$TetherChangeReceiver: void onReceive(android.content.Context,android.content.Intent)>	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.mms.ui.QuickContactDivot: void onClick(android.view.View)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.bluetooth.IBluetooth$Stub: boolean createBond(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.server.UiModeManagerService: void systemReady()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<android.net.wifi.WifiStateMachine$DriverLoadingState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<android.util.Log$1: void onTerribleFailure(java.lang.String,android.util.Log$TerribleFailure)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.contacts.list.ContactEntryListFragment: void setQueryString(java.lang.String,boolean)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.bluetooth.BluetoothDeviceProfileState$OutgoingHandsfree: void enter()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.bluetooth.opp.BluetoothOppTransfer: void startConnectSession()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.vcard.VCardParser_V21: void parse(java.io.InputStream,com.android.vcard.VCardInterpreter)>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.app.backup.IBackupManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.gallery3d.app.DialogPicker: void onResume()>	android.permission.NFC	android.permission.VIBRATE	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	android.permission.RECORD_AUDIO	
<com.android.contacts.list.LegacyContactListAdapter: void bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.location.ILocationManager: android.location.Location getLastKnownLocation(java.lang.String)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.contacts.editor.LabeledEditorView: void onTypeSelectionChange(int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.bluetooth.IBluetoothHeadset: boolean connect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.internal.widget.LockPatternView: void handleActionMove(android.view.MotionEvent)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.browser.Controller: void onReceivedTitle(com.android.browser.Tab,java.lang.String)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.calendar.alerts.AlertService: void dismissOldAlerts(android.content.Context)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<android.media.AudioService: void clearAllScoClients(int,boolean)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<com.android.phone.BluetoothHandsfree$13: android.bluetooth.AtCommandResult handleActionCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.calendar.alerts.AlertActivity: void onClick(android.view.View)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.settings.inputmethod.SpellCheckersSettings: void onResume()>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_USER_DICTIONARY	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.server.BackupManagerService$PerformBackupTask: void invokeNextAgent()>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<android.telephony.TelephonyManager: android.telephony.CellLocation getCellLocation()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.server.wm.Session: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.SYSTEM_ALERT_WINDOW	android.permission.WAKE_LOCK	
<com.android.emailcommon.service.IEmailServiceCallback: void syncMailboxListStatus(long,int,int)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.wifi.WifiSettings: void onActivityCreated(android.os.Bundle)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.detail.ContactDetailFragment: void setData(android.net.Uri,com.android.contacts.ContactLoader$Result)>	android.permission.READ_PHONE_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.providers.contacts.ContactsProvider2: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.content.SyncManager$ActiveSyncContext: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>	android.permission.VIBRATE	android.permission.WRITE_SYNC_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.wifi.AdvancedWifiSettings: void initPreferences()>	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.widget.IndexerListAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.ui.GestureRecognizer$MyGestureListener: boolean onSingleTapUp(android.view.MotionEvent)>	android.permission.NFC	android.permission.VIBRATE	
<com.android.contacts.list.ContactEntryListFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.exchange.ExchangeService: void serviceRequest(long,long,int)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.email.RefreshManager$SendPendingMessagesForAllAccountsImpl: void performAction(long)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.READ_SYNC_SETTINGS	
<android.app.ActivityManagerNative: void goingToSleep()>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.internal.widget.multiwaveview.GlowPadView: void handleCancel(android.view.MotionEvent)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.USE_CREDENTIALS	android.permission.READ_CONTACTS	android.permission.MANAGE_ACCOUNTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<android.net.INetworkPolicyManager$Stub$Proxy: boolean isNetworkMetered(android.net.NetworkState)>	android.permission.ACCESS_WIFI_STATE	android.permission.READ_PHONE_STATE	
<android.view.WindowManagerPolicy: android.view.KeyEvent dispatchUnhandledKey(android.view.WindowManagerPolicy$WindowState,android.view.KeyEvent,int)>	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.CALL_PHONE	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.settings.bluetooth.BluetoothPermissionRequest: void onReceive(android.content.Context,android.content.Intent)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.UserDictionary: boolean reloadDictionaryIfRequired()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.location.ILocationManager$Stub: android.location.Location getLastKnownLocation(java.lang.String)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.settings.bluetooth.HeadsetProfile: boolean connect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<android.bluetooth.BluetoothDeviceProfileState$IncomingHandsfree: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void addImage(android.net.Uri,boolean)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.CallCard: void updateState(com.android.internal.telephony.CallManager)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<android.bluetooth.BluetoothHeadset: boolean startVoiceRecognition(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.server.VibratorService: void updateInputDeviceVibrators()>	android.permission.VIBRATE	android.permission.WAKE_LOCK	
<com.android.contacts.editor.ContactEditorFragment: void createContact()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.providers.contacts.LegacyApiSupport: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.Controller: com.android.browser.Tab openTabToHomePage()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.nfc.NfcService$NfcAdapterService: boolean disableNdefPush()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.BLUETOOTH	
<com.android.contacts.editor.ContactEditorFragment: void createContact(com.android.contacts.model.AccountWithDataSet)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.NavScreen: void close(int)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.location.LocationManager: void requestSingleUpdate(java.lang.String,android.location.LocationListener,android.os.Looper)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<android.media.IMediaScannerListener$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.mms.util.Recycler$SmsRecycler: void deleteMessagesForThread(android.content.Context,long,int)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.settings.DataUsageSummary: void access$500(com.android.settings.DataUsageSummary,boolean)>	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.phone.InCallTouchUi: boolean onMenuItemClick(android.view.MenuItem)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.server.connectivity.Tethering$TetherMasterSM$InitialState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.contacts.list.ContactPickerFragment: void prepareEmptyView()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	
<com.android.inputmethod.keyboard.MoreKeysKeyboardView$1: void onTextInput(java.lang.CharSequence)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.provider.UserDictionary$Words: void addWord(android.content.Context,java.lang.String,int,int)>	android.permission.READ_USER_DICTIONARY	android.permission.WRITE_USER_DICTIONARY	
<com.android.camera.VideoCamera: void keepScreenOnAwhile()>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.internal.policy.impl.LockScreen$WaveViewMethods: void onGrabbedStateChange(android.view.View,int)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.contacts.list.DefaultContactBrowseListFragment: void setSelectedContactUri(android.net.Uri,boolean,boolean,boolean,boolean)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.nfc.DeviceHost$DeviceHostListener: void onLlcpLinkDeactivated(com.android.nfc.DeviceHost$NfcDepEndpoint)>	android.permission.GET_TASKS	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<android.accounts.AccountManager$BaseFutureTask: void startTask()>	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.calendar.alerts.AlertService: int processQuery(android.database.Cursor,android.content.Context,long,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.contacts.activities.TransactionSafeActivity: boolean onSearchRequested()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.latin.LatinIME: void restartSuggestionsOnWordBeforeCursor(android.view.inputmethod.InputConnection,java.lang.CharSequence)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.phone.BluetoothHandsfree$26: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.server.DeviceStorageMonitorService: void access$000(com.android.server.DeviceStorageMonitorService,boolean)>	android.permission.VIBRATE	android.permission.BROADCAST_STICKY	android.permission.CLEAR_APP_CACHE	
<com.android.browser.BrowserBackupAgent: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.server.BluetoothService: boolean createBond(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<android.accounts.AccountManager$4: void startTask()>	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.calendar.DayView: void updateTitle()>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.nfc.handover.BluetoothOppHandover: void start()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.internal.widget.SlidingTab: void setGrabbedState(int)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.nfc.NfcService$EnableDisableTask: void executeEeWipe()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.BLUETOOTH	
<com.android.internal.widget.LockPatternView$OnPatternListener: void onPatternCellAdded(java.util.List)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.camera.ui.InLineSettingKnob$1: void run()>	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.RECORD_AUDIO	
<com.android.server.BatteryService$2: void onUEvent(android.os.UEventObserver$UEvent)>	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<com.android.gallery3d.ui.GLRoot: void setContentPane(com.android.gallery3d.ui.GLView)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.nfc.nxp.NativeNfcManager: void notifySeApduReceived(byte[])>	android.permission.GET_TASKS	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<android.bluetooth.IBluetooth$Stub$Proxy: void setBluetoothTethering(boolean)>	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.settings.bluetooth.DeviceListPreferenceFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.providers.media.MediaProvider: android.os.ParcelFileDescriptor openFileAndEnforcePathPermissionsHelper(android.net.Uri,java.lang.String)>	android.permission.READ_EXTERNAL_STORAGE	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.internal.policy.impl.LockPatternKeyguardView$3: void goToUnlockScreen()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<android.net.wifi.WifiApConfigStore$DefaultState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.server.am.ActivityManagerService: void killBackgroundProcesses(java.lang.String)>	android.permission.KILL_BACKGROUND_PROCESSES	android.permission.RESTART_PACKAGES	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void onConfigurationChanged(android.content.res.Configuration)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.policy.impl.KeyguardViewCallback: void pokeWakelock()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState: boolean turnOnUpstreamMobileConnection(int)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.browser.UrlHandler$RLZTask: void onPostExecute(java.lang.String)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.location.ILocationManager$Stub$Proxy: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_LOCATION_EXTRA_COMMANDS	
<com.android.settings.DataUsageSummary: boolean isMobilePolicySplit()>	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.settings.DataUsageSummary: boolean onOptionsItemSelected(android.view.MenuItem)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	
<com.android.internal.widget.LockScreenWidgetCallback: void userActivity(android.view.View)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void restartRadio()>	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	
<com.android.inputmethod.latin.Suggest: com.android.inputmethod.latin.SuggestedWords getBigramPredictions(java.lang.CharSequence)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.exchange.adapter.AttachmentLoader: void readChunked(java.io.InputStream,java.io.OutputStream,int)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.server.connectivity.Tethering$TetherMasterSM$ErrorState: void enter()>	android.permission.CHANGE_WIFI_STATE	android.permission.GET_TASKS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.browser.BrowserBookmarksPage: boolean handleContextItem(int,int,int)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.phone.InCallScreen: void handleOnscreenButtonClick(int)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.LockPatternKeyguardView$3: void forgotPattern(boolean)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.emailcommon.service.EmailServiceProxy$10: void run()>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.emailcommon.utility.EmailAsyncTask: void onSuccess(java.lang.Object)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.activities.GroupEditorActivity$1: void onClick(android.view.View)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.BrowserHistoryPage: boolean onContextItemSelected(android.view.MenuItem)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.mms.transaction.Transaction: byte[] sendPdu(long,byte[])>	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	
<com.android.server.am.ActivityManagerService: boolean killPackageProcessesLocked(java.lang.String,int,int,boolean,boolean,boolean,boolean,java.lang.String)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.phone.BluetoothHandsfree$25: android.bluetooth.AtCommandResult handleActionCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.mms.ui.ComposeMessageActivity: void editMmsMessageItem(com.android.mms.ui.MessageItem)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.READ_SYNC_SETTINGS	
<android.bluetooth.IBluetoothHeadset$Stub: boolean connectHeadsetInternal(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.camera.VideoCamera: boolean updateEffectSelection()>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.phone.OutgoingCallBroadcaster: void onCreate(android.os.Bundle)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WRITE_SETTINGS	android.permission.PROCESS_OUTGOING_CALLS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.providers.media.MediaProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>	android.permission.READ_EXTERNAL_STORAGE	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.mms.ui.ComposeMessageActivity: void access$5600(com.android.mms.ui.ComposeMessageActivity,android.net.Uri,boolean)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.latin.LatinIME: void launchSettings()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.activities.GroupEditorActivity: void onNewIntent(android.content.Intent)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.editor.ContactEditorFragment: void bindEditors()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.InCallScreen: void access$1300(com.android.phone.InCallScreen)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.BLUETOOTH	
<com.android.exchange.adapter.EmailSyncAdapter: java.lang.String getSyncKey()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.email.service.AttachmentDownloadService$DownloadSet: void onWatchdogAlarm()>	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.telephony.IccSmsInterfaceManagerProxy: boolean enableCellBroadcastRange(int,int)>	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.contacts.group.GroupDetailFragment$2: void onLoadFinished(android.content.Loader,android.database.Cursor)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.ComposeMessageActivity: void onStart()>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.gallery3d.ui.EdgeView: boolean dispatchTouchEvent(android.view.MotionEvent)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<android.filterpacks.videoproc.BackDropperFilter: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.contacts.util.NotifyingAsyncQueryHandler$AsyncQueryListener: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.am.ActivityManagerService: void updateConfiguration(android.content.res.Configuration)>	android.permission.CHANGE_CONFIGURATION	android.permission.WAKE_LOCK	
<com.android.mms.ui.ComposeMessageActivity: void access$5000(com.android.mms.ui.ComposeMessageActivity)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<android.net.IConnectivityManager: boolean setRadio(int,boolean)>	android.permission.CHANGE_WIFI_STATE	android.permission.CHANGE_NETWORK_STATE	
<com.android.browser.Bookmarks$1: java.lang.Object doInBackground(java.lang.Object[])>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.bluetooth.pbap.BluetoothPbapVcardManager: int composeAndSendPhonebookVcards(javax.obex.Operation,int,int,boolean,java.lang.String)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.contacts.activities.ContactSelectionActivity: void onCreate(android.os.Bundle)>	android.permission.NFC	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.media.AudioService$ScoClient: void decCount()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<com.android.server.am.ActivityManagerService: void finishBooting()>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.server.ServerThread: void run()>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.BROADCAST_STICKY	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	android.permission.WRITE_SETTINGS	android.permission.CHANGE_CONFIGURATION	android.permission.CLEAR_APP_CACHE	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.SET_TIME_ZONE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.mms.ui.ComposeMessageActivity: void onMaxPendingMessagesReached()>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.settings.bluetooth.HeadsetProfile: boolean isPreferred(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.contacts.model.EntityDeltaList: com.android.contacts.model.EntityDelta getFirstWritableRawContact(android.content.Context)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.location.ILocationManager: void requestLocationUpdatesPI(java.lang.String,android.location.Criteria,long,float,boolean,android.app.PendingIntent)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	
<com.android.phone.PhoneApp$PhoneAppBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.settings.bluetooth.DeviceProfilesSettings: android.preference.CheckBoxPreference createProfilePreference(com.android.settings.bluetooth.LocalBluetoothProfile)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.email.service.EasAuthenticatorService$EasAuthenticator: android.os.Bundle addAccount(android.accounts.AccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>	android.permission.WRITE_SYNC_SETTINGS	android.permission.AUTHENTICATE_ACCOUNTS	
<com.android.systemui.statusbar.phone.PhoneStatusBar: void start()>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary: void <init>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.phone.InCallScreen: void onDestroy()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.providers.downloads.DownloadThread: void checkConnectivity()>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	android.permission.ACCESS_NETWORK_STATE	
<com.android.vcard.VCardParserImpl_V40: boolean parseOneVCard()>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.exchange.adapter.Search: int searchMessages(android.content.Context,long,com.android.emailcommon.service.SearchParams,long)>	android.permission.VIBRATE	android.permission.READ_CALENDAR	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.email.activity.setup.AccountSetupNames$2: java.lang.Object doInBackground(java.lang.Object[])>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.keyboard.PointerTracker: void onPhantomUpEvent(int,int,long)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.bluetooth.IBluetoothHeadset: boolean acceptIncomingConnect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<android.server.BluetoothAdapterStateMachine$BluetoothOn: boolean processMessage(android.os.Message)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.ContactsDictionary: void <init>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.phone.BluetoothHandsfree$BluetoothPhoneState: void <init>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.nfc.NfcService: void onRemoteFieldActivated()>	android.permission.GET_TASKS	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.settings.accounts.ManageAccountsSettings: void onCreate(android.os.Bundle)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.READ_PHONE_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.contacts.list.DefaultContactBrowseListFragment: boolean isSyncActive()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pNotSupportedState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.settings.widget.SettingsAppWidgetProvider$WifiStateTracker: void toggleState(android.content.Context)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void revertToNitzTimeZone()>	android.permission.BROADCAST_STICKY	android.permission.SET_TIME_ZONE	
<com.android.settings.widget.SettingsAppWidgetProvider$SyncStateTracker$1: void onPostExecute(java.lang.Boolean)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.phone.PhoneUtils$4: void onQueryComplete(int,java.lang.Object,com.android.internal.telephony.CallerInfo)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	
<com.android.settings.DisplaySettings: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.contacts.list.ContactBrowseListFragment: void setSelectedContactUri(android.net.Uri)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.exchange.adapter.ItemOperationsParser: void parseProperties()>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.email.service.AccountService$1: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.VIBRATE	android.permission.MANAGE_ACCOUNTS	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: boolean updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	
<com.android.phone.PhoneApp: void clearInCallScreenMode()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.phone.BluetoothHandsfree$19: android.bluetooth.AtCommandResult handleTestCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.settings.accounts.AccountPreferenceBase: void onAccountsUpdated(android.accounts.Account[])>	android.permission.READ_SYNC_STATS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.socialwidget.SocialWidgetProvider: void bindRemoteViews(android.content.Context,int,android.appwidget.AppWidgetManager,com.android.contacts.ContactLoader$Result)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.vcard.VCardEntry: void iterateAllData(com.android.vcard.VCardEntry$EntryElementIterator)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.app.SlideshowPage: void onResume()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.gallery3d.ui.UndoBarView: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<android.filterfw.core.SyncRunner: int step()>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.mms.ui.MmsThumbnailPresenter: void presentFirstSlide(com.android.mms.ui.SlideViewInterface,com.android.mms.model.SlideModel)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.InCallScreen: void access$1200(com.android.phone.InCallScreen)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.BLUETOOTH	
<com.android.settings.Display: void onClick(android.view.View)>	android.permission.WRITE_SETTINGS	android.permission.CHANGE_CONFIGURATION	
<com.android.internal.policy.impl.SimUnlockScreen$TouchInput: void onClick(android.view.View)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.server.ShutdownActivity$1: void run()>	android.permission.VIBRATE	android.permission.MOUNT_UNMOUNT_FILESYSTEMS	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.browser.TabControl: void addPreloadedTab(com.android.browser.Tab)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.internal.telephony.IccSmsInterfaceManager: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.internal.policy.impl.LockPatternKeyguardView$AccountAnalyzer: void start()>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.settings.PrivacySettings: void onActivityCreated(android.os.Bundle)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.server.pm.PackageManagerService$7: void run()>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void startMsgListQuery(int)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.gallery3d.ui.CropView: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.list.DefaultContactBrowseListFragment: void selectDefaultContact()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.emailcommon.service.IEmailServiceCallback: void syncMailboxStatus(long,int,int)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.telephony.IccCard: void access$100(com.android.internal.telephony.IccCard)>	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	
<com.android.mms.data.WorkingMessage: void saveDraft(boolean)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.settings.net.NetworkPolicyEditor: void write(android.net.NetworkPolicy[])>	android.permission.ACCESS_WIFI_STATE	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.server.am.ActivityManagerService: boolean handleApplicationWtf(android.os.IBinder,java.lang.String,android.app.ApplicationErrorReport$CrashInfo)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.contacts.editor.TextFieldsEditorView: void onTypeSelectionChange(int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothHandsfree$22: android.bluetooth.AtCommandResult handleReadCommand()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary: void access$500(com.android.inputmethod.latin.ExpandableBinaryDictionary)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.internal.policy.impl.KeyguardViewBase: void onScreenTurnedOn()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<android.filterpacks.imageproc.DrawOverlayFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.media.IMediaScannerListener$Stub: void scanCompleted(java.lang.String,android.net.Uri)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.settings.bluetooth.BluetoothNameDialogFragment$2: void onClick(android.content.DialogInterface,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.settings.widget.SettingsAppWidgetProvider$SyncStateTracker: int getTriState(android.content.Context)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.server.net.NetworkPolicyManagerService: void access$1100(com.android.server.net.NetworkPolicyManagerService)>	android.permission.ACCESS_WIFI_STATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.gallery3d.ui.UndoBarView: void render(com.android.gallery3d.ui.GLCanvas)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.browser.BrowserActivity: boolean onOptionsItemSelected(android.view.MenuItem)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.camera.EffectsRecorder: void startPreview()>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<android.provider.Browser: void addSearchUrl(android.content.ContentResolver,java.lang.String)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pDisablingState: void enter()>	android.permission.CHANGE_WIFI_STATE	android.permission.GET_TASKS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.settings.bluetooth.A2dpProfile: boolean isA2dpPlaying()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.server.BackupManagerService$PerformBackupTask: void execute()>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.internal.telephony.gsm.GsmSMSDispatcher: int dispatchNormalMessage(com.android.internal.telephony.SmsMessageBase)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.exchange.ContactsSyncAdapterService$SyncAdapterImpl: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>	android.permission.VIBRATE	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.policy.impl.KeyguardScreenCallback: void goToUnlockScreen()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.inputmethod.latin.LatinIME: void resetEntireInputState()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1: boolean performAction(int,int,android.os.Bundle)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.settings.TetherSettings: void onClick(android.content.DialogInterface,int)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	
<com.android.gallery3d.ui.ScreenNail: void draw(com.android.gallery3d.ui.GLCanvas,int,int,int,int)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<android.media.effect.effects.GrayscaleEffect: void apply(int,int,int,int)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.server.pm.PackageManagerService: void access$3800(com.android.server.pm.PackageManagerService,boolean,boolean)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.contacts.list.ContactPickerFragment: boolean isSyncActive()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	
<com.android.server.LocationManagerService$1: void onReceive(android.content.Context,android.content.Intent)>	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<android.content.SyncManager$ActiveSyncContext: void onFinished(android.content.SyncResult)>	android.permission.VIBRATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<com.android.contacts.list.DefaultContactBrowseListFragment: void setFilter(com.android.contacts.list.ContactListFilter)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.BrowserBookmarksPage: boolean onContextItemSelected(android.view.MenuItem)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.mms.ui.DeliveryReportActivity: void initListAdapter()>	android.permission.READ_SMS	android.permission.RECEIVE_SMS	
<com.android.browser.DownloadTouchIcon: void storeIcon(android.graphics.Bitmap)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.mms.transaction.NotificationTransaction: byte[] sendPdu(long,byte[],java.lang.String)>	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	
<com.android.settings.Settings$KeyboardLayoutPickerActivity: void onResume()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.calendar.alerts.AlertActivity: void onStop()>	android.permission.VIBRATE	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.mms.ui.ComposeMessageActivity$20: void run()>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.sip.SipSettings: void handleSipReceiveCallsOption(boolean)>	android.permission.WRITE_SETTINGS	android.permission.USE_SIP	android.permission.WAKE_LOCK	
<android.filterpacks.imageproc.AlphaBlendFilter: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.internal.policy.impl.LockPatternKeyguardView: void maybeEnableFallback(android.content.Context)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.email.activity.MessageListFragment$4: void onLoadFinished(android.content.Loader,android.database.Cursor)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.detail.ContactDetailFragment: void bindData()>	android.permission.READ_PHONE_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.net.wifi.p2p.IWifiP2pManager: android.os.Messenger getMessenger()>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void addAudio(android.net.Uri)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.latin.SubtypeSwitcher: void init(com.android.inputmethod.latin.LatinIME)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.ACCESS_NETWORK_STATE	
<com.android.calendar.event.AttendeesView: android.view.View constructAttendeeView(com.android.calendar.event.EditEventHelper$AttendeeItem)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.browser.Controller: void onDownloadStart(com.android.browser.Tab,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)>	android.permission.VIBRATE	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.WRITE_EXTERNAL_STORAGE	android.permission.GET_ACCOUNTS	
<com.android.wallpaper.RenderScriptWallpaper$RenderScriptEngine: void onVisibilityChanged(boolean)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<android.net.wifi.SupplicantStateTracker$InactiveState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.UserDictionary: void getBigrams(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.net.sip.SipManager: void open(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.SipRegistrationListener)>	android.permission.USE_SIP	android.permission.WAKE_LOCK	
<com.android.server.BackupManagerService$PerformFullBackupTask: void run()>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.settings.SettingsPreferenceFragment: void onActivityResult(int,int,android.content.Intent)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.LockPatternKeyguardViewProperties: com.android.internal.policy.impl.KeyguardViewBase createKeyguardView(android.content.Context,com.android.internal.policy.impl.KeyguardViewCallback,com.android.internal.policy.impl.KeyguardUpdateMonitor,com.android.internal.policy.impl.KeyguardWindowController)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.server.BackupManagerService$PerformRestoreTask: void restoreNextAgent()>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.providers.downloads.DownloadService: void access$500(com.android.providers.downloads.DownloadService,com.android.providers.downloads.DownloadInfo$Reader,com.android.providers.downloads.DownloadInfo,long)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	android.permission.ACCESS_NETWORK_STATE	
<com.android.browser.BookmarkUtils: android.net.Uri getBookmarksUri(android.content.Context)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.camera.Camera: void restorePreferences()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.gallery3d.util.ThreadPool$Job: java.lang.Object run(com.android.gallery3d.util.ThreadPool$JobContext)>	android.permission.NFC	android.permission.VIBRATE	android.permission.INTERNET	android.permission.SET_WALLPAPER	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<android.server.BluetoothAdapterStateMachine: void access$5300(android.server.BluetoothAdapterStateMachine)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<android.app.DownloadManager: long addCompletedDownload(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,long,boolean)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<android.bluetooth.IBluetooth$Stub: boolean setTrust(java.lang.String,boolean)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.contacts.activities.JoinContactActivity: boolean onOptionsItemSelected(android.view.MenuItem)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.ConversationList$ThreadListQueryHandler: void onDeleteComplete(int,java.lang.Object,int)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.internal.telephony.ISms: java.util.List getAllMessagesFromIccEf()>	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.settings.bluetooth.DeviceListPreferenceFragment: void onDeviceAdded(com.android.settings.bluetooth.CachedBluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.exchange.EasSyncService: void run()>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_CALENDAR	android.permission.ACCESS_NETWORK_STATE	android.permission.WRITE_CALENDAR	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.policy.impl.SimUnlockScreen$1$1: void run()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.phone.CallerInfoCache: void access$400(com.android.phone.CallerInfoCache)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.settings.bluetooth.LocalBluetoothAdapter: void setDiscoverableTimeout(int)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.providers.contacts.ContactsProvider2: int updateData(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[],boolean)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.keyboard.LatinKeyboardView$KeyTimerHandler: void startLongPressTimer(int)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.media.effect.effects.LomoishEffect: void apply(int,int,int,int)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.filterpacks.imageproc.FisheyeFilter: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.phone.BluetoothHandsfree$24: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<android.media.AudioService$AudioServiceBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<com.android.settings.bluetooth.LocalBluetoothProfileManager$StateChangedHandler: void onReceive(android.content.Context,android.content.Intent,android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.bluetooth.pbap.BluetoothPbapObexServer: int onGet(javax.obex.Operation)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.contacts.activities.ConfirmAddDetailActivity$QueryEntitiesTask: void onPostExecute(java.lang.Object)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.policy.impl.KeyguardViewMediator: void handleSetHidden(boolean)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<android.bluetooth.IBluetoothA2dp: boolean connect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.contacts.model.EntityModifier: void parseExtras(android.content.Context,com.android.contacts.model.AccountType,com.android.contacts.model.EntityDelta,android.os.Bundle)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.server.BootReceiver: void access$100(com.android.server.BootReceiver,android.content.Context)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.mms.data.WorkingMessage: android.net.Uri access$1300(com.google.android.mms.pdu.PduPersister,com.google.android.mms.pdu.SendReq,com.android.mms.model.SlideshowModel,android.net.Uri)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.mms.ui.ConversationListItem: void updateFromView()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: boolean access$3800(com.android.mms.ui.ComposeMessageActivity,long)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: void releaseAllPointers(long)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.settings.bluetooth.CachedBluetoothDevice: void refreshBtClass()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.providers.userdictionary.DictionaryBackupAgent: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>	android.permission.READ_USER_DICTIONARY	android.permission.WRITE_USER_DICTIONARY	
<com.android.gallery3d.app.SlideshowPage: void onPause()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.CallDetailActivity$1UpdateContactDetailsTask: com.android.contacts.PhoneCallDetails[] doInBackground(java.lang.Void[])>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.PhoneNumberPickerFragment: void onItemClick(int,long)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.telephony.SmsManager: java.util.ArrayList getAllMessagesFromIcc()>	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.contacts.list.LegacyPostalAddressListAdapter: void bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.GroupMemberLoader: com.android.contacts.GroupMemberLoader constructLoaderForGroupEditorQuery(android.content.Context,long)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.am.ActivityManagerService: void setProcessLimit(int)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.mms.ui.ManageSimMessages: void onNewIntent(android.content.Intent)>	android.permission.READ_SMS	android.permission.RECEIVE_SMS	
<android.accounts.AccountManager$3: void startTask()>	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.settings.TetherSettings: void updateState()>	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.browser.SuggestionsAdapter$CompletionListener: void onSelect(java.lang.String,int,java.lang.String)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.accounts.AccountManager$BaseFutureTask: void doWork()>	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.exchange.EasOutboxService: void sync(com.android.exchange.adapter.AbstractSyncAdapter)>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_CALENDAR	android.permission.ACCESS_NETWORK_STATE	android.permission.WRITE_CALENDAR	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.PhoneNumberPickerFragment: void setQueryString(java.lang.String,boolean)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.email.activity.setup.MailboxSettings$2: void callOnPostExecuteForTest(java.lang.Object)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.app.SlideshowPage$ShuffleSource: long reload()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.gallery3d.ui.PhotoView$FullPicture: void draw(com.android.gallery3d.ui.GLCanvas,android.graphics.Rect)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<android.telephony.TelephonyManager: java.util.List getAllCellInfo()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.settings.AllowBindAppWidgetActivity: void onCreate(android.os.Bundle)>	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.BLUETOOTH	
<com.android.browser.BookmarkUtils$1$1: void run()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.accounts.ChooseTypeAndAccountActivity: void runAddAccountForAuthenticator(java.lang.String)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.calendar.month.MonthByWeekFragment: void onActivityCreated(android.os.Bundle)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.phone.InCallScreen: boolean checkOtaspStateOnResume()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.contacts.activities.ConfirmAddDetailActivity: void access$1200(com.android.contacts.activities.ConfirmAddDetailActivity)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.browser.Controller$7: boolean onMenuItemClick(android.view.MenuItem)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.providers.contacts.ContactsProvider2: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteQueryBuilder,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.CancellationSignal)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.gallery3d.ui.CropView: boolean onTouch(android.view.MotionEvent)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.internal.widget.SlidingTab$OnTriggerListener: void onGrabbedStateChange(android.view.View,int)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.internal.telephony.DataConnection$DcDisconnectionErrorCreatingConnection: void enter()>	android.permission.CHANGE_WIFI_STATE	android.permission.GET_TASKS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<android.media.AudioService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.settings.bluetooth.BluetoothEnabler: void onCheckedChanged(android.widget.CompoundButton,boolean)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.phone.PhoneInterfaceManager: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.ACCESS_FINE_LOCATION	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_COARSE_LOCATION	android.permission.CALL_PHONE	
<com.android.phone.InCallScreen: void bailOutAfterErrorDialog()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.gallery3d.ui.PhotoView: boolean swipeImages(float,float)>	android.permission.NFC	android.permission.VIBRATE	
<com.android.mms.ui.ComposeMessageActivity$4: void run()>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.inputmethod.latin.DictionaryCollection: void getWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.group.GroupBrowseListFragment: void requestSelectionToScreen()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.ComposeMessageActivity: void drawTopPanel(boolean)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.development.AccountsTester$ButtonClickListener: void onClick(android.view.View)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.contacts.list.DefaultContactBrowseListFragment: void viewContact(android.net.Uri)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler: int getWritableEntityIndex()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.Settings$SecuritySettingsActivity: void onResume()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.gallery3d.ui.SlotView: void removeAllComponents()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.settings.ApplicationSettings: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.PhoneWindowManager: boolean performHapticFeedbackLw(android.view.WindowManagerPolicy$WindowState,int,boolean)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	
<com.android.contacts.ContactSaveService: void saveContact(android.content.Intent)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.SecuritySettings: void onCreate(android.os.Bundle)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.READ_PHONE_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.phone.BluetoothHandsfree$13: android.bluetooth.AtCommandResult handleTestCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.gallery3d.ui.MenuExecutor$MediaOperation: java.lang.Void run(com.android.gallery3d.util.ThreadPool$JobContext)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<android.location.LocationManager: void requestLocationUpdates(long,float,android.location.Criteria,android.app.PendingIntent)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.internal.policy.impl.KeyguardViewMediator: void notifyScreenOffLocked()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.camera.VideoCamera: void switchCamera()>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<android.filterpacks.imageproc.StraightenFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.contacts.list.ContactEntryListFragment: void prepareEmptyView()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	
<com.android.calendar.DayView: boolean onKeyDown(int,android.view.KeyEvent)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.email.Controller$ControllerService$1: void loadAttachment(long,boolean)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.telephony.PhoneBase: void setPropertiesByCarrier()>	android.permission.CHANGE_WIFI_STATE	android.permission.WRITE_SETTINGS	android.permission.CHANGE_CONFIGURATION	
<com.android.email.Controller$15: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.server.DockObserver: void update()>	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	
<com.android.contacts.editor.ContactEditorFragment$3: void onClick(android.view.View)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.PhoneUtils: void separateCall(com.android.internal.telephony.Connection)>	android.permission.ACCESS_WIFI_STATE	android.permission.WAKE_LOCK	
<com.android.settings.tts.TextToSpeechSettings: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<android.filterfw.core.SyncRunner: void processFilterNode(android.filterfw.core.Filter)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.contacts.detail.ContactDetailFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>	android.permission.READ_PHONE_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.util.Recycler$MmsRecycler: void deleteMessagesOlderThanDate(android.content.Context,long,long)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<android.support.v4.view.accessibility.AccessibilityNodeProviderCompat: boolean performAction(int,int,android.os.Bundle)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.net.wifi.WifiWatchdogStateMachine$ConnectedState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.providers.downloads.DownloadService: com.android.providers.downloads.DownloadInfo access$600(com.android.providers.downloads.DownloadService,com.android.providers.downloads.DownloadInfo$Reader,long)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.detail.PhotoSelectionHandler: int getPhotoPickSize()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.common.contacts.DataUsageStatUpdater: boolean updateWithPhoneNumber(java.util.Collection)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.JoinContactListFragment: void onItemClick(int,long)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.editor.ContactEditorFragment$JoinSuggestedContactDialogFragment$1: void onClick(android.content.DialogInterface,int)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.calendar.month.SimpleDayPickerFragment: void onResume()>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.internal.policy.impl.KeyguardViewMediator$1: void onUserChanged(int)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<android.webkit.GeolocationService: void setEnableGps(boolean)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<android.location.ILocationManager$Stub$Proxy: java.util.List getProviders(android.location.Criteria,boolean)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.inputmethod.latin.UserBinaryDictionary: void generateBinaryDictionary()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.internal.telephony.MccTable: void setWifiCountryCodeFromMcc(android.content.Context,int)>	android.permission.CHANGE_WIFI_STATE	android.permission.WRITE_SETTINGS	
<com.android.phone.BluetoothHandsfree$6: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.browser.NavTabScroller$2: void onAnimationEnd(android.animation.Animator)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.browser.UrlInputView: void onSelect(java.lang.String,int,java.lang.String)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.settings.bluetooth.LocalBluetoothProfile: boolean connect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.Dictionary: void getWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.bluetooth.IBluetooth: boolean setTrust(java.lang.String,boolean)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<android.filterpacks.base.FrameStore: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.server.net.NetworkPolicyManagerService$5: void onReceive(android.content.Context,android.content.Intent)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	
<com.android.server.net.NetworkStatsService: void access$600(com.android.server.net.NetworkStatsService)>	android.permission.ACCESS_WIFI_STATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<android.net.wifi.IWifiManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.CHANGE_WIFI_STATE	android.permission.CHANGE_WIFI_MULTICAST_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<android.nfc.INfcAdapter$Stub: boolean disableNdefPush()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.BLUETOOTH	
<com.android.contacts.group.GroupEditorFragment$3: void onLoadFinished(android.content.Loader,android.database.Cursor)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.bluetooth.pbap.BluetoothPbapVcardManager: int composeAndSendVCards(javax.obex.Operation,java.lang.String,boolean,java.lang.String,boolean)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.browser.SnapshotTab$LoadData: void onPostExecute(java.lang.Object)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.gallery3d.ui.PhotoView: void snapback()>	android.permission.NFC	android.permission.VIBRATE	
<com.android.phone.BluetoothHandsfree$20: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.mms.data.Conversation: void blockingMarkAllMmsMessagesAsSeen(android.content.Context)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.phone.CallLogAsync$GetLastOutgoingCallTask: java.lang.Object doInBackground(java.lang.Object[])>	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.development.SyncAdapterDriver: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>	android.permission.WRITE_SYNC_SETTINGS	android.permission.READ_SYNC_SETTINGS	
<android.server.BluetoothA2dpService: boolean connectSinkInternal(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.camera.VideoCamera: void onSharedPreferenceChanged()>	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.RECORD_AUDIO	
<com.android.calendar.event.AttendeesView: void onClick(android.view.View)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.location.LocationManager: void _requestLocationUpdates(java.lang.String,android.location.Criteria,long,float,boolean,android.location.LocationListener,android.os.Looper)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.contacts.editor.ContactEditorFragment: void onSplitContactConfirmed()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.data.Conversation: void markAsRead()>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.phone.PhoneUtils: boolean answerCall(com.android.internal.telephony.Call)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.server.VibratorService: void onInputDeviceRemoved(int)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	
<com.android.browser.Controller$PruneThumbnails: void run()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.net.wifi.IWifiManager: void setFrequencyBand(int,boolean)>	android.permission.CHANGE_WIFI_STATE	android.permission.WRITE_SETTINGS	
<com.android.server.am.ActivityManagerService: void appNotResponding(com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord,com.android.server.am.ActivityRecord,java.lang.String)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.calendar.month.MonthByWeekFragment: void handleEvent(com.android.calendar.CalendarController$EventInfo)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.inputmethod.latin.LatinIME: void revertCommit(android.view.inputmethod.InputConnection)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.bluetooth.IBluetooth$Stub$Proxy: boolean disconnectInputDevice(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.phone.BluetoothHandsfree$28: android.bluetooth.AtCommandResult handleTestCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.gallery3d.app.AlbumDataLoader$ReloadTask: void run()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.internal.telephony.DataConnectionTracker: void onDataStallAlarm(int)>	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.providers.media.RingtonePickerActivity: void onCreate(android.os.Bundle)>	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.BLUETOOTH	
<com.android.contacts.list.DefaultContactBrowseListFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.exchange.adapter.EmailSyncAdapter$EasEmailSyncParser: boolean parse()>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.calendar.event.EditEventHelper: boolean saveRemindersWithBackRef(java.util.ArrayList,int,java.util.ArrayList,java.util.ArrayList,boolean)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.gallery3d.app.ActivityState: void onPause()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<android.accounts.AccountManager$5: android.accounts.AccountManagerFuture start()>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<android.net.wifi.WifiStateMachine$InitialState: boolean processMessage(android.os.Message)>	android.permission.CHANGE_WIFI_STATE	android.permission.GET_TASKS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.INTERNET	android.permission.BROADCAST_STICKY	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.mms.ui.MessageUtils: java.lang.String getMultimediaMessageDetails(android.content.Context,android.database.Cursor,int)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void addAttachment(java.lang.String,android.net.Uri,boolean)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.bluetooth.IBluetoothA2dp$Stub$Proxy: boolean disconnect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.settings.wifi.AdvancedWifiSettings: void onCreate(android.os.Bundle)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.READ_PHONE_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.server.wm.WindowManagerService: void exitKeyguardSecurely(android.view.IOnKeyguardExitResult)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.DISABLE_KEYGUARD	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.server.am.ActivityManagerService: void appDiedLocked(com.android.server.am.ProcessRecord,int,android.app.IApplicationThread)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.exchange.AbstractSyncService: android.os.Bundle validate(java.lang.Class,com.android.emailcommon.provider.HostAuth,android.content.Context)>	android.permission.READ_CALENDAR	android.permission.WAKE_LOCK	
<com.android.contacts.calllog.CallLogAdapter: void access$100(com.android.contacts.calllog.CallLogAdapter)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WRITE_CALL_LOG	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.app.AbstractGalleryActivity: void onPause()>	android.permission.NFC	android.permission.VIBRATE	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	android.permission.RECORD_AUDIO	
<com.android.contacts.list.EmailAddressPickerFragment: void onItemClick(int,long)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.data.Contact: android.net.Uri getPhoneUri()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.email.activity.MessageViewFragmentBase$LoadMessageTask: void onSuccess(com.android.emailcommon.provider.EmailContent$Message)>	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.internal.policy.impl.PhoneWindowManager: void enableKeyguard(boolean)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<android.bluetooth.AtCommandHandler: android.bluetooth.AtCommandResult handleActionCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.settings.bluetooth.DevicePickerFragment: void onPause()>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<android.filterpacks.imageproc.ImageSlicer: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.gallery3d.app.ManageCachePage: void onBackPressed()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.server.BackupManagerService$PerformFullRestoreTask: boolean restoreOneFile(java.io.InputStream,byte[])>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.mms.util.ThumbnailManager: com.android.mms.util.ItemLoadedFuture getThumbnail(android.net.Uri,com.android.mms.util.ItemLoadedCallback)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.latin.ExpandableDictionary: boolean reloadDictionaryIfRequired()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.gallery3d.ui.PhotoView$Model: void moveTo(int)>	android.permission.NFC	android.permission.VIBRATE	
<com.android.exchange.adapter.ContactsSyncAdapter: boolean sendLocalChanges(com.android.exchange.adapter.Serializer)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.email.service.MailService: void reconcilePopImapAccountsSync(android.content.Context)>	android.permission.MANAGE_ACCOUNTS	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.browser.SnapshotTab: void <init>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.filterpacks.imageproc.SharpenFilter: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.exchange.adapter.EmailSyncAdapter: int getEstimate(java.lang.String)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.data.Contact: android.net.Uri getUri()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.deviceinfo.Memory: void onCreate(android.os.Bundle)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.READ_PHONE_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.settings.fuelgauge.PowerUsageSummary: void processMiscUsage()>	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.LatinIME: void initSuggest()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.phone.OtaUtils: void onClickOtaEndButton()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.gallery3d.ui.DownUpDetector: void onTouchEvent(android.view.MotionEvent)>	android.permission.NFC	android.permission.VIBRATE	
<com.android.settings.wifi.WpsDialog: void onCreate(android.os.Bundle)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	
<com.android.server.location.CountryDetectorBase: void stop()>	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	
<com.android.browser.SnapshotTab: void deleteThumbnail()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.gallery3d.ui.CropView: boolean dispatchTouchEvent(android.view.MotionEvent)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.phone.DTMFTwelveKeyDialer: void onDialerOpen(boolean)>	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.contacts.list.ShortcutIntentBuilder$PhoneNumberLoadingAsyncTask: void loadPhoto()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.phone.BluetoothHandsfree$12: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.ContactsBinaryDictionary: boolean isValidWord(java.lang.CharSequence)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.settings.Settings$SpellCheckersSettingsActivity: void onResume()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.server.net.NetworkPolicyManagerService$6: void onReceive(android.content.Context,android.content.Intent)>	android.permission.ACCESS_WIFI_STATE	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.list.ContactBrowseListFragment: void restoreSelectedUri(boolean)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.CallNotifier: void onCustomRingtoneQueryTimeout(java.lang.String)>	android.permission.VIBRATE	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	
<com.android.calendar.month.MonthByWeekFragment: android.content.Loader onCreateLoader(int,android.os.Bundle)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.settings.bluetooth.DeviceListPreferenceFragment: void createDevicePreference(com.android.settings.bluetooth.CachedBluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.contacts.list.EmailAddressPickerFragment: void prepareEmptyView()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	
<com.android.phone.sip.SipEditor$2: void run()>	android.permission.USE_SIP	android.permission.WAKE_LOCK	
<android.server.BluetoothService: boolean connectInputDevice(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.phone.EmergencyCallHelper: void startEmergencyCallFromAirplaneModeSequence(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<android.server.BluetoothService: boolean attemptAutoPair(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.camera.VideoCamera: void initializeVideoSnapshot()>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<android.content.SyncManager: void scheduleSyncOperation(android.content.SyncOperation)>	android.permission.VIBRATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<android.location.ILocationManager: void addProximityAlert(double,double,float,long,android.app.PendingIntent)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<android.server.BluetoothEventLoop: void onPanDeviceConnectionResult(java.lang.String,int)>	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.contacts.list.ProviderStatusWatcher: void access$600(com.android.contacts.list.ProviderStatusWatcher)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.calllog.CallLogAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WRITE_CALL_LOG	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.CallNotifier: void onQueryComplete(int,java.lang.Object,com.android.internal.telephony.CallerInfo)>	android.permission.VIBRATE	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	
<com.android.browser.Tab$3: void onReceivedTitle(android.webkit.WebView,java.lang.String)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.phone.PhoneApp: void onCreate()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.ACCESS_COARSE_LOCATION	android.permission.WRITE_SETTINGS	android.permission.CHANGE_CONFIGURATION	android.permission.ACCESS_NETWORK_STATE	android.permission.SET_TIME_ZONE	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.browser.UiController: com.android.browser.SnapshotTab createNewSnapshotTab(long,boolean)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: int getDrmMimeSavedStringRsrc(long,boolean)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.settings.DisplaySettings: void onCreate(android.os.Bundle)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.READ_PHONE_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.KeyguardViewMediator: void access$2100(com.android.internal.policy.impl.KeyguardViewMediator,boolean)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<android.view.WindowManagerPolicy: void systemReady()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.internal.telephony.gsm.GsmServiceStateTracker: void handlePollStateResult(int,android.os.AsyncResult)>	android.permission.VIBRATE	android.permission.BROADCAST_STICKY	android.permission.SET_TIME_ZONE	
<com.android.contacts.CallDetailActivity: com.android.contacts.PhoneCallDetails getPhoneCallDetailsForUri(android.net.Uri)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.telephony.sip.SipPhone: void setPropertiesByCarrier()>	android.permission.CHANGE_WIFI_STATE	android.permission.WRITE_SETTINGS	android.permission.CHANGE_CONFIGURATION	
<com.android.gallery3d.data.LocationClustering: void run(com.android.gallery3d.data.MediaSet)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.phone.RespondViaSmsManager$RespondViaSmsItemClickListener: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.settings.DeviceInfoSettings: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.phone.BluetoothHandsfree: android.bluetooth.AtCommandResult redial()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.contacts.list.ContactPickerFragment: void onItemClick(int,long)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.app.PhotoDataAdapter$ScreenNailJob: java.lang.Object run(com.android.gallery3d.util.ThreadPool$JobContext)>	android.permission.NFC	android.permission.VIBRATE	android.permission.INTERNET	android.permission.SET_WALLPAPER	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.mms.ui.ComposeMessageActivity$34: void run()>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary: void loadDictionary()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.deskclock.AlarmAlertFullScreen: void access$000(com.android.deskclock.AlarmAlertFullScreen)>	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	
<com.android.settings.AccessibilitySettings$ToggleAccessibilityServicePreferenceFragment: void onActivityCreated(android.os.Bundle)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void onCreate(android.os.Bundle)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.telephony.cdma.CDMALTEPhone: boolean updateCurrentCarrierInProvider(java.lang.String)>	android.permission.CHANGE_WIFI_STATE	android.permission.WRITE_SETTINGS	android.permission.CHANGE_CONFIGURATION	android.permission.SET_TIME_ZONE	
<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: boolean turnOffUpstreamMobileConnection()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.gallery3d.data.MtpDeviceSet: long reload()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: int getDrmMimeMenuStringRsrc(long)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.internal.telephony.PhoneFactory: void makeDefaultPhone(android.content.Context)>	android.permission.CHANGE_WIFI_STATE	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	android.permission.CHANGE_CONFIGURATION	android.permission.ACCESS_NETWORK_STATE	android.permission.SET_TIME_ZONE	android.permission.WAKE_LOCK	
<com.android.settings.bluetooth.BluetoothSettings: void onDeviceAdded(com.android.settings.bluetooth.CachedBluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.contacts.activities.ConfirmAddDetailActivity$QueryEntitiesTask: java.lang.Object doInBackground(java.lang.Object[])>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.internal.widget.WaveView$OnTriggerListener: void onGrabbedStateChange(android.view.View,int)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<android.content.SyncManager: void sendCancelSyncsMessage(android.accounts.Account,int,java.lang.String)>	android.permission.VIBRATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<com.android.phone.PhoneApp: void clearOtaState()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.exchange.adapter.AbstractSyncParser: void commit()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_CALENDAR	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.latin.UserHistoryDictionary: void <init>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.server.wm.InputMonitor: int interceptKeyBeforeQueueing(android.view.KeyEvent,int,boolean)>	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.CALL_PHONE	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.contacts.model.EntityDeltaList: int indexOfFirstWritableRawContact(android.content.Context)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.media.effect.effects.CropEffect: void apply(int,int,int,int)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.email.service.PopImapSyncAdapterService: void performSync(android.content.Context,android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.latin.ContactsBinaryDictionary: void getWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.settings.TetherSettings: void onStart()>	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.BLUETOOTH	
<android.net.wifi.WifiStateMachine$TetheringState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.phone.CallCard: void updateNoCall(com.android.internal.telephony.CallManager)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.settings.bluetooth.PanProfile: boolean disconnect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.camera.PanoramaActivity: void onPause()>	android.permission.NFC	android.permission.VIBRATE	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	android.permission.RECORD_AUDIO	
<android.accounts.AccountManagerService: void invalidateAuthToken(java.lang.String,java.lang.String)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	
<com.android.phone.InCallScreen: void onResume()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.mms.transaction.SmsSingleRecipientSender: void <init>	android.permission.READ_SMS	android.permission.RECEIVE_SMS	
<android.os.IVibratorService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	
<com.android.settings.accounts.ManageAccountsSettings: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.settings.deviceinfo.UsbSettings: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.browser.Controller: void onSaveInstanceState(android.os.Bundle)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.mms.transaction.MessageSender: boolean sendMessage(long)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.SEND_SMS	
<com.android.gallery3d.ui.PhotoView$Picture: void draw(com.android.gallery3d.ui.GLCanvas,android.graphics.Rect)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.internal.telephony.cdma.CDMAPhone: void dispose()>	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	
<com.android.email.Controller$ServiceCallback: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.telephony.gsm.GsmServiceStateTracker: void setTimeFromNITZString(java.lang.String,long)>	android.permission.BROADCAST_STICKY	android.permission.SET_TIME_ZONE	android.permission.WAKE_LOCK	
<com.android.settings.Settings: void onResume()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.KeyguardViewMediator: void pokeWakelock(int)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<android.bluetooth.IBluetoothA2dp: boolean disconnect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.contacts.activities.TransactionSafeActivity: boolean onPrepareOptionsMenu(android.view.Menu)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.Controller: boolean onKeyDown(int,android.view.KeyEvent)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.location.ILocationManager$Stub$Proxy: boolean isProviderEnabled(java.lang.String)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.server.am.ActivityManagerService: void cleanUpRemovedTaskLocked(com.android.server.am.TaskRecord,int)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.development.SyncAdapterDriver: void startSync(java.lang.String)>	android.permission.WRITE_SYNC_SETTINGS	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.imageproc.RotateFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.phone.PhoneApp: void handleOtaspEvent(android.os.Message)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<android.filterpacks.imageproc.DuotoneFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.inputmethod.latin.suggestions.SuggestionsView: void onClick(android.view.View)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.inputmethod.latin.ContactsBinaryDictionary: void <init>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.media.IAudioService: void setMode(int,android.os.IBinder)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<android.net.wifi.WifiStateMachine$InitialState: void enter()>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	
<com.android.gallery3d.app.DialogPicker: void onCreate(android.os.Bundle)>	android.permission.NFC	android.permission.VIBRATE	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	android.permission.RECORD_AUDIO	
<com.android.nfc.NfcService$NfcServiceHandler: void dispatchTagEndpoint(com.android.nfc.DeviceHost$TagEndpoint)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.email.RefreshManager: boolean refreshMessageList(long,long,boolean)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.transaction.TransactionService$ServiceHandler: void processPendingTransaction(com.android.mms.transaction.Transaction,com.android.mms.transaction.TransactionSettings)>	android.permission.CHANGE_WIFI_STATE	android.permission.READ_SMS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SMS	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.RECEIVE_SMS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.exchange.adapter.AbstractSyncAdapter: void setSyncKey(java.lang.String,boolean)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.Controller: void onDestroy()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.internal.app.ResolverActivity: void onCreate(android.os.Bundle)>	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.UserBinaryDictionary: void <init>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.filterpacks.imageproc.AutoFixFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.bluetooth.IBluetoothHeadset: boolean connectHeadsetInternal(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.phone.InCallScreen: void delayedCleanupAfterDisconnect()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.phone.BluetoothHandsfree$28: android.bluetooth.AtCommandResult handleActionCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.calendar.event.EditEventView: void setCalendarsCursor(android.database.Cursor,boolean)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.phone.PhoneUtils: com.android.phone.PhoneUtils$CallerInfoToken startGetCallerInfo(android.content.Context,com.android.internal.telephony.Call,com.android.internal.telephony.CallerInfoAsyncQuery$OnQueryCompleteListener,java.lang.Object)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	
<com.android.calendar.GeneralPreferences: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.gallery3d.ui.CropView$FaceHighlightView: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: void chooseUpstreamType(boolean)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.gallery3d.ui.PhotoView: void switchToPrevImage()>	android.permission.NFC	android.permission.VIBRATE	
<com.android.calendar.DayView$ContextMenuHandler: boolean onMenuItemClick(android.view.MenuItem)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.contacts.list.DefaultContactBrowseListFragment: void selectFirstFoundContactAfterDelay()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.pm.ShutdownThread: void shutdown(android.content.Context,boolean)>	android.permission.VIBRATE	android.permission.MOUNT_UNMOUNT_FILESYSTEMS	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.server.wm.InputMonitor: android.view.KeyEvent dispatchUnhandledKey(com.android.server.input.InputWindowHandle,android.view.KeyEvent,int)>	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.CALL_PHONE	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.server.connectivity.Tethering$TetherMasterSM$SetIpForwardingDisabledErrorState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.LatinIME: void resetContactsDictionary(com.android.inputmethod.latin.Dictionary)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.server.BootReceiver$1: void run()>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.settings.bluetooth.DeviceProfilesSettings: void onCreate(android.os.Bundle)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.READ_PHONE_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.development.Connectivity: void access$2600(com.android.development.Connectivity)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<android.bluetooth.AtCommandHandler: android.bluetooth.AtCommandResult handleReadCommand()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.internal.policy.impl.KeyguardStatusViewManager: void onClick(android.view.View)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.email.activity.MessageListFragment$4: void onLoadFinished(android.content.Loader,java.lang.Object)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.ShortcutIntentBuilder$PhoneNumberLoadingAsyncTask: java.lang.Object doInBackground(java.lang.Object[])>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.server.location.ComprehensiveCountryDetector$2: void run()>	android.permission.ACCESS_FINE_LOCATION	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	
<com.android.browser.PreloadRequestReceiver: void handlePreload(android.content.Context,android.content.Intent)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.settings.bluetooth.BluetoothEventManager$ClassChangedHandler: void onReceive(android.content.Context,android.content.Intent,android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.gallery3d.ui.TileImageView: boolean removeComponent(com.android.gallery3d.ui.GLView)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.settings.wifi.p2p.WifiP2pSettings: boolean onOptionsItemSelected(android.view.MenuItem)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.internal.telephony.DataConnectionTracker: void <init>	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	
<com.android.settings.bluetooth.BluetoothDevicePreference: void <init>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.gallery3d.ui.UndoBarView: void removeAllComponents()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.settings.TetherSettings: void updateState(java.lang.String[],java.lang.String[],java.lang.String[])>	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.gallery3d.app.PhotoPage$1: void render(com.android.gallery3d.ui.GLCanvas)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.internal.telephony.IccSmsInterfaceManagerProxy: java.util.List getAllMessagesFromIccEf()>	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.internal.telephony.ISms$Stub: java.util.List getAllMessagesFromIccEf()>	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.settings.bluetooth.BluetoothSettings: void createDevicePreference(com.android.settings.bluetooth.CachedBluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.KeyguardViewMediator: void notifyScreenOnLocked(com.android.internal.policy.impl.KeyguardViewManager$ShowListener)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<android.net.wifi.IWifiManager: android.os.Messenger getWifiServiceMessenger()>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	
<com.android.mms.ui.ClassZeroActivity: void saveMessage()>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.browser.ActivityController: void onResume()>	android.permission.NFC	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<android.nfc.INfcAdapter$Stub: void dispatch(android.nfc.Tag)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<android.filterpacks.imageproc.BitmapOverlayFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.common.contacts.BaseEmailAddressAdapter$DefaultPartitionFilter: android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.internal.telephony.IccSmsInterfaceManager: java.util.List getAllMessagesFromIccEf()>	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<android.server.BluetoothPanProfileHandler: void setBluetoothTethering(boolean)>	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.vcard.VCardEntry$AndroidCustomData: void constructInsertOperation(java.util.List,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.deviceinfo.Status: void onPause()>	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.calendar.agenda.AgendaWindowAdapter$QueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.internal.policy.impl.KeyguardViewMediator: boolean onWakeKeyWhenKeyguardShowingTq(int,boolean)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.browser.Preloader: void cancelSearchBoxPreload(java.lang.String)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.net.wifi.p2p.WifiP2pManager: android.os.Messenger getMessenger()>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	
<com.android.settings.accounts.AccountPreferenceBase: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.browser.NavScreen: void switchToTab(com.android.browser.Tab)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.contacts.list.ContactListFilterControllerImpl: void checkFilterValidity(boolean)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.os.Vibrator: void vibrate(long)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	
<android.server.BluetoothService: void onCreatePairedDeviceResult(java.lang.String,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.editor.ContactEditorFragment: void rebindEditorsForNewContact(com.android.contacts.model.EntityDelta,com.android.contacts.model.AccountWithDataSet,com.android.contacts.model.AccountWithDataSet)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.editor.AggregationSuggestionView: boolean canEditSuggestedContact()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.email.activity.MessageViewFragmentBase: void onClick(android.view.View)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.BreadCrumbView: void pop(boolean)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.gallery3d.app.PhotoDataAdapter: java.lang.Object access$2500(com.android.gallery3d.app.PhotoDataAdapter,java.util.concurrent.Callable)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.nfc.NfcService$EnableDisableTask: boolean disableInternal()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.BLUETOOTH	
<com.android.gallery3d.app.ManageCachePage: void onClick(android.view.View)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.mms.transaction.NotificationTransaction: byte[] sendPdu(long,byte[])>	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	
<android.filterpacks.imageproc.ImageSlicer: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.provider.Browser: void clearSearches(android.content.ContentResolver)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.contacts.group.GroupEditorFragment$3: android.content.CursorLoader onCreateLoader(int,android.os.Bundle)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothHandsfree: void connectScoThread()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<android.bluetooth.AtCommandHandler: android.bluetooth.AtCommandResult handleTestCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<android.server.BluetoothA2dpService$1: void onReceive(android.content.Context,android.content.Intent)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<android.net.wifi.WifiStateMachine$ObtainingIpState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.server.ConnectivityService: void handleConnectionFailure(android.net.NetworkInfo)>	android.permission.CHANGE_WIFI_STATE	android.permission.BROADCAST_STICKY	android.permission.ACCESS_NETWORK_STATE	
<com.android.bluetooth.pbap.BluetoothPbapVcardManager: int composeAndSendPhonebookOneVcard(javax.obex.Operation,int,boolean,java.lang.String,int)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.server.ThrottleService$MyHandler: void onPollAlarm()>	android.permission.VIBRATE	android.permission.BROADCAST_STICKY	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.list.CustomContactListFilterActivity: boolean onOptionsItemSelected(android.view.MenuItem)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.accounts.AccountManager: android.accounts.AccountManagerFuture hasFeatures(android.accounts.Account,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)>	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.contacts.list.DefaultContactBrowseListFragment: void reloadDataAndSetSelectedUri(android.net.Uri)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.detail.ContactDetailFragment$QuickFix: void execute()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.calendar.month.MonthByWeekFragment: void <init>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.gallery3d.app.CropImage$LoadDataTask: java.lang.Object run(com.android.gallery3d.util.ThreadPool$JobContext)>	android.permission.NFC	android.permission.VIBRATE	android.permission.INTERNET	android.permission.SET_WALLPAPER	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.providers.downloads.DownloadThread: void processResponseHeaders(com.android.providers.downloads.DownloadThread$State,com.android.providers.downloads.DownloadThread$InnerState,org.apache.http.HttpResponse)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.group.GroupDetailFragment$2: android.content.Loader onCreateLoader(int,android.os.Bundle)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.policy.impl.PhoneWindowManager: boolean interceptFallback(android.view.WindowManagerPolicy$WindowState,android.view.KeyEvent,int)>	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.CALL_PHONE	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.phone.PhoneUtils: int placeCall(android.content.Context,com.android.internal.telephony.Phone,java.lang.String,android.net.Uri,boolean,android.net.Uri)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<android.accounts.AccountManager$Future2Task: void startTask()>	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<android.app.IWallpaperManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.SET_WALLPAPER	android.permission.SET_WALLPAPER_HINTS	
<com.android.camera.Camera: void onSharedPreferenceChanged()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<android.filterpacks.imageproc.BlendFilter: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.emailcommon.service.IEmailService: void updateFolderList(long)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.imageproc.SimpleImageFilter: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.google.android.mms.util.PduCache: android.net.Uri normalizeKey(android.net.Uri)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.providers.downloads.StorageManager: void trimDatabase()>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.contacts.list.DefaultContactBrowseListFragment: void refreshSelectedContactUri()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.ClassZeroActivity$3: void onClick(android.content.DialogInterface,int)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.internal.policy.impl.LockPatternKeyguardView$1: void run()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.server.ConnectivityService$FeatureUser: void expire()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.internal.telephony.IccSmsInterfaceManager: boolean enableCellBroadcast(int)>	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.mms.data.WorkingMessage: int setAttachment(int,android.net.Uri,boolean)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.calendar.alerts.SnoozeAlarmsService: void onHandleIntent(android.content.Intent)>	android.permission.VIBRATE	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.server.pm.PackageManagerService: android.content.pm.PackageParser$Package access$1400(com.android.server.pm.PackageManagerService,java.io.File,int,int,long)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.contacts.editor.LabeledEditorView$1: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.bluetooth.IBluetooth$Stub$Proxy: boolean disconnectPanDevice(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.contacts.activities.PeopleActivity: void onCreate(android.os.Bundle)>	android.permission.NFC	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.bluetooth.CachedBluetoothDevice: void connectInt(com.android.settings.bluetooth.LocalBluetoothProfile)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.systemui.statusbar.tablet.TabletStatusBar: void start()>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.contacts.vcard.ImportVCardActivity$VCardCacheThread: com.android.contacts.vcard.ImportRequest constructImportRequest(byte[],android.net.Uri,java.lang.String)>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.Settings$BluetoothSettingsActivity: void onResume()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.commands.svc.Svc: void main(java.lang.String[])>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<android.filterpacks.imageproc.CropRectFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.provider.ContactsContract$Contacts: android.net.Uri getLookupUri(long,java.lang.String)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.media.AudioManager: void setMode(int)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<android.server.BluetoothService: boolean createBondOutOfBand(java.lang.String,byte[],byte[])>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.vcard.VCardParserImpl_V40: void handleNest()>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.nfc.NfcDispatcher: boolean dispatchTag(android.nfc.Tag)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.camera.VideoCamera: void access$600(com.android.camera.VideoCamera)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.contacts.list.DefaultContactBrowseListFragment: void onLoadFinished(android.content.Loader,android.database.Cursor)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.NavigationBarPhone: boolean onMenuItemClick(android.view.MenuItem)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.settings.bluetooth.LocalBluetoothAdapter: void stopScanning()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.UserHistoryDictionary: void blockingReloadDictionaryIfRequired()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService$AndroidSpellCheckerSession: android.view.textservice.SuggestionsInfo onGetSuggestions(android.view.textservice.TextInfo,java.lang.String,int)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.phone.InCallScreen: void setInCallScreenMode(com.android.phone.InCallUiState$InCallScreenMode)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.bluetooth.pbap.BluetoothPbapService: void startRfcommSocketListener()>	android.permission.BLUETOOTH_ADMIN	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<android.filterpacks.base.CallbackFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.inputmethod.keyboard.PointerTracker: void detectAndSendKey(com.android.inputmethod.keyboard.Key,int,int)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.internal.widget.LockPatternView: void handleActionDown(android.view.MotionEvent)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<android.provider.Downloads: void removeAllDownloadsByPackage(android.content.Context,java.lang.String,java.lang.String)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.mms.ui.ManageSimMessages: void copyToPhoneMemory(android.database.Cursor)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.commands.am.Am: void runKill()>	android.permission.KILL_BACKGROUND_PROCESSES	android.permission.RESTART_PACKAGES	
<com.android.browser.WebViewController: void closeTab(com.android.browser.Tab)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.mms.transaction.MessagingNotification: void blockingUpdateNewMessageIndicator(android.content.Context,long,boolean)>	android.permission.READ_SMS	android.permission.VIBRATE	android.permission.WRITE_SMS	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.settings.deviceinfo.Status: void onCreate(android.os.Bundle)>	android.permission.ACCESS_WIFI_STATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.contacts.editor.PhotoActionPopup$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.policy.impl.KeyguardViewMediator: void wakeWhenReadyLocked(int)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.calendar.event.EditEventFragment: boolean access$000(com.android.calendar.event.EditEventFragment,int)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.contacts.calllog.CallLogQueryHandler: void markNewVoicemailsAsOld()>	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WRITE_CALL_LOG	
<com.android.contacts.dialpad.DialpadFragment: void onResume()>	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	
<com.android.emailcommon.utility.Utility$ForEachAccount: void onPostExecute(java.lang.Long[])>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.exchange.adapter.FolderSyncParser: boolean parse()>	android.permission.READ_CALENDAR	android.permission.WAKE_LOCK	
<com.android.vcard.VCardParser_V40: void parseOne(java.io.InputStream)>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.AutofillHandler: void asyncLoadFromDb()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.voicedialer.CommandRecognizerEngine: void recognize(com.android.voicedialer.RecognizerClient,android.app.Activity,java.io.File,int)>	android.permission.VIBRATE	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.mms.transaction.ReadRecTransaction: byte[] sendPdu(long,byte[],java.lang.String)>	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	
<android.app.ActivityManagerNative: void handleApplicationCrash(android.os.IBinder,android.app.ApplicationErrorReport$CrashInfo)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.settings.bluetooth.CachedBluetoothDevice: void disconnect()>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.server.am.ActivityManagerService: void ensureBootCompleted()>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.mms.transaction.MessagingNotification: com.android.mms.transaction.MessagingNotification$MmsSmsDeliveryInfo getSmsNewDeliveryInfo(android.content.Context)>	android.permission.READ_SMS	android.permission.RECEIVE_SMS	
<com.android.calendar.event.AttendeesView: void addAttendees(java.lang.String)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.server.location.LocationBasedCountryDetector: java.util.List getEnabledProviders()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.settings.Settings$DisplaySettingsActivity: void onResume()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.calendar.EventInfoFragment: void onDestroyView()>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.server.ConnectivityService: void handleSetNetworkPreference(int)>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<android.server.BluetoothPanProfileHandler: java.lang.String enableTethering(java.lang.String)>	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.exchange.ExchangeService$2: void sendMeetingResponse(long,int)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.keyboard.PointerTracker: void startRepeatKey(com.android.inputmethod.keyboard.Key)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.settings.bluetooth.DeviceListPreferenceFragment: void onActivityCreated(android.os.Bundle)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.exchange.adapter.AttachmentLoader: void doStatusCallback(int)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<android.net.wifi.WifiWatchdogStateMachine$WatchdogDisabledState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.contacts.ContactSaveService: void clearPrimary(android.content.Intent)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.widget.multiwaveview.GlowPadView: void vibrate()>	android.permission.VIBRATE	android.permission.WAKE_LOCK	
<android.content.SyncManager$ActiveSyncContext: void onServiceDisconnected(android.content.ComponentName)>	android.permission.VIBRATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<com.android.settings.DisplaySettings: void onResume()>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_USER_DICTIONARY	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.settings.UserDictionarySettings: void deleteWord(java.lang.String,java.lang.String,android.content.ContentResolver)>	android.permission.READ_USER_DICTIONARY	android.permission.WRITE_USER_DICTIONARY	
<com.android.providers.contacts.LegacyApiSupport: void updateLegacyPhotoData(long,long,android.content.ContentValues)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.CallerInfoCache$CacheAsyncTask: java.lang.Void doInBackground(java.lang.Void[])>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.mms.transaction.TransactionService: void endMmsConnectivity()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.gallery3d.ui.SlotView: void render(com.android.gallery3d.ui.GLCanvas)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.email.activity.MessageViewFragment: void onRespondToInvite(int,int)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.bluetooth.DeviceProfilesSettings: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.email.activity.setup.MailboxSettings$2: void onSuccess(java.lang.Void)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.deskclock.AlarmAlertFullScreen$2: void onClick(android.view.View)>	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	
<com.android.mms.ui.MessageListItem: void bindCommonMessage()>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.interactions.ContactDeletionInteraction: void onLoadFinished(android.content.Loader,android.database.Cursor)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.filterfw.core.GraphRunner: void run()>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.filterpacks.base.FrameStore: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.phone.InCallTouchUi: void handleAudioButtonClick()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.mms.util.PduLoaderManager: com.android.mms.util.ItemLoadedFuture getPdu(android.net.Uri,boolean,com.android.mms.util.ItemLoadedCallback)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.wm.WindowManagerService: void <init>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.contacts.list.ContactBrowseListFragment: void reloadDataAndSetSelectedUri(android.net.Uri)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.ui.SurfaceTargetFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.contacts.list.ContactPickerFragment: void setQueryString(java.lang.String,boolean)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.ComposeMessageActivity: void saveDraft(boolean)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.inputmethod.latin.SubtypeSwitcher: void onConfigurationChanged(android.content.res.Configuration)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.server.am.ActivityRecord: void windowsVisible()>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.email.Controller$14: void run()>	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	android.permission.WAKE_LOCK	
<android.filterpacks.imageproc.CropFilter: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.phone.PhoneApp: void updatePhoneState(com.android.internal.telephony.Phone$State)>	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.nfc.NfcService$EnableDisableTask: java.lang.Void doInBackground(java.lang.Integer[])>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.BLUETOOTH	
<android.webkit.GeolocationService: void registerForLocationUpdates()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.mms.LogTag$1: void run()>	android.permission.READ_SMS	android.permission.RECEIVE_SMS	
<android.view.IWindowManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.WRITE_SETTINGS	android.permission.DISABLE_KEYGUARD	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.mms.ui.ComposeMessageActivity$33: void run()>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.ContactPickerFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.exchange.ExchangeService$1: void broadcastCallback(com.android.exchange.ExchangeService$ServiceCallbackWrapper)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.activities.ActionBarAdapter: void initialize(android.os.Bundle,com.android.contacts.list.ContactsRequest)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.ui.CropView$FaceHighlightView: void render(com.android.gallery3d.ui.GLCanvas)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.inputmethod.keyboard.LatinKeyboardView$KeyTimerHandler: void startKeyRepeatTimer(com.android.inputmethod.keyboard.PointerTracker,long)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.gallery3d.app.AlbumSetPage$MyLoadingListener: void onLoadingFinished()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.list.CustomContactListFilterActivity: void onStart()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.nfc.NfcAdapter: boolean enableNdefPush()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.SynchronouslyLoadedContactsDictionary: void loadDictionaryAsync()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.filterpacks.imageproc.DocumentaryFilter: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.mms.ui.MessageListAdapter$OnDataSetChangedListener: void onContentChanged(com.android.mms.ui.MessageListAdapter)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.email.activity.ContactStatusLoader: java.lang.Object loadInBackground()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.AddBookmarkPage: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler: int getWritableEntityIndex()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.activities.GroupBrowserActivity: void onServiceCompleted(android.content.Intent)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.data.Conversation: void blockingMarkAllSmsMessagesAsSeen(android.content.Context)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<android.net.wifi.IWifiManager$Stub$Proxy: void setCountryCode(java.lang.String,boolean)>	android.permission.CHANGE_WIFI_STATE	android.permission.WRITE_SETTINGS	
<com.android.mms.transaction.Observable: void notifyObservers()>	android.permission.CHANGE_WIFI_STATE	android.permission.READ_SMS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SMS	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.RECEIVE_SMS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.email.activity.MessageListFragment: void doFooterClick()>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.policy.impl.PasswordUnlockScreen: void onResume()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.gallery3d.app.ActivityState: void onResume()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.calendar.month.SimpleWeeksAdapter: void onDayTapped(android.text.format.Time)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.deskclock.AlarmKlaxon: int onStartCommand(android.content.Intent,int,int)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	
<com.android.phone.InCallScreen: void internalAnswerCall()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.browser.PreloadRequestReceiver: void onReceive(android.content.Context,android.content.Intent)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	
<com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary: void syncReloadDictionaryInternal()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.filterpacks.imageproc.ToPackedGrayFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.camera.LocationManager: void recordLocation(boolean)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<android.server.BluetoothEventLoop: void onRequestPinCode(java.lang.String,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.providers.contacts.LegacyApiSupport: int updatePhotoByDataId(long,android.content.ContentValues)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.vcard.VCardParserImpl_V30: void parseItems()>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothHeadsetService: void setPriority(android.bluetooth.BluetoothDevice,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	
<android.net.wifi.WifiManager: android.net.wifi.WifiManager$Channel initialize(android.content.Context,android.os.Looper,android.net.wifi.WifiManager$ChannelListener)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	
<com.android.bluetooth.opp.BluetoothOppService: void access$1800(com.android.bluetooth.opp.BluetoothOppService,android.database.Cursor,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.contacts.editor.ContactEditorFragment: void setData(com.android.contacts.ContactLoader$Result)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.imageproc.FisheyeFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.internal.policy.impl.GlobalActions$2: boolean onLongPress()>	android.permission.VIBRATE	android.permission.MOUNT_UNMOUNT_FILESYSTEMS	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<android.content.SyncManager$SyncHandler: long scheduleReadyPeriodicSyncs()>	android.permission.VIBRATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<com.android.settings.widget.SettingsAppWidgetProvider$GpsStateTracker: void toggleState(android.content.Context)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.PhoneWindowManager: void exitKeyguardSecurely(android.view.WindowManagerPolicy$OnKeyguardExitResult)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.contacts.activities.AttachPhotoActivity: void onResume()>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.UrlInputView: boolean onKeyDown(int,android.view.KeyEvent)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.phone.InCallScreen: void onCreate(android.os.Bundle)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.common.widget.GroupingListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WRITE_CALL_LOG	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.app.GalleryActionBar$1: void onClick(android.content.DialogInterface,int)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter: void doSaveAction()>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.vpndialogs.ConfirmDialog: void onCreate(android.os.Bundle)>	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.BLUETOOTH	
<com.android.mms.util.Recycler$MmsRecycler: void deleteMessagesForThread(android.content.Context,long,int)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.internal.telephony.ISms$Stub$Proxy: boolean copyMessageToIccEf(int,byte[],byte[])>	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.inputmethod.latin.suggestions.MoreSuggestionsView$1: void onTextInput(java.lang.CharSequence)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.providers.contacts.LegacyApiSupport: int updatePhoto(long,android.content.ContentValues)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.PhoneUtils: boolean hangupRingingCall(com.android.internal.telephony.Call)>	android.permission.VIBRATE	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	
<com.android.contacts.ContactsActivity: void onResume()>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.PieControl: void onClick(android.view.View)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.browser.BreadCrumbView: void notifyController()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.phone.EmergencyCallHelper: void scheduleRetryOrBailOut()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<android.widget.QuickContactBadge: void assignContactFromPhone(java.lang.String,boolean)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.email.activity.MessageCompose$6: void callOnPostExecuteForTest(java.lang.Object)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.MessageListItem: void bindNotifInd()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.common.contacts.BaseEmailAddressAdapter$DirectoryPartitionFilter: android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.calllog.DefaultVoicemailNotifier$DefaultNameLookupQuery: java.lang.String query(java.lang.String)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.gallery3d.app.AlbumSetDataLoader: java.lang.Object executeAndWait(java.util.concurrent.Callable)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<android.server.BluetoothAdapterStateMachine$PerProcessState: boolean processMessage(android.os.Message)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.server.ConnectivityService: void handleDeprecatedGlobalHttpProxy()>	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	
<com.android.browser.Tab$3: boolean onCreateWindow(android.webkit.WebView,boolean,boolean,android.os.Message)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.internal.telephony.sip.SipPhone: void dispose()>	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	
<com.android.inputmethod.latin.SynchronouslyLoadedUserDictionary: boolean isValidWord(java.lang.CharSequence)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.list.EmailAddressPickerFragment: boolean isSyncActive()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	
<com.android.phone.BluetoothAtPhonebook$2: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.internal.telephony.cdma.CdmaSMSDispatcher: int dispatchNormalMessage(com.android.internal.telephony.SmsMessageBase)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.settings.AccessibilitySettings$ToggleAccessibilityServicePreferenceFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.gallery3d.app.AlbumPage: void onSelectionModeChange(int)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	
<com.android.phone.InCallScreen: void access$900(com.android.phone.InCallScreen,com.android.internal.telephony.MmiCode)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.BLUETOOTH	
<android.media.effect.effects.DocumentaryEffect: void apply(int,int,int,int)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.server.wm.InputMonitor: void notifyLidSwitchChanged(long,boolean)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.settings.wifi.AdvancedWifiSettings: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>	android.permission.CHANGE_WIFI_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	
<com.android.exchange.CalendarSyncAdapterService: void performSync(android.content.Context,android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>	android.permission.VIBRATE	android.permission.READ_CALENDAR	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothHandsfree: boolean startVoiceRecognition()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.mms.transaction.RetryScheduler: void update(com.android.mms.transaction.Observable)>	android.permission.READ_SMS	android.permission.VIBRATE	android.permission.WRITE_SMS	android.permission.ACCESS_NETWORK_STATE	
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$InactiveState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.settings.fuelgauge.PowerUsageSummary: void onResume()>	android.permission.BATTERY_STATS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.gallery3d.ui.GestureRecognizer$Listener: boolean onSingleTapUp(float,float)>	android.permission.NFC	android.permission.VIBRATE	
<com.android.contacts.calllog.CallLogQueryHandler: void fetchVoicemailOnly()>	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.phone.SimContacts: boolean onOptionsItemSelected(android.view.MenuItem)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.nfc.NfcService: void onLlcpLinkDeactivated(com.android.nfc.DeviceHost$NfcDepEndpoint)>	android.permission.GET_TASKS	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<android.location.ILocationManager$Stub: void requestLocationUpdatesPI(java.lang.String,android.location.Criteria,long,float,boolean,android.app.PendingIntent)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.internal.telephony.PhoneBase: void dispose()>	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	
<com.android.internal.widget.LockPatternView: void handleActionUp(android.view.MotionEvent)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.calendar.AllInOneActivity$4: void onChange(boolean)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.mms.transaction.SendTransaction: byte[] sendPdu(byte[])>	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	
<com.android.internal.telephony.gsm.SimPhoneBookInterfaceManager: boolean updateAdnRecordsInEfBySearch(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	
<com.android.server.usb.UsbDeviceManager$1: void onUEvent(android.os.UEventObserver$UEvent)>	android.permission.VIBRATE	android.permission.BROADCAST_STICKY	
<com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState: boolean processMessage(android.os.Message)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.contacts.group.GroupEditorFragment$3: void onLoadFinished(android.content.Loader,java.lang.Object)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.bluetooth.CachedBluetoothDevice: void onBondingDockConnect()>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.gallery3d.app.CropImage$LoadDataTask: android.graphics.BitmapRegionDecoder run(com.android.gallery3d.util.ThreadPool$JobContext)>	android.permission.NFC	android.permission.VIBRATE	android.permission.INTERNET	android.permission.SET_WALLPAPER	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.bluetooth.opp.BluetoothOppService: void access$1700(com.android.bluetooth.opp.BluetoothOppService,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.server.am.ActivityManagerService: android.content.ComponentName startServiceLocked(android.app.IApplicationThread,android.content.Intent,java.lang.String,int,int)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<android.location.LocationManager: java.util.List getProviders(android.location.Criteria,boolean)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.internal.telephony.IIccPhoneBook$Stub: java.util.List getAdnRecordsInEf(int)>	android.permission.READ_CONTACTS	android.permission.WAKE_LOCK	
<android.media.AudioService: void disconnectBluetoothSco(int)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<com.android.settings.DreamSettings: void onPause()>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.phone.BluetoothHandsfree$3: android.bluetooth.AtCommandResult handleTestCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.contacts.list.LegacyPostalAddressListAdapter: android.net.Uri getContactMethodUri(int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.activities.PeopleActivity$ContactDetailLoaderFragmentListener$1: void run()>	android.permission.READ_PHONE_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.server.BluetoothService: boolean cancelPairingUserInput(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.editor.EventFieldEditorView: void onOptionalFieldVisibilityChange()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.bluetooth.CachedBluetoothDevice: void connectAutoConnectableProfiles()>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.gallery3d.app.SlideshowPage: void onCreate(android.os.Bundle,android.os.Bundle)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<android.accounts.AccountManager$2: void startTask()>	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.server.wm.WindowManagerService: void sendNewConfiguration()>	android.permission.CHANGE_CONFIGURATION	android.permission.WAKE_LOCK	
<com.android.gallery3d.app.AlbumPage$2: boolean onTouch(android.view.MotionEvent)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.internal.telephony.IccSmsInterfaceManagerProxy: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.settings.DockSettings: void onCreate(android.os.Bundle)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.READ_PHONE_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.settings.widget.SettingsAppWidgetProvider: void updateWidget(android.content.Context)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.gallery3d.app.PhotoPage: void resume()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.settings.ActivityPicker: void onCreate(android.os.Bundle)>	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.BLUETOOTH	
<com.android.exchange.EasSyncService: void sync(com.android.exchange.adapter.AbstractSyncAdapter)>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_CALENDAR	android.permission.ACCESS_NETWORK_STATE	android.permission.WRITE_CALENDAR	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.BrowserActivity: void onSaveInstanceState(android.os.Bundle)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.internal.policy.impl.KeyguardScreenCallback: void pokeWakelock(int)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.contacts.activities.ContactEditorActivity: void onCreate(android.os.Bundle)>	android.permission.NFC	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.app.AlbumPage$2: void render(com.android.gallery3d.ui.GLCanvas)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.contacts.vcard.SelectAccountActivity: void onServiceCompleted(android.content.Intent)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.InCallScreen: void internalResolveIntent(android.content.Intent)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.server.input.InputManagerService$Callbacks: long notifyANR(com.android.server.input.InputApplicationHandle,com.android.server.input.InputWindowHandle)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.internal.policy.impl.GlobalActions$Action: void onPress()>	android.permission.VIBRATE	android.permission.MOUNT_UNMOUNT_FILESYSTEMS	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.internal.app.IBatteryStats$Stub: byte[] getStatistics()>	android.permission.BATTERY_STATS	android.permission.BLUETOOTH	
<com.android.gallery3d.ui.CropView$FaceHighlightView: boolean dispatchTouchEvent(android.view.MotionEvent)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.browser.AddBookmarkPage: android.content.Loader onCreateLoader(int,android.os.Bundle)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.camera.ActivityBase$MyAppBridge: void access$100(com.android.camera.ActivityBase$MyAppBridge,int)>	android.permission.NFC	android.permission.VIBRATE	
<com.android.contacts.editor.PhoneticNameEditorView: void notifyEditorListener()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.email.activity.MessageListFragment$MessageOpenTask: void callOnPostExecuteForTest(java.lang.Object)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<android.server.BluetoothA2dpService: void handleSinkStateChange(android.bluetooth.BluetoothDevice,int,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.PhoneWindowManager: void notifyLidSwitchChanged(long,boolean)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.inputmethod.latin.LatinIME: void commitCurrentAutoCorrection(int,android.view.inputmethod.InputConnection)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.list.ContactListFilterControllerImpl: void <init>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.editor.RawContactEditorView: void setPhotoBitmap(android.graphics.Bitmap)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.providers.media.MediaProvider: android.net.Uri getAlbumArtOutputUri(com.android.providers.media.MediaProvider$DatabaseHelper,android.database.sqlite.SQLiteDatabase,long,android.net.Uri)>	android.permission.READ_EXTERNAL_STORAGE	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.phone.BluetoothHeadsetService$6: boolean disconnectHeadsetInternal(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.email.activity.MessageViewFragmentBase$LoadMessageTask: void onSuccess(java.lang.Object)>	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.gallery3d.util.ThreadPool$Worker: void run()>	android.permission.NFC	android.permission.VIBRATE	android.permission.INTERNET	android.permission.SET_WALLPAPER	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.phone.CallLogAsync$GetLastOutgoingCallTask: java.lang.String doInBackground(com.android.phone.CallLogAsync$GetLastOutgoingCallArgs[])>	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.mms.ui.ComposeMessageActivity: void startMsgListQuery(int)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.deskclock.AlarmAlertFullScreen$1: void onReceive(android.content.Context,android.content.Intent)>	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	
<com.android.phone.CallCard: void displaySecondaryCallStatus(com.android.internal.telephony.CallManager,com.android.internal.telephony.Call)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	
<android.app.IActivityManager: void updatePersistentConfiguration(android.content.res.Configuration)>	android.permission.WRITE_SETTINGS	android.permission.CHANGE_CONFIGURATION	
<com.android.camera.VideoCamera: void checkQualityAndStartPreview()>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<android.server.BluetoothA2dpService: boolean suspendSink(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.browser.UiController: void setActiveTab(com.android.browser.Tab)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.email.MessagingController$13: void run()>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.PhoneUtils: void turnOnSpeaker(android.content.Context,boolean,boolean)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.email.activity.MessageViewFragmentBase$LoadMessageTask: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.ui.SlotView: boolean dispatchTouchEvent(android.view.MotionEvent)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.server.pm.ShutdownThread: void access$000(android.content.Context)>	android.permission.VIBRATE	android.permission.MOUNT_UNMOUNT_FILESYSTEMS	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.inputmethod.latin.UserBinaryDictionary: void loadDictionary()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.gallery3d.app.AlbumPage: void pickPhoto(int)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<android.server.BluetoothBondState: void setBondState(java.lang.String,int,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.server.LocationManagerService: java.lang.String checkPermissionsSafe(java.lang.String,java.lang.String)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.nfc.NfcService: void onRemoteEndpointDiscovered(com.android.nfc.DeviceHost$TagEndpoint)>	android.permission.GET_TASKS	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.gallery3d.app.AlbumSetPage: void access$1000(com.android.gallery3d.app.AlbumSetPage,int)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.phone.InCallScreen: void access$1100(com.android.phone.InCallScreen)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.BLUETOOTH	
<com.android.voicedialer.RecognizerEngine: void setupGrammar()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.providers.contacts.ProfileProvider: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String)>	android.permission.READ_PROFILE	android.permission.WRITE_PROFILE	
<com.android.gallery3d.app.PhotoPage$Model: void resume()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<android.preference.VolumePreference: void onBindDialogView(android.view.View)>	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.server.LocationManagerService: android.os.Bundle getProviderInfo(java.lang.String)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.inputmethod.latin.ExpandableBinaryDictionary: void access$500(com.android.inputmethod.latin.ExpandableBinaryDictionary)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.internal.telephony.cdma.CDMAPhone: boolean updateCurrentCarrierInProvider(java.lang.String)>	android.permission.CHANGE_WIFI_STATE	android.permission.WRITE_SETTINGS	android.permission.CHANGE_CONFIGURATION	android.permission.SET_TIME_ZONE	
<com.android.phone.BluetoothHandsfree$6: android.bluetooth.AtCommandResult handleTestCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.PatternUnlockScreen: void onWindowFocusChanged(boolean)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<android.filterpacks.imageproc.FixedRotationFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.bluetooth.IBluetooth$Stub$Proxy: boolean setDiscoverableTimeout(int)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.settings.SettingsPreferenceFragment: void onCreate(android.os.Bundle)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.READ_PHONE_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pEnablingState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.bluetooth.pbap.BluetoothPbapObexServer: void <init>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.emailcommon.utility.EmailAsyncTask: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.ConnectivityService: void access$1000(com.android.server.ConnectivityService,android.net.NetworkInfo)>	android.permission.CHANGE_WIFI_STATE	android.permission.BROADCAST_STICKY	android.permission.ACCESS_NETWORK_STATE	
<com.android.browser.NavScreen$TabAdapter$1: void onClick(android.view.View)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.internal.policy.impl.LockScreen$GlowPadViewMethods: void onGrabbedStateChange(android.view.View,int)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.inputmethod.latin.LatinIME: void handleClose()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.settings.Settings$DockSettingsActivity: void onResume()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.server.BackupManagerService: android.app.IBackupAgent bindToAgentSynchronous(android.content.pm.ApplicationInfo,int)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.settings.applications.RunningServiceDetails$ActiveDetail: void onClick(android.view.View)>	android.permission.KILL_BACKGROUND_PROCESSES	android.permission.RESTART_PACKAGES	
<com.android.settings.widget.SettingsAppWidgetProvider$StateTracker: void setImageViewResources(android.content.Context,android.widget.RemoteViews)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.ExpandableDictionary: boolean isValidWord(java.lang.CharSequence)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.voicedialer.VoiceContact: java.lang.String redialNumber(android.app.Activity)>	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.email.service.MailService$3: void run()>	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	android.permission.WAKE_LOCK	
<com.android.contacts.model.AccountTypeManagerImpl: java.util.Map getUsableInvitableAccountTypes()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.inputmethod.latin.LatinIME: boolean addWordToDictionary(java.lang.String)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.calendar.EventInfoFragment: void access$4100(com.android.calendar.EventInfoFragment)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.gallery3d.ui.PhotoView: void access$900(com.android.gallery3d.ui.PhotoView,int)>	android.permission.NFC	android.permission.VIBRATE	
<com.android.exchange.ExchangeService$2: int searchMessages(long,com.android.emailcommon.service.SearchParams,long)>	android.permission.VIBRATE	android.permission.READ_CALENDAR	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothHandsfree$IncomingScoAcceptThread: void connectSco()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.settings.Settings$CryptKeeperSettingsActivity: void onResume()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.gallery3d.app.SlideshowDataAdapter$SlideshowSource: long reload()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.internal.widget.multiwaveview.GlowPadView: void handleUp(android.view.MotionEvent)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.USE_CREDENTIALS	android.permission.READ_CONTACTS	android.permission.MANAGE_ACCOUNTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.providers.contacts.LegacyApiSupport: int updatePeople(long,android.content.ContentValues)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.am.ActivityManagerService: void skipCurrentReceiverLocked(com.android.server.am.ProcessRecord)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<android.app.ActivityManagerNative: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.GET_TASKS	android.permission.REORDER_TASKS	android.permission.BROADCAST_STICKY	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.KILL_BACKGROUND_PROCESSES	android.permission.RESTART_PACKAGES	android.permission.WRITE_SETTINGS	android.permission.CHANGE_CONFIGURATION	android.permission.WAKE_LOCK	
<com.android.phone.BluetoothHandsfree$19: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.browser.Controller: com.android.browser.Tab openIncognitoTab()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.contacts.ContactPhotoManagerImpl$LoaderThread: void loadPhotosInBackground()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.internal.policy.impl.KeyguardViewBase: void show()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<android.filterpacks.imageproc.SepiaFilter: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.bluetooth.IBluetooth$Stub: void setBluetoothTethering(boolean)>	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.server.NsdService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.INTERNET	android.permission.WRITE_SETTINGS	
<com.android.contacts.model.EntityModifier: void migrateStructuredName(android.content.Context,com.android.contacts.model.EntityDelta,com.android.contacts.model.EntityDelta,com.android.contacts.model.DataKind)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.settings.bluetooth.CachedBluetoothDevice: void setName(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.exchange.ContactsSyncAdapterService: void performSync(android.content.Context,android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>	android.permission.VIBRATE	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.server.ConnectivityService: boolean teardown(android.net.NetworkStateTracker)>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.phone.BluetoothHandsfree$20: android.bluetooth.AtCommandResult handleReadCommand()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.phone.MobileNetworkSettings: void onResume()>	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<com.android.mms.transaction.TransactionService: void renewMmsConnectivity()>	android.permission.CHANGE_WIFI_STATE	android.permission.READ_SMS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SMS	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.RECEIVE_SMS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.gallery3d.ui.ImportCompleteListener: void goToImportedAlbum()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.gallery3d.data.ComboAlbum: long reload()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.nfc.handover.BluetoothHeadsetHandover: void nextStepConnect()>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.gallery3d.app.AlbumPicker: void onCreate(android.os.Bundle)>	android.permission.NFC	android.permission.VIBRATE	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	android.permission.RECORD_AUDIO	
<com.android.contacts.activities.ConfirmAddDetailActivity$QueryEntitiesTask: long queryForContactId(android.content.ContentResolver,long)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.phone.SimContacts: void onListItemClick(android.widget.ListView,android.view.View,int,long)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.ContactsAsyncHelper$ImageTracker: android.net.Uri getPhotoUri()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.exchange.adapter.EmailSyncAdapter: void getAutomaticLookback()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.PhoneNumberPickerFragment: void onAttach(android.app.Activity)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.vcard.SelectAccountActivity: void onCreate(android.os.Bundle)>	android.permission.NFC	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.net.NetworkPolicyManagerService: void setNetworkPolicies(android.net.NetworkPolicy[])>	android.permission.ACCESS_WIFI_STATE	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	
<android.bluetooth.BluetoothAdapter: boolean startDiscovery()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<android.server.BluetoothEventLoop: void onInputDevicePropertyChanged(java.lang.String,java.lang.String[])>	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.SimPukUnlockScreen: void onClick(android.view.View)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.contacts.editor.LabeledEditorView: void onLabelRebuilt()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.connectivity.Tethering$TetherInterfaceSM$InitialState: void enter()>	android.permission.VIBRATE	android.permission.BROADCAST_STICKY	android.permission.ACCESS_NETWORK_STATE	
<com.android.server.location.ComprehensiveCountryDetector: void access$200(com.android.server.location.ComprehensiveCountryDetector)>	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	
<com.android.camera.EffectsRecorder: void setPreviewSurfaceTexture(android.graphics.SurfaceTexture,int,int)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.internal.telephony.IIccPhoneBook$Stub$Proxy: boolean updateAdnRecordsInEfByIndex(int,java.lang.String,java.lang.String,int,java.lang.String)>	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	
<com.android.internal.telephony.ITelephonyRegistry$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.BROADCAST_STICKY	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	
<com.android.inputmethod.latin.ContactsDictionary: void blockingReloadDictionaryIfRequired()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.browser.Controller: com.android.browser.Tab openTab(java.lang.String,boolean,boolean,boolean)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.mms.data.WorkingMessage: com.android.mms.data.WorkingMessage load(com.android.mms.ui.ComposeMessageActivity,android.net.Uri)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<android.location.ILocationManager$Stub: java.lang.String getBestProvider(android.location.Criteria,boolean)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.gallery3d.app.StateManager: void startStateForResult(java.lang.Class,int,android.os.Bundle)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.browser.PhoneUi: void showWeb(boolean)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.contacts.list.AccountFilterActivity$FilterListAdapter: void <init>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.nfc.NfcService$EnableDisableTask: java.lang.Object doInBackground(java.lang.Object[])>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.BLUETOOTH	
<android.preference.VolumePreference$SeekBarVolumizer: void initSeekBar(android.widget.SeekBar,android.net.Uri)>	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.commands.bmgr.Bmgr: void run(java.lang.String[])>	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.server.am.ActivityManagerService: void killAppAtUsersRequest(com.android.server.am.ProcessRecord,android.app.Dialog)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.gallery3d.ui.SlideshowView: boolean onTouch(android.view.MotionEvent)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.GroupMetaDataLoader: void <init>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.keyboard.KeyboardActionListener$Adapter: boolean onCustomRequest(int)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.settings.accounts.AccountPreferenceBase: void onPause()>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.calendar.month.SimpleDayPickerFragment: void <init>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.server.wm.InputMonitor: int interceptMotionBeforeQueueingWhenScreenOff(int)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.calendar.CalendarController: void sendEvent(java.lang.Object,long,android.text.format.Time,android.text.format.Time,long,int)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler$PhotoListener: void onPhotoSelected(android.graphics.Bitmap)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.bluetooth.BluetoothSettings: void removeAllDevices()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: boolean processMessage(android.os.Message)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.internal.telephony.DataConnection$DcDisconnectingState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.LockScreen$GlowPadViewMethods: void onTrigger(android.view.View,int)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void editSmsMessageItem(com.android.mms.ui.MessageItem)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.gallery3d.app.AlbumSetPage$1: boolean onTouch(android.view.MotionEvent)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.phone.BluetoothHandsfree$ScoSocketConnectThread: void connectSco()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.browser.BrowserActivity: void onDestroy()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.internal.telephony.sip.SipPhone$SipConnection$1: void onCallEstablished(android.net.sip.SipAudioCall)>	android.permission.ACCESS_WIFI_STATE	android.permission.WAKE_LOCK	
<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture getAuthTokenLabel(java.lang.String,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler)>	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<android.content.SyncManager: void scheduleLocalSync(android.accounts.Account,int,java.lang.String)>	android.permission.VIBRATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<com.android.calendar.DeleteEventHelper$2: void onClick(android.content.DialogInterface,int)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.settings.bluetooth.LocalBluetoothAdapter: void setName(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.contacts.model.AccountTypeManagerImpl: com.android.contacts.model.AccountTypeManager getInstance(android.content.Context)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.email.activity.MessageFileViewFragment: void onSaveAttachment(com.android.email.activity.MessageViewFragmentBase$MessageViewAttachmentInfo)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<android.bluetooth.IBluetoothHeadset$Stub: boolean connect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.mms.ui.ComposeMessageActivity: void onConfigurationChanged(android.content.res.Configuration)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothHandsfree$30: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.mms.ui.ComposeMessageActivity: int getDrmMimeSavedStringRsrc(long,boolean)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.settings.DataUsageSummary: void onPrepareOptionsMenu(android.view.Menu)>	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.DateTimeSettings: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.inputmethod.keyboard.LatinKeyboardView: boolean dispatchHoverEvent(android.view.MotionEvent)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.browser.GoogleAccountLogin: void invalidateTokens()>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.camera.ActivityBase: void onCreate(android.os.Bundle)>	android.permission.NFC	android.permission.VIBRATE	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	android.permission.RECORD_AUDIO	
<com.android.browser.UiController: com.android.browser.Tab openTabToHomePage()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler: void onClick(android.view.View)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.activities.ContactSelectionActivity: void onResume()>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.text.ToUpperCase: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.settings.users.UserSettings: void onActivityCreated(android.os.Bundle)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.providers.contacts.ContactsProvider2: long insertSettings(android.net.Uri,android.content.ContentValues)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.editor.PhotoEditorView$1: void onClick(android.view.View)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.bluetooth.HeadsetProfile: void setPreferred(android.bluetooth.BluetoothDevice,boolean)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.mms.data.WorkingMessage$MessageStatusListener: void onMaxPendingMessagesReached()>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.inputmethod.latin.LatinIME: void launchDebugSettings()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.providers.downloads.DownloadInfo: void notifyPauseDueToSize(boolean)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.gallery3d.ui.TileImageView: void renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.settings.Settings$AccountSyncSettingsActivity: void onResume()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.internal.telephony.ISms$Stub: boolean disableCellBroadcast(int)>	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<android.provider.ContactsContract$SyncState: android.util.Pair getWithUri(android.content.ContentProviderClient,android.accounts.Account)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.settings.bluetooth.CachedBluetoothDeviceManager: boolean onDeviceDisappeared(com.android.settings.bluetooth.CachedBluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.server.ConnectivityService: void startLegacyVpn(com.android.internal.net.VpnConfig,java.lang.String[],java.lang.String[])>	android.permission.VIBRATE	android.permission.BROADCAST_STICKY	
<com.android.contacts.list.AccountFilterActivity: void onServiceCompleted(android.content.Intent)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.view.WindowManagerPolicy$WindowManagerFuncs: void rebootSafeMode()>	android.permission.VIBRATE	android.permission.MOUNT_UNMOUNT_FILESYSTEMS	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.email.NotificationController: android.graphics.Bitmap getSenderPhoto(com.android.emailcommon.provider.EmailContent$Message)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothAtPhonebook: com.android.phone.BluetoothAtPhonebook$PhonebookResult getPhonebookResult(java.lang.String,boolean)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<android.bluetooth.IBluetooth: boolean cancelBondProcess(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.list.JoinContactListAdapter: android.net.Uri getContactUri(int,android.database.Cursor,int,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.media.effect.effects.BitmapOverlayEffect: void apply(int,int,int,int)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.telephony.gsm.SmsManager: boolean deleteMessageFromSim(int)>	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.email.activity.MessageViewFragmentBase: void onSaveAttachment(com.android.email.activity.MessageViewFragmentBase$MessageViewAttachmentInfo)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.contacts.GroupMemberLoader: android.net.Uri createUri()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.provider.Contacts$ContactMethods: void addPostalLocation(android.content.Context,long,double,double)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.usb.UsbDeviceManager: void <init>	android.permission.VIBRATE	android.permission.BROADCAST_STICKY	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WRITE_SETTINGS	
<com.android.contacts.list.ContactBrowseListFragment: void finish()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.vpn2.VpnSettings: void onClick(android.content.DialogInterface,int)>	android.permission.VIBRATE	android.permission.BROADCAST_STICKY	android.permission.ACCESS_NETWORK_STATE	
<com.android.server.wm.WindowManagerService$1: void acquired()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<android.filterpacks.ui.SurfaceRenderFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.provider.ContactsContract$SyncState: byte[] get(android.content.ContentProviderClient,android.accounts.Account)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.settings.bluetooth.CachedBluetoothDevice$Callback: void onDeviceAttributesChanged()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.contacts.list.ContactPickerFragment: void finish()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.exchange.EasOutboxService: android.os.Bundle validate(java.lang.Class,com.android.emailcommon.provider.HostAuth,android.content.Context)>	android.permission.READ_CALENDAR	android.permission.WAKE_LOCK	
<com.android.phone.BluetoothHandsfree: void closeConnectedSco()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.bluetooth.pbap.BluetoothPbapService: void access$1100(com.android.bluetooth.pbap.BluetoothPbapService)>	android.permission.BLUETOOTH_ADMIN	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<android.server.BluetoothA2dpService: void onBluetoothEnable()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.gallery3d.ui.SlideshowView: void removeAllComponents()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.server.pm.PackageManagerService: void access$1600(com.android.server.pm.PackageManagerService,com.android.server.pm.PackageManagerService$InstallArgs,boolean,com.android.server.pm.PackageManagerService$PackageInstalledInfo)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.gallery3d.ui.EdgeView: boolean removeComponent(com.android.gallery3d.ui.GLView)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.settings.widget.SettingsAppWidgetProvider$BluetoothStateTracker: int getActualState(android.content.Context)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.phone.CallCard: void updateForegroundCall(com.android.internal.telephony.CallManager)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.settings.bluetooth.BluetoothDevicePreference: void pair()>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.exchange.ExchangeService: void reloadFolderListFailed(long)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.server.NsdService$NsdStateMachine$DisabledState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.settings.SettingsPreferenceFragment: void onActivityCreated(android.os.Bundle)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.view.ScrollerView: void onLayout(boolean,int,int,int,int)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.phone.AccelerometerListener: void access$000(com.android.phone.AccelerometerListener,double,double,double)>	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.settings.bluetooth.HeadsetProfile: int getPreferred(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.camera.ActivityBase: void createCameraScreenNail(boolean)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.internal.telephony.IccCard: void handleIccCardStatus(com.android.internal.telephony.IccCardStatus)>	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	
<com.android.internal.telephony.IccSmsInterfaceManager: boolean enableCellBroadcastRange(int,int)>	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.settings.wifi.p2p.WifiP2pSettings: void onCreate(android.os.Bundle)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.READ_PHONE_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.contacts.ContactsApplication$DelayedInitializer: java.lang.Object doInBackground(java.lang.Object[])>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.SettingsPreferenceFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.inputmethod.keyboard.PointerTracker: void onDownEventInternal(int,int,long)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.phone.InCallScreen: void requestRemoveProviderInfoWithDelay()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.spellcheck.DictionaryPool: com.android.inputmethod.latin.spellcheck.DictAndProximity take()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.deskclock.AlarmReceiver: void access$000(com.android.deskclock.AlarmReceiver,android.content.Context,android.content.Intent)>	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.phone.ManageConferenceUtils: void updateManageConferenceRow(int,com.android.internal.telephony.Connection,boolean)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	
<com.android.contacts.list.AccountFilterActivity: java.util.List loadAccountFilters(android.content.Context)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.net.wifi.IWifiManager: void setCountryCode(java.lang.String,boolean)>	android.permission.CHANGE_WIFI_STATE	android.permission.WRITE_SETTINGS	
<com.android.providers.contacts.LegacyApiSupport: android.net.Uri findFirstDataRow(long,java.lang.String)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.detail.ContactLoaderFragment$1: void onLoadFinished(android.content.Loader,com.android.contacts.ContactLoader$Result)>	android.permission.READ_PHONE_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.ui.UndoBarView: boolean dispatchTouchEvent(android.view.MotionEvent)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.settings.accounts.ManageAccountsSettings: void onResume()>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_USER_DICTIONARY	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.browser.AddBookmarkPage: void setupTopCrumb()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.gallery3d.app.AlbumPage$2: boolean dispatchTouchEvent(android.view.MotionEvent)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<android.view.IWindowManager$Stub: void setForcedDisplaySize(int,int)>	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.mms.data.Conversation$ConversationQueryHandler: void onDeleteComplete(int,java.lang.Object,int)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.email.GroupMessagingListener: void loadAttachmentStarted(long,long,long,boolean)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.telephony.IccRecords: void onReady()>	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	
<com.android.contacts.editor.ContactEditorFragment: void onActivityCreated(android.os.Bundle)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.bluetooth.IBluetoothA2dp$Stub$Proxy: boolean connect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.settings.nfc.AndroidBeam: void onCheckedChanged(android.widget.CompoundButton,boolean)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.BLUETOOTH	
<com.android.settings.DreamSettings: void onActivityCreated(android.os.Bundle)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.exchange.ExchangeService$1$2: void call(com.android.emailcommon.service.IEmailServiceCallback)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.providers.media.MediaProvider: android.os.ParcelFileDescriptor makeThumbInternal(com.android.providers.media.MediaProvider$ThumbData)>	android.permission.READ_EXTERNAL_STORAGE	android.permission.WRITE_EXTERNAL_STORAGE	
<android.net.sip.SipAudioCall: void startAudioInternal()>	android.permission.ACCESS_WIFI_STATE	android.permission.WAKE_LOCK	
<com.android.contacts.editor.ContactEditorFragment$PhotoHandler: boolean handlePhotoActivityResult(int,int,android.content.Intent)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.InCallTouchUi: void onGrabbedStateChange(android.view.View,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.server.location.GpsLocationProvider: void requestRefLocation(int)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.phone.BluetoothHandsfree$30: android.bluetooth.AtCommandResult handleReadCommand()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<android.net.sip.ISipService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.USE_SIP	android.permission.WAKE_LOCK	
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler: int getPhotoPickSize()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.filterpacks.imageproc.DuotoneFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.wallpaper.galaxy.GalaxyRS: void start()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.server.connectivity.Tethering$TetherInterfaceSM$UnavailableState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.server.LocationManagerService: java.lang.String getBestProvider(android.location.Criteria,boolean)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pDisabledState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.contacts.activities.ConfirmAddDetailActivity: void setEntityDeltaList(com.android.contacts.model.EntityDeltaList)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.bluetooth.IBluetooth$Stub$Proxy: boolean setName(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.contacts.detail.PhotoSelectionHandler$PhotoActionListener: void onPhotoSelected(android.graphics.Bitmap)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.camera.VideoCamera: void gotoGallery()>	android.permission.NFC	android.permission.VIBRATE	
<com.android.email.Controller$LegacyListener: void loadAttachmentFailed(long,long,long,com.android.emailcommon.mail.MessagingException,boolean)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.ShortcutIntentBuilder$PhoneNumberLoadingAsyncTask: java.lang.Void doInBackground(java.lang.Void[])>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.calllog.ContactInfoHelper: com.android.contacts.calllog.ContactInfo queryContactInfoForSipAddress(java.lang.String)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.bluetooth.CachedBluetoothDevice: void dispatchAttributesChanged()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.KeyguardViewProperties: com.android.internal.policy.impl.KeyguardViewBase createKeyguardView(android.content.Context,com.android.internal.policy.impl.KeyguardViewCallback,com.android.internal.policy.impl.KeyguardUpdateMonitor,com.android.internal.policy.impl.KeyguardWindowController)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.server.LocationManagerService: boolean _isProviderEnabledLocked(java.lang.String)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.exchange.EasOutboxService: boolean setupService()>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.detail.ContactLoaderFragment$ContactLoaderFragmentListener: void onDetailsLoaded(com.android.contacts.ContactLoader$Result)>	android.permission.READ_PHONE_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.policy.impl.LockPatternKeyguardView: void recreateLockScreen()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.browser.TabControl: void restoreState(android.os.Bundle,long,boolean,boolean)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.server.net.NetworkPolicyManagerService: android.net.NetworkQuotaInfo getNetworkQuotaInfoUnchecked(android.net.NetworkState)>	android.permission.ACCESS_WIFI_STATE	android.permission.READ_PHONE_STATE	
<com.android.email.activity.MessageCompose$SendOrSaveMessageTask: java.lang.Object doInBackground(java.lang.Object[])>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.util.Recycler: boolean anyThreadOverLimit(android.content.Context)>	android.permission.READ_SMS	android.permission.RECEIVE_SMS	
<com.android.inputmethod.latin.suggestions.MoreSuggestionsView$1: void onPressKey(int)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.net.sip.ISipService$Stub$Proxy: void close(java.lang.String)>	android.permission.USE_SIP	android.permission.WAKE_LOCK	
<com.android.contacts.vcard.SelectAccountActivity: void onResume()>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.policy.impl.LockPatternKeyguardView$3: void takeEmergencyCallAction()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.calendar.agenda.AgendaFragment: void goTo(com.android.calendar.CalendarController$EventInfo,boolean)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.settings.Settings$HeaderAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.phone.BluetoothHandsfree$18: android.bluetooth.AtCommandResult handleActionCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.exchange.EmailSyncAdapterService$SyncAdapterImpl: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<android.bluetooth.BluetoothDeviceProfileState: boolean access$6700(android.bluetooth.BluetoothDeviceProfileState,int,boolean)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.systemui.statusbar.BaseStatusBar: void start()>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<android.filterpacks.base.NullFilter: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.mms.transaction.ReadRecTransaction: byte[] sendPdu(long,byte[])>	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	
<com.android.contacts.vcard.ImportProcessor: void runInternal()>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.Controller: boolean shouldOverrideUrlLoading(com.android.browser.Tab,android.webkit.WebView,java.lang.String)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.internal.telephony.IccSmsInterfaceManagerProxy: boolean disableCellBroadcastRange(int,int)>	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<android.bluetooth.BluetoothDeviceProfileState$OutgoingA2dp: boolean processMessage(android.os.Message)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.contacts.activities.AttachPhotoActivity$2: void onLoadComplete(android.content.Loader,java.lang.Object)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.bluetooth.BluetoothProfileState$PendingCommandState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.vcard.VCardEntry$EntryElementIterator: boolean onElement(com.android.vcard.VCardEntry$EntryElement)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void addCallAndContactMenuItems(android.view.ContextMenu,com.android.mms.ui.ComposeMessageActivity$MsgListMenuClickListener,com.android.mms.ui.MessageItem)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.ManageSimMessages$3: void onClick(android.content.DialogInterface,int)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.mms.data.WorkingMessage: boolean access$300(com.android.mms.data.WorkingMessage,android.net.Uri)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.email.service.PopImapSyncAdapterService$SyncAdapterImpl: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.READ_SYNC_SETTINGS	
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine$P2pNotSupportedState: void enter()>	android.permission.CHANGE_WIFI_STATE	android.permission.GET_TASKS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.contacts.list.JoinContactListAdapter: void bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.calllog.ContactInfoHelper: com.android.contacts.calllog.ContactInfo queryContactInfoForPhoneNumber(java.lang.String,java.lang.String)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.imageproc.ImageCombineFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.gallery3d.app.AlbumPage$2: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<android.filterpacks.imageproc.ImageEncoder: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.gallery3d.app.PhotoDataAdapter: void moveTo(int)>	android.permission.NFC	android.permission.VIBRATE	
<com.android.contacts.list.LegacyPhoneNumberListAdapter: android.net.Uri getContactUri(int,android.database.Cursor,int,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.vcard.VCardEntry: void iterateOneList(java.util.List,com.android.vcard.VCardEntry$EntryElementIterator)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.app.CropImage$LoadBitmapDataTask: android.graphics.Bitmap run(com.android.gallery3d.util.ThreadPool$JobContext)>	android.permission.NFC	android.permission.VIBRATE	android.permission.INTERNET	android.permission.SET_WALLPAPER	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.mms.transaction.RetrieveTransaction: void notifyObservers()>	android.permission.CHANGE_WIFI_STATE	android.permission.READ_SMS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SMS	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.RECEIVE_SMS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.settings.inputmethod.InputMethodAndLanguageSettings: void onResume()>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_USER_DICTIONARY	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.providers.downloads.DownloadThread: void reportProgress(com.android.providers.downloads.DownloadThread$State,com.android.providers.downloads.DownloadThread$InnerState)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.server.location.ComprehensiveCountryDetector: void addPhoneStateListener()>	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	
<com.android.settings.bluetooth.DeviceProfilesSettings: void addPreferencesForProfiles()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<android.net.wifi.WifiStateMachine$SoftApStartedState: boolean processMessage(android.os.Message)>	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.gallery3d.ui.SurfaceTextureScreenNail: void draw(com.android.gallery3d.ui.GLCanvas,int,int,int,int)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.commands.am.Am: void run(java.lang.String[])>	android.permission.KILL_BACKGROUND_PROCESSES	android.permission.RESTART_PACKAGES	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.settings.AccessibilitySettings: void onResume()>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_USER_DICTIONARY	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.internal.telephony.sip.SipPhoneBase: void dispose()>	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	
<com.android.exchange.adapter.ContactsSyncAdapter: void cleanup()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.DefaultContactBrowseListFragment: void restoreSelectedUri(boolean)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.ContactsApplication: java.lang.Object getSystemService(java.lang.String)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.PhoneUtils: void setAudioMode(com.android.internal.telephony.CallManager)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<android.provider.ContactsContract$RawContacts: android.net.Uri getContactLookupUri(android.content.ContentResolver,android.net.Uri)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.app.SlideshowPage$1: boolean onTouch(android.view.MotionEvent)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.internal.policy.impl.LockPatternKeyguardView$3: void pokeWakelock()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.providers.contacts.ContactsProvider2: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.editor.ContactEditorFragment: void showJoinAggregateActivity(android.net.Uri)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.ConversationList: boolean onContextItemSelected(android.view.MenuItem)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.sip.SipService: void close(java.lang.String)>	android.permission.USE_SIP	android.permission.WAKE_LOCK	
<com.android.internal.telephony.cdma.CDMALTEPhone: void init(android.content.Context,com.android.internal.telephony.PhoneNotifier)>	android.permission.CHANGE_WIFI_STATE	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	android.permission.CHANGE_CONFIGURATION	android.permission.SET_TIME_ZONE	android.permission.WAKE_LOCK	
<com.android.settings.deviceinfo.Memory: void onActivityCreated(android.os.Bundle)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.NavScreen: void onClick(android.view.View)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.inputmethod.keyboard.internal.PointerTrackerQueue: void releaseAllPointersOlderThan(com.android.inputmethod.keyboard.PointerTracker,long)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.internal.telephony.ISms$Stub$Proxy: boolean enableCellBroadcastRange(int,int)>	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.settings.inputmethod.InputMethodAndSubtypeEnabler: void onCreate(android.os.Bundle)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.READ_PHONE_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.contacts.list.ShortcutIntentBuilder$LoadingAsyncTask: void loadPhoto()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.net.IConnectivityManager$Stub: void setNetworkPreference(int)>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.internal.util.IState: boolean processMessage(android.os.Message)>	android.permission.CHANGE_WIFI_STATE	android.permission.GET_TASKS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.INTERNET	android.permission.BROADCAST_STICKY	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.phone.CallNotifier: void silenceRinger()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<com.android.settings.WirelessSettings: void onActivityCreated(android.os.Bundle)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.transaction.SmsReceiverService: void messageFailedToSend(android.net.Uri,int)>	android.permission.READ_SMS	android.permission.VIBRATE	
<com.android.server.am.ActivityManagerService: void access$200(com.android.server.am.ActivityManagerService,com.android.server.am.ProcessRecord)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.browser.BrowserSettings: void <init>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary: void syncReloadDictionaryIfRequired()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.calendar.CalendarUtils$TimeZoneUtils: void setTimeZone(android.content.Context,java.lang.String)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.gallery3d.ui.GLView: boolean dispatchTouchEvent(android.view.MotionEvent)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.nfc.handover.BluetoothHeadsetHandover: void start()>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.email.activity.MessageFileViewFragment: void onOpenAttachment(com.android.email.activity.MessageViewFragmentBase$MessageViewAttachmentInfo)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.camera.EffectsRecorder$4: void onRunnerDone(int)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.mms.data.Conversation: void startDelete(com.android.mms.data.Conversation$ConversationQueryHandler,int,boolean,long)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.emailcommon.service.IEmailServiceCallback$Stub: void loadAttachmentStatus(long,long,int,int)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.CallLogAsync$AddCallTask: java.lang.Object doInBackground(java.lang.Object[])>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WRITE_CALL_LOG	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.ui.CropView$HighlightRectangle: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void handlePollStateResult(int,android.os.AsyncResult)>	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	android.permission.SET_TIME_ZONE	
<com.android.internal.policy.impl.LockPatternKeyguardView$3: void reportFailedUnlockAttempt()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.contacts.model.AccountTypeManagerImpl: void processBroadcastIntent(android.content.Intent)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.latin.SynchronouslyLoadedUserBinaryDictionary: boolean isValidWord(java.lang.CharSequence)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.settings.AccessibilitySettings: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.internal.widget.multiwaveview.GlowPadView: void handleMove(android.view.MotionEvent)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.USE_CREDENTIALS	android.permission.READ_CONTACTS	android.permission.MANAGE_ACCOUNTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<android.net.DhcpStateMachine$DefaultState: void enter()>	android.permission.CHANGE_WIFI_STATE	android.permission.GET_TASKS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.phone.BluetoothHandsfree$2: android.bluetooth.AtCommandResult headsetButtonPress()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<android.filterpacks.base.GLTextureSource: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.contacts.editor.AggregationSuggestionEngine: void onNameChange(com.android.contacts.model.EntityDelta$ValuesDelta)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.calendar.month.SimpleDayPickerFragment: boolean goTo(long,boolean,boolean,boolean)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.camera.PanoramaActivity: void onResume()>	android.permission.NFC	android.permission.VIBRATE	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	android.permission.RECORD_AUDIO	
<com.android.nfc.P2pLinkManager: void onLlcpActivated()>	android.permission.GET_TASKS	android.permission.VIBRATE	
<com.android.contacts.widget.IndexerListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.accounts.AccountManager$9: android.accounts.AccountManagerFuture start()>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.vcard.VCardEntry$BirthdayData: void constructInsertOperation(java.util.List,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothHandsfree$4: android.bluetooth.AtCommandResult handleTestCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.SimUnlockScreen: void <init>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.mms.transaction.RetryScheduler: void scheduleRetry(android.net.Uri)>	android.permission.READ_SMS	android.permission.VIBRATE	android.permission.WRITE_SMS	
<com.android.contacts.CallDetailActivity$1UpdateContactDetailsTask: java.lang.Object doInBackground(java.lang.Object[])>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.ManageSimMessages: void startQuery()>	android.permission.READ_SMS	android.permission.RECEIVE_SMS	
<com.android.settings.widget.SettingsAppWidgetProvider$WifiStateTracker$1: java.lang.Object doInBackground(java.lang.Object[])>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	
<com.android.contacts.ContactLoader$Result: boolean isWritableContact(android.content.Context)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.imageproc.ToGrayFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.settings.bluetooth.CachedBluetoothDevice: void fillData()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.server.am.ActivityStack: com.android.server.am.ActivityRecord activityIdleInternal(android.os.IBinder,boolean,android.content.res.Configuration)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.settings.accounts.ManageAccountsSettings: void onPause()>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void access$2700(com.android.mms.ui.ComposeMessageActivity,android.view.ContextMenu,com.android.mms.ui.ComposeMessageActivity$MsgListMenuClickListener,com.android.mms.ui.MessageItem)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.nfc.INfcAdapter: boolean disableNdefPush()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.BLUETOOTH	
<com.android.gallery3d.app.CropImage$LoadBitmapDataTask: java.lang.Object run(com.android.gallery3d.util.ThreadPool$JobContext)>	android.permission.NFC	android.permission.VIBRATE	android.permission.INTERNET	android.permission.SET_WALLPAPER	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<android.filterpacks.imageproc.FixedRotationFilter: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.calendar.DeleteEventHelper: void deleteRepeatingEvent(int)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.phone.CdmaSystemSelectListPreference$MyHandler: void handleQueryCdmaRoamingPreference(android.os.Message)>	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.calendar.event.AttendeesView: android.view.View access$100(com.android.calendar.event.AttendeesView,com.android.calendar.event.EditEventHelper$AttendeeItem)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.filterpacks.imageproc.ToRGBFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.mms.data.Contact$ContactsCache: com.android.mms.data.Contact getContactInfoForPhoneNumber(java.lang.String)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.internal.policy.impl.KeyguardViewMediator: void access$1800(com.android.internal.policy.impl.KeyguardViewMediator,int)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.mms.transaction.TransactionService: int onStartCommand(android.content.Intent,int,int)>	android.permission.CHANGE_WIFI_STATE	android.permission.READ_SMS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SMS	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.RECEIVE_SMS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.internal.telephony.gsm.GSMPhone: void dispose()>	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	
<android.filterpacks.videosrc.CameraSource: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.email.SecurityPolicy: void onAdminEnabled(boolean)>	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	android.permission.WAKE_LOCK	
<android.content.SyncManager$SyncAlarmIntentReceiver: void onReceive(android.content.Context,android.content.Intent)>	android.permission.VIBRATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<android.content.SyncManager$ActiveSyncContext: void binderDied()>	android.permission.VIBRATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<com.android.mms.ui.AttachmentEditor: boolean update(com.android.mms.data.WorkingMessage)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.XLargeUi: void setUseQuickControls(boolean)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.contacts.editor.ContactEditorFragment: boolean save(int)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.providers.contacts.LegacyApiSupport: java.lang.String getType(android.net.Uri)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.base.FrameBranch: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.email.activity.UIControllerTwoPane$RefreshTask: void callOnPostExecuteForTest(java.lang.Object)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.CustomContactListFilterActivity$GroupDelta: android.content.ContentProviderOperation buildDiff()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.inputmethod.KeyboardLayoutPickerFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.settings.bluetooth.DockService: boolean msgTypeUndockedPermanent(android.bluetooth.BluetoothDevice,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.phone.InCallScreen$14: void onClick(android.content.DialogInterface,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.BLUETOOTH	
<android.filterpacks.imageproc.ContrastFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.server.connectivity.Tethering$TetherMasterSM$InitialState: boolean turnOffUpstreamMobileConnection()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.contacts.list.EmailAddressPickerFragment: void setQueryString(java.lang.String,boolean)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.content.SyncManager: void sendSyncAlarmMessage()>	android.permission.VIBRATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void access$7000(com.android.mms.ui.ComposeMessageActivity,int)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.settings.widget.SettingsAppWidgetProvider$WifiStateTracker: int getTriState(android.content.Context)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.detail.ContactDetailFragment$MakeLocalCopyQuickFix: void execute()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.bluetooth.LocalBluetoothProfile: boolean disconnect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.contacts.list.PostalAddressPickerFragment: void prepareEmptyView()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	
<android.filterfw.core.FilterFunction: android.filterfw.core.Frame executeWithArgList(java.lang.Object[])>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.contacts.list.DefaultContactListAdapter: void bindQuickContact(com.android.contacts.list.ContactListItemView,int,android.database.Cursor,int,int,int,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.bluetooth.IBluetoothPbap$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.camera.ActivityBase$MyAppBridge: void onPreviewTextureCopied()>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<android.filterpacks.imageproc.DrawRectFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.email.activity.MessageCompose$SendOrSaveMessageTask: java.lang.Long doInBackground(java.lang.Void[])>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.activities.ContactSelectionActivity: boolean onOptionsItemSelected(android.view.MenuItem)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.app.ManageCachePage$1: boolean removeComponent(com.android.gallery3d.ui.GLView)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.detail.PhotoSelectionHandler$PhotoActionListener: void onRemovePictureChosen()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.latin.LatinIME: void loadSettings()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.group.GroupEditorFragment$2: void onLoadFinished(android.content.Loader,java.lang.Object)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.nfc.INfcAdapter$Stub$Proxy: boolean enableNdefPush()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.BLUETOOTH	
<com.android.contacts.editor.StructuredNameEditorView: void notifyEditorListener()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.bluetooth.CachedBluetoothDevice: void refresh()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.nfc.P2pLinkManager$SendTask: java.lang.Object doInBackground(java.lang.Object[])>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.contacts.GroupMetaDataLoader: android.net.Uri ensureIsGroupUri(android.net.Uri)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.wm.WindowManagerService: void setForcedDisplaySize(int,int)>	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.internal.policy.impl.FaceUnlock: void handleUnlock()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<android.filterpacks.imageproc.ToRGBFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.camera.VideoCamera: void updateRecordingTime()>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.phone.BluetoothHandsfree: void access$3200(com.android.phone.BluetoothHandsfree)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.gallery3d.ui.TileImageView: void render(com.android.gallery3d.ui.GLCanvas)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.camera.VideoCamera: void access$2100(com.android.camera.VideoCamera)>	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.RECORD_AUDIO	
<com.android.contacts.list.EmailAddressPickerFragment: void onLoadFinished(android.content.Loader,android.database.Cursor)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.InCallScreen: void updateAfterRadioTechnologyChange()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.mms.ui.ComposeMessageActivity: boolean access$3700(com.android.mms.ui.ComposeMessageActivity,long)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.contacts.activities.GroupEditorActivity: void onCreate(android.os.Bundle)>	android.permission.NFC	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.media.effect.effects.SharpenEffect: void apply(int,int,int,int)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.app.ActivityManagerNative: boolean handleApplicationWtf(android.os.IBinder,java.lang.String,android.app.ApplicationErrorReport$CrashInfo)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.exchange.EasOutboxService: int sendMessage(java.io.File,long)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.calendar.event.AttendeesView: android.view.View updateAttendeeView(com.android.calendar.event.EditEventHelper$AttendeeItem)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.phone.BluetoothHeadsetService$6: boolean startScoUsingVirtualVoiceCall(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.internal.telephony.sip.SipPhoneBase: void <init>	android.permission.CHANGE_WIFI_STATE	android.permission.WRITE_SETTINGS	android.permission.CHANGE_CONFIGURATION	
<com.android.phone.ManageConferenceUtils: void updateManageConferencePanel(java.util.List)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	
<com.android.calendar.DeleteEventHelper: void access$1200(com.android.calendar.DeleteEventHelper,int)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.internal.telephony.cdma.CdmaLteUiccRecords: void onReady()>	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	
<com.android.nfc.NfcService: void sendMessage(int,java.lang.Object)>	android.permission.GET_TASKS	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.UserHistoryDictionary: void getBigrams(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.mms.ui.ComposeMessageActivity: void onClick(android.view.View)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.ui.PhotoView: boolean switchWithCaptureAnimationLocked(int)>	android.permission.NFC	android.permission.VIBRATE	
<com.android.contacts.editor.ContactEditorFragment: boolean isContactWritable()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.server.BluetoothAdapterStateMachine$WarmUp: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.settings.DisplaySettings: void onActivityCreated(android.os.Bundle)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.vcard.NfcImportVCardActivity: void onImportFinished(com.android.contacts.vcard.ImportRequest,int,android.net.Uri)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.data.Contact: java.util.List getByPhoneUris(android.os.Parcelable[])>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.commands.monkey.Monkey: int run(java.lang.String[])>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.server.WifiService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.CHANGE_WIFI_STATE	android.permission.CHANGE_WIFI_MULTICAST_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.browser.PhoneUi: void setUseQuickControls(boolean)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.server.BluetoothEventLoop: void onNetworkDeviceDisconnected(java.lang.String)>	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	
<android.content.SyncManager$SyncHandler: long maybeStartNextSyncLocked()>	android.permission.VIBRATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<com.android.browser.UiController: void handleNewIntent(android.content.Intent)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.filterpacks.base.FrameBranch: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.filterpacks.imageproc.BitmapSource: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.gallery3d.ui.GLView: void render(com.android.gallery3d.ui.GLCanvas)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.mms.data.Contact$ContactsCache: com.android.mms.data.Contact getContactInfo(com.android.mms.data.Contact)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.mms.transaction.SmsMessageSender: boolean sendMessage(long)>	android.permission.READ_SMS	android.permission.SEND_SMS	
<com.android.contacts.list.CustomContactListFilterActivity: void onServiceCompleted(android.content.Intent)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.imageproc.ToRGBAFilter: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.internal.policy.impl.LockPatternKeyguardView: void updateScreen(com.android.internal.policy.impl.LockPatternKeyguardView$Mode,boolean)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.emailcommon.service.IEmailService$Stub$Proxy: void loadAttachment(long,boolean)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.ComposeMessageActivity: android.net.Uri getContactUriForPhoneNumber(java.lang.String)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.imageproc.BrightnessFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.bluetooth.IBluetoothA2dp$Stub: boolean connectSinkInternal(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.phone.BluetoothHandsfree$2: android.bluetooth.AtCommandResult handleTestCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.internal.telephony.sip.SipPhone: void <init>	android.permission.CHANGE_WIFI_STATE	android.permission.WRITE_SETTINGS	android.permission.CHANGE_CONFIGURATION	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void access$5000(com.android.mms.ui.ComposeMessageActivity)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<android.location.ILocationManager$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.ACCESS_MOCK_LOCATION	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_LOCATION_EXTRA_COMMANDS	
<com.android.browser.AddBookmarkPage: void onClick(android.view.View)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.nfc.nxp.NativeNfcManager: void notifyNdefMessageListeners(com.android.nfc.nxp.NativeNfcTag)>	android.permission.GET_TASKS	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<android.bluetooth.BluetoothHeadset: boolean setPriority(android.bluetooth.BluetoothDevice,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.list.ContactListFilterController: void selectCustomFilter()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.policy.impl.SimUnlockScreen: void checkPin()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.contacts.list.JoinContactListFragment: void onLoadFinished(android.content.Loader,java.lang.Object)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.calendar.DayView: void switchViews(boolean)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.contacts.group.GroupEditorFragment: void bindGroupMetaData(android.database.Cursor)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.text.StringSource: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.vcard.VCardEntry$SipData: void constructInsertOperation(java.util.List,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.Controller: void onPause()>	android.permission.NFC	android.permission.WAKE_LOCK	
<android.net.IConnectivityManager$Stub$Proxy: void startLegacyVpn(com.android.internal.net.VpnConfig,java.lang.String[],java.lang.String[])>	android.permission.VIBRATE	android.permission.BROADCAST_STICKY	
<com.android.phone.BluetoothHandsfree$13: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.internal.app.ChooserActivity: void onCreate(android.os.Bundle)>	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.BLUETOOTH	
<com.android.browser.view.PieMenu$PieView$OnLayoutListener: void onLayout(int,int,boolean)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.calendar.AllInOneActivity: void onUserLeaveHint()>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.settings.Settings$RunningServicesActivity: void onResume()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.contacts.model.AccountTypeManagerImpl: void onStatusChanged(int)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.telephony.cat.RilMessageDecoder$StateCmdParamsReady: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.LockScreen: boolean onKeyDown(int,android.view.KeyEvent)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.phone.BluetoothHandsfree: boolean audioOn()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.providers.contacts.LegacyApiSupport: int updatePhones(long,android.content.ContentValues)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.calendar.SearchActivity: void eventsChanged()>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.providers.downloads.DownloadService: void updateDownload(com.android.providers.downloads.DownloadInfo$Reader,com.android.providers.downloads.DownloadInfo,long)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	android.permission.ACCESS_NETWORK_STATE	
<com.android.server.NsdService$NsdStateMachine$DefaultState: void enter()>	android.permission.CHANGE_WIFI_STATE	android.permission.GET_TASKS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.contacts.quickcontact.QuickContactActivity: void access$700(com.android.contacts.quickcontact.QuickContactActivity,com.android.contacts.ContactLoader$Result)>	android.permission.READ_PHONE_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.email.Controller: int searchMessages(long,com.android.emailcommon.service.SearchParams)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.accounts.SyncSettings: void onResume()>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_USER_DICTIONARY	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<android.filterpacks.videosrc.SurfaceTextureSource: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.bluetooth.BluetoothInputDevice: boolean connect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.phone.NotificationMgr: void updateNotificationAndLaunchIncomingCallUi()>	android.permission.VIBRATE	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	
<com.android.nfc.P2pLinkManager: void enableDisable(boolean,boolean)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.BLUETOOTH	
<com.android.calendar.DayFragment: void handleEvent(com.android.calendar.CalendarController$EventInfo)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.phone.OtaUtils: void onClickOtaActivateNextButton()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.BLUETOOTH	
<com.android.internal.telephony.ITelephony$Stub: android.os.Bundle getCellLocation()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.exchange.adapter.ContactsSyncAdapter$ContactOperations: void delete(long)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.Controller: boolean onOptionsItemSelected(android.view.MenuItem)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.camera.ActivityBase: void onResume()>	android.permission.NFC	android.permission.VIBRATE	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	android.permission.RECORD_AUDIO	
<com.android.contacts.list.ContactListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.accounts.ChooseTypeAndAccountActivity: void onCreate(android.os.Bundle)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.phone.InCallScreen: void onDialerClose(boolean)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.activities.PeopleActivity: void onProviderStatusChange()>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.Tab: void persistThumbnail()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.phone.sip.SipEditor: void unregisterOldPrimaryAccount()>	android.permission.USE_SIP	android.permission.WAKE_LOCK	
<com.android.internal.policy.impl.LockPatternKeyguardView: void verifyUnlock()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.phone.OtaUtils: void otaShowActivateScreen()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.BLUETOOTH	
<com.android.mms.model.SlideshowModel: com.google.android.mms.pdu.PduBody getPduBody(android.content.Context,android.net.Uri)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.contacts.group.GroupEditorFragment: void onAccountChosen(com.android.contacts.model.AccountWithDataSet,android.os.Bundle)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.bluetooth.BluetoothDeviceProfileState$OutgoingHandsfree: boolean processMessage(android.os.Message)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.phone.InCallScreen: void endInCallScreenSession()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.exchange.ExchangeService$ServiceCallbackWrapper: void call(com.android.emailcommon.service.IEmailServiceCallback)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.telephony.ISms$Stub: boolean updateMessageOnIccEf(int,int,byte[])>	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.contacts.list.JoinContactListFragment: void prepareEmptyView()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	
<com.android.inputmethod.latin.ExpandableDictionary: void startDictionaryLoadingTaskLocked()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.net.sip.ISipService$Stub: void close(java.lang.String)>	android.permission.USE_SIP	android.permission.WAKE_LOCK	
<com.android.camera.Camera: void initializeFirstTime()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.gallery3d.ui.ActionModeHandler$1: boolean onMenuItemClick(android.view.MenuItem)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.internal.widget.TransportControlView: void onClick(android.view.View)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<android.filterpacks.imageproc.BrightnessFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.contacts.activities.GroupBrowserActivity: void onResume()>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.app.DialogPicker: void onConfigurationChanged(android.content.res.Configuration)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.gallery3d.app.ActivityState: void onBackPressed()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.list.OnContactBrowserActionListener: void onFinishAction()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.ContactEntryListFragment: void onLoadFinished(android.content.Loader,java.lang.Object)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.telephony.IccSmsInterfaceManager: boolean copyMessageToIccEf(int,byte[],byte[])>	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.contacts.editor.ContactEditorFragment: void onActivityResult(int,int,android.content.Intent)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.imageproc.FisheyeFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.telephony.SmsManager: boolean updateMessageOnIcc(int,int,byte[])>	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.server.ConnectivityService: void handleConnect(android.net.NetworkInfo)>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<android.accounts.AccountManager: android.accounts.AccountManagerFuture updateCredentials(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<android.filterpacks.imageproc.ToGrayFilter: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.contacts.list.LegacyPhoneNumberListAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthTokenByFeatures(java.lang.String,java.lang.String,java.lang.String[],android.app.Activity,android.os.Bundle,android.os.Bundle,android.accounts.AccountManagerCallback,android.os.Handler)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.phone.NotificationMgr$QueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>	android.permission.VIBRATE	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.server.pm.ShutdownThread: void rebootOrShutdown(boolean,java.lang.String)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	
<android.bluetooth.BluetoothDeviceProfileState: void access$6800(android.bluetooth.BluetoothDeviceProfileState)>	android.permission.BLUETOOTH_ADMIN	android.permission.WAKE_LOCK	
<com.android.contacts.widget.PinnedHeaderListAdapter: android.view.View getView(int,android.database.Cursor,int,android.view.View,android.view.ViewGroup)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.providers.settings.SettingsBackupAgent: void onRestoreFile(android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.WRITE_SETTINGS	android.permission.CHANGE_CONFIGURATION	
<com.android.mail.providers.UIProvider: void incrementRecipientsTimesContacted(android.content.Context,java.lang.String)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.detail.PhotoSelectionHandler: int getWritableEntityIndex()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.providers.settings.SettingsHelper: void setLocaleData(byte[],int)>	android.permission.CHANGE_CONFIGURATION	android.permission.WAKE_LOCK	
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.bluetooth.pbap.BluetoothPbapObexServer: int pullVcardListing(byte[],com.android.bluetooth.pbap.BluetoothPbapObexServer$AppParamValue,javax.obex.HeaderSet,javax.obex.Operation)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.phone.BluetoothHandsfree$29: android.bluetooth.AtCommandResult handleTestCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.browser.Tab$7: void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)>	android.permission.VIBRATE	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.WRITE_EXTERNAL_STORAGE	android.permission.GET_ACCOUNTS	
<com.android.exchange.adapter.ItemOperationsParser: void parseFetch()>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.DevelopmentSettings: void onCheckedChanged(android.widget.CompoundButton,boolean)>	android.permission.READ_EXTERNAL_STORAGE	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.wallpaper.grass.GrassRS: void updateLocation()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.contacts.activities.PeopleActivity: void access$700(com.android.contacts.activities.PeopleActivity,android.net.Uri)>	android.permission.READ_PHONE_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.tts.TtsEngineSettingsFragment: void onActivityCreated(android.os.Bundle)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.keyboard.KeyboardActionListener: void onPressKey(int)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.activities.TransactionSafeActivity: void onResume()>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.bluetooth.CachedBluetoothDevice: void connectWithoutResettingTimer(boolean)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<android.bluetooth.IBluetoothA2dp$Stub$Proxy: boolean suspendSink(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.settings.bluetooth.A2dpProfile: boolean disconnect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.internal.telephony.IccSmsInterfaceManager: boolean disableCellBroadcast(int)>	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.mms.ui.ComposeMessageActivity$35: void run()>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothHandsfree$20: android.bluetooth.AtCommandResult handleTestCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.inputmethod.keyboard.KeyboardActionListener: void onCodeInput(int,int,int)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.SplitAggregateView: void <init>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.app.CropImage: void onPause()>	android.permission.NFC	android.permission.VIBRATE	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	android.permission.RECORD_AUDIO	
<android.view.IApplicationToken$Stub: void windowsVisible()>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<android.bluetooth.BluetoothHeadset: boolean acceptIncomingConnect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.calendar.agenda.AgendaWindowAdapter: boolean queueQuery(int,int,android.text.format.Time,java.lang.String,int,long)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.mms.ui.ConversationListAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.vcard.SelectAccountActivity: void onStart()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.latin.WhitelistDictionary: void blockingReloadDictionaryIfRequired()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.net.IConnectivityManager: int startUsingNetworkFeature(int,java.lang.String,android.os.IBinder)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<android.bluetooth.IBluetoothA2dp$Stub$Proxy: boolean setPriority(android.bluetooth.BluetoothDevice,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	
<android.webkit.GeolocationService: boolean start()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.server.location.LocationBasedCountryDetector$2: void run()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.contacts.detail.ContactDetailFragment: void showEmptyState()>	android.permission.READ_PHONE_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothHandsfree$27: android.bluetooth.AtCommandResult handleReadCommand()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.phone.OutgoingCallBroadcaster: void processIntent(android.content.Intent)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WRITE_SETTINGS	android.permission.PROCESS_OUTGOING_CALLS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<android.server.BluetoothAdapterStateMachine: void finishSwitchingOff()>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.PhoneWindowManager$19: void run()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.browser.UI: boolean onBackKey()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.phone.OtaUtils: void onOtaProvisionStatusChanged(android.os.AsyncResult)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.server.ConnectivityService: int stopUsingNetworkFeature(int,java.lang.String)>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.browser.provider.BrowserProvider2: int updateInTransaction(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[],boolean)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.settings.bluetooth.BluetoothPairingDialog: void createDisplayPasskeyOrPinDialog(com.android.settings.bluetooth.CachedBluetoothDeviceManager)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.settings.ProxySelector: boolean saveToDb()>	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	
<com.android.mms.data.WorkingMessage: void updateSendStats(com.android.mms.data.Conversation)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.model.EntityModifier: void parseStructuredNameExtra(android.content.Context,com.android.contacts.model.AccountType,com.android.contacts.model.EntityDelta,android.os.Bundle)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.settings.tts.TextToSpeechSettings: void onPause()>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.KeyguardViewManager: void onScreenTurnedOn(com.android.internal.policy.impl.KeyguardViewManager$ShowListener)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.settings.bluetooth.DockService: void processMessage(android.os.Message)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.WhitelistDictionary: void loadDictionaryAsync()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.settings.bluetooth.LocalBluetoothAdapter: void setBluetoothEnabled(boolean)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.phone.CallCard: void displayMainCallStatus(com.android.internal.telephony.CallManager,com.android.internal.telephony.Call)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.gallery3d.app.PhotoDataAdapter$ReloadTask: void run()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.settings.bluetooth.BluetoothDiscoverableEnabler: void setDiscoverableTimeout(int)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.gallery3d.ui.CropView: void removeAllComponents()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.internal.telephony.MccTable: void setSystemLocale(android.content.Context,java.lang.String,java.lang.String)>	android.permission.CHANGE_CONFIGURATION	android.permission.WAKE_LOCK	
<android.filterpacks.base.GLTextureTarget: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.internal.app.IBatteryStats$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.BATTERY_STATS	android.permission.BLUETOOTH	
<com.android.contacts.editor.ContactEditorFragment: void bindPhotoHandler(com.android.contacts.editor.BaseRawContactEditorView,com.android.contacts.model.AccountType,com.android.contacts.model.EntityDeltaList)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.content.AbstractThreadedSyncAdapter$ISyncAdapterImpl: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.WRITE_SYNC_SETTINGS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.activities.DialtactsActivity: void onResume()>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.ComposeMessageActivity: void startMsgListQuery()>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.internal.policy.impl.KeyguardViewMediator: void onSimStateChanged(com.android.internal.telephony.IccCard$State)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.phone.CallNotifier: boolean ignoreAllIncomingCalls(com.android.internal.telephony.Phone)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<android.location.LocationManager: java.util.List getProviders(boolean)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.inputmethod.latin.ExpandableDictionary: void blockingReloadDictionaryIfRequired()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.settings.bluetooth.CachedBluetoothDeviceManager: com.android.settings.bluetooth.CachedBluetoothDevice addDevice(com.android.settings.bluetooth.LocalBluetoothAdapter,com.android.settings.bluetooth.LocalBluetoothProfileManager,android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.mms.util.Recycler: boolean checkForThreadsOverLimit(android.content.Context)>	android.permission.READ_SMS	android.permission.RECEIVE_SMS	
<com.android.calendar.DayView$8: void onClick(android.content.DialogInterface,int)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.inputmethod.latin.UserBinaryDictionary: void syncReloadDictionaryInternal()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.emailcommon.utility.Utility$ForEachAccount: void performAction(long)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.keyboard.SuddenJumpingTouchEventHandler$ProcessMotionEvent: boolean processMotionEvent(android.view.MotionEvent)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.settings.bluetooth.BluetoothEventManager$NameChangedHandler: void onReceive(android.content.Context,android.content.Intent,android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.KeyguardStatusViewManager: void onResume()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.contacts.detail.ContactDetailLayoutController: void showContactWithUpdates(boolean)>	android.permission.READ_PHONE_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.ComposeMessageActivity: void access$4500(com.android.mms.ui.ComposeMessageActivity,boolean)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.net.IConnectivityManager$Stub: boolean setRadio(int,boolean)>	android.permission.CHANGE_WIFI_STATE	android.permission.CHANGE_NETWORK_STATE	
<android.media.AudioManager: void startBluetoothSco()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<com.android.gallery3d.app.ManageCachePage$1: void render(com.android.gallery3d.ui.GLCanvas)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.calendar.selectcalendars.SelectVisibleCalendarsFragment: void toggleVisibility(int)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.settings.accounts.ManageAccountsSettings: void onActivityCreated(android.os.Bundle)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.server.am.ActivityManagerService: void access$700(com.android.server.am.ActivityManagerService,android.content.Intent)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.phone.BluetoothHeadsetService$6: boolean stopVoiceRecognition(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<android.filterpacks.imageproc.AlphaBlendFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.email.activity.MessageList$1: void callOnPostExecuteForTest(java.lang.Object)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<android.net.wifi.WifiWatchdogStateMachine$RssiMonitoringState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<android.filterpacks.videosrc.MediaSource: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.vcard.VCardEntry$EmailData: void constructInsertOperation(java.util.List,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.ContactBrowseListFragment: void setFilter(com.android.contacts.list.ContactListFilter)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.ManageSimMessages: void deleteFromSim(android.database.Cursor)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<android.server.BluetoothService: void setBluetoothTethering(boolean)>	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.browser.AddBookmarkPage: android.net.Uri getUriForFolder(long)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.providers.telephony.SmsProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.phone.PhoneUtils: boolean handleHeadsetHook(com.android.internal.telephony.Phone,android.view.KeyEvent)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<android.app.IActivityManager: void startRunning(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WRITE_SETTINGS	
<com.android.browser.NavTabScroller$OnLayoutListener: void onLayout(int,int,int,int)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.mms.transaction.MessageStatusService: void onHandleIntent(android.content.Intent)>	android.permission.READ_SMS	android.permission.VIBRATE	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<android.telephony.SmsManager: boolean copyMessageToIcc(byte[],byte[],int)>	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.providers.media.MediaProvider: android.os.ParcelFileDescriptor access$1200(com.android.providers.media.MediaProvider,com.android.providers.media.MediaProvider$ThumbData)>	android.permission.READ_EXTERNAL_STORAGE	android.permission.WRITE_EXTERNAL_STORAGE	
<android.bluetooth.BluetoothAdapter: boolean setName(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.phone.BluetoothHandsfree$BluetoothPhoneState: void handlePreciseCallStateChange(boolean,com.android.internal.telephony.Connection)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.settings.wifi.AdvancedWifiSettings: void onResume()>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_USER_DICTIONARY	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.settings.users.UserSettings: void onResume()>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_USER_DICTIONARY	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.editor.ContactEditorFragment: void access$2300(com.android.contacts.editor.ContactEditorFragment,long,android.graphics.Bitmap,java.lang.String)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.internal.telephony.DataConnection$DcDisconnectionErrorCreatingConnection: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.gallery3d.gadget.MediaSetSource: android.graphics.Bitmap getImage(int)>	android.permission.NFC	android.permission.VIBRATE	android.permission.INTERNET	android.permission.SET_WALLPAPER	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.providers.userdictionary.UserDictionaryProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>	android.permission.READ_USER_DICTIONARY	android.permission.WRITE_USER_DICTIONARY	
<android.content.IContentService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.WRITE_SYNC_SETTINGS	android.permission.READ_SYNC_STATS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.ui.GLView: void removeOneComponent(com.android.gallery3d.ui.GLView)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.server.am.ActivityManagerService: void stopServiceLocked(com.android.server.am.ServiceRecord)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.contacts.list.CustomContactListFilterActivity: void doSaveAction()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.sip.SipEditor: void saveAndRegisterProfile(android.net.sip.SipProfile)>	android.permission.USE_SIP	android.permission.WAKE_LOCK	
<android.server.BluetoothService: boolean connectPanDevice(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.internal.telephony.cdma.CDMAPhone: void setPropertiesByCarrier()>	android.permission.CHANGE_WIFI_STATE	android.permission.WRITE_SETTINGS	android.permission.CHANGE_CONFIGURATION	
<com.android.contacts.list.ContactListFilterController: void checkFilterValidity(boolean)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.data.LocalAlbumSet: long reload()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<android.bluetooth.BluetoothDeviceProfileState$IncomingHandsfree: void enter()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.settings.bluetooth.BluetoothSettings: void onPause()>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.settings.bluetooth.LocalBluetoothAdapter: int getBluetoothState()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.camera.Camera: void gotoGallery()>	android.permission.NFC	android.permission.VIBRATE	
<com.android.internal.telephony.DataConnection$DcActivatingState: void enter()>	android.permission.CHANGE_WIFI_STATE	android.permission.GET_TASKS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.server.connectivity.Tethering$TetherMasterSM$SetDnsForwardersErrorState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.contacts.activities.DialtactsActivity$7: boolean onQueryTextChange(java.lang.String)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.JoinContactListAdapter: android.net.Uri getFirstContactUri()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.SlideEditorActivity: void onCreate(android.os.Bundle)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.WAKE_LOCK	
<com.android.email.EmailAddressAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.model.AccountTypeManagerImpl: void onAccountsUpdated(android.accounts.Account[])>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.content.AbstractThreadedSyncAdapter$ISyncAdapterImpl: void startSync(android.content.ISyncContext,java.lang.String,android.accounts.Account,android.os.Bundle)>	android.permission.WRITE_SYNC_SETTINGS	android.permission.READ_SYNC_SETTINGS	
<com.android.vcard.VCardParser: void parse(java.io.InputStream)>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.media.effect.effects.DuotoneEffect: void apply(int,int,int,int)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.development.AccountsTester$GetAndInvalidateAuthTokenCallback: void run(android.accounts.AccountManagerFuture)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	
<com.android.settings.DevelopmentSettings: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.systemui.statusbar.tablet.TabletStatusBar: android.view.View makeStatusBarView()>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.browser.TabControl: com.android.browser.Tab createNewTab(android.os.Bundle,boolean)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.mms.ui.ComposeMessageActivity$RecipientsMenuClickListener: boolean onMenuItemClick(android.view.MenuItem)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.activities.PhotoSelectionActivity$PhotoHandler$PhotoListener: void onUseAsPrimaryChosen()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.util.IState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.settings.accounts.SyncSettings: void onSyncStateUpdated()>	android.permission.READ_SYNC_STATS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothHandsfree$24: android.bluetooth.AtCommandResult handleReadCommand()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<android.accounts.AccountManagerService: void checkManageAccountsOrUseCredentialsPermissions()>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	
<com.android.internal.policy.impl.KeyguardViewBase: boolean dispatchKeyEvent(android.view.KeyEvent)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.contacts.list.PhoneNumberPickerFragment: void onClose()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.policy.impl.SimPukUnlockScreen: void <init>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.internal.app.LocalePicker: void updateLocale(java.util.Locale)>	android.permission.CHANGE_CONFIGURATION	android.permission.WAKE_LOCK	
<com.android.gallery3d.app.SlideshowPage$1: void render(com.android.gallery3d.ui.GLCanvas)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.gallery3d.app.AlbumSetPage: void pickAlbum(int)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary: void asyncReloadDictionaryIfRequired()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.group.GroupBrowseListFragment: void bindGroupList()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.TetherSettings: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.browser.PhoneUi: boolean onBackKey()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.nfc.INfcAdapter$Stub: boolean enableNdefPush()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.BLUETOOTH	
<com.android.calendar.event.EditEventFragment: void saveReminders()>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.settings.bluetooth.A2dpProfile: boolean connect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void pollStateDone()>	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	android.permission.SET_TIME_ZONE	
<com.android.mms.data.WorkingMessage: void access$1500(com.android.mms.data.WorkingMessage,com.android.mms.data.Conversation,java.lang.String)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.contacts.list.EmailAddressPickerFragment: void finish()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.ui.EdgeView: boolean onTouch(android.view.MotionEvent)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.gallery3d.ui.ScrollBarView: boolean onTouch(android.view.MotionEvent)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.emailcommon.service.IAccountService$Stub$Proxy: void reconcileAccounts(java.lang.String,java.lang.String)>	android.permission.MANAGE_ACCOUNTS	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.server.net.NetworkStatsService: void updateIfaces()>	android.permission.ACCESS_WIFI_STATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<com.android.phone.sip.SipSettings$7: void run()>	android.permission.USE_SIP	android.permission.WAKE_LOCK	
<com.android.gallery3d.ui.ScrollBarView: void removeAllComponents()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.list.ContactBrowseListFragment: void viewContact(android.net.Uri)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.group.GroupDetailFragment: void bindGroupMetaData(android.database.Cursor)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.NavScreen: void access$100(com.android.browser.NavScreen,com.android.browser.Tab)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.email.activity.UIControllerTwoPane$RefreshTask: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.bluetooth.BluetoothHeadset: boolean connect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.internal.telephony.PhoneFactory: com.android.internal.telephony.sip.SipPhone makeSipPhone(java.lang.String)>	android.permission.CHANGE_WIFI_STATE	android.permission.WRITE_SETTINGS	android.permission.CHANGE_CONFIGURATION	
<com.android.phone.CallNotifier: void showMissedCallNotification(com.android.internal.telephony.Connection,long)>	android.permission.VIBRATE	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	
<com.android.email.activity.MessageListFragment: void onSendPendingMessages()>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothHeadsetService: void adjustOtherHeadsetPriorities(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<android.net.INetworkPolicyManager$Stub: boolean isNetworkMetered(android.net.NetworkState)>	android.permission.ACCESS_WIFI_STATE	android.permission.READ_PHONE_STATE	
<com.android.server.am.ActivityManagerService: boolean sendPendingBroadcastsLocked(com.android.server.am.ProcessRecord)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.phone.BluetoothHandsfree$5: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.mms.transaction.MessagingNotification$3: void onPostExecute(java.lang.Integer)>	android.permission.READ_SMS	android.permission.VIBRATE	
<com.android.server.connectivity.Tethering$TetherMasterSM$SetIpForwardingEnabledErrorState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.phone.BluetoothHandsfree$25: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void onMaxPendingMessagesReached()>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.phone.PhoneInterfaceManager: java.util.List getNeighboringCellInfo()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.server.connectivity.Vpn$LegacyVpnRunner: void run()>	android.permission.VIBRATE	android.permission.BROADCAST_STICKY	
<com.android.email.service.PopImapSyncAdapterService: void access$000(android.content.Context,android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothHandsfree$5: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.internal.widget.SlidingTab: void vibrate(long)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	
<com.android.bluetooth.opp.BluetoothOppService: void access$2200(com.android.bluetooth.opp.BluetoothOppService,android.database.Cursor,int,boolean)>	android.permission.BLUETOOTH_ADMIN	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.exchange.ExchangeService$1: void syncMailboxListStatus(long,int,int)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<android.content.SyncManager$1: void onReceive(android.content.Context,android.content.Intent)>	android.permission.VIBRATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<com.android.internal.widget.RotarySelector: void vibrate(long)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	
<com.android.contacts.editor.LabeledEditorView: void onFieldChanged(java.lang.String,java.lang.String)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.nfc.NfcService$NfcAdapterService: void dispatch(android.nfc.Tag)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.PhoneWindowManager: void showGlobalActionsDialog()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.contacts.editor.AggregationSuggestionEngine: android.net.Uri buildAggregationSuggestionUri(com.android.contacts.model.EntityDelta$ValuesDelta)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.calendar.event.AttendeesView: void addOneAttendee(com.android.calendar.CalendarEventModel$Attendee)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.bluetooth.IBluetooth: boolean disconnectPanDevice(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<android.bluetooth.IBluetooth: void setBluetoothTethering(boolean)>	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.phone.PhoneApp: void orientationChanged(int)>	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.phone.BluetoothHandsfree$SignalScoCloseThread: void run()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<android.bluetooth.IBluetoothHeadset$Stub: boolean disconnect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.contacts.list.ContactListFilterControllerImpl: void notifyContactListFilterChanged()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.email.activity.MessageOrderManager$LoadMessageListTask: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.transaction.Transaction: byte[] sendPdu(byte[])>	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	
<com.android.inputmethod.latin.ExpandableBinaryDictionary: void getWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.content.SyncManager: void onUserRemoved(android.content.Intent)>	android.permission.VIBRATE	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.inputmethod.latin.LatinIME: void handleCharacterWhileInBatchEdit(int,int,int,int,android.view.inputmethod.InputConnection)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.gallery3d.app.AlbumSetDataLoader: java.lang.Object access$1900(com.android.gallery3d.app.AlbumSetDataLoader,java.util.concurrent.Callable)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.browser.UI: void showWeb(boolean)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.contacts.calllog.CallLogFragment: void setMenuVisibility(boolean)>	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WRITE_CALL_LOG	android.permission.READ_CALL_LOG	
<android.server.BluetoothService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.settings.bluetooth.BluetoothDevicePreference: void onDeviceAttributesChanged()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.contacts.activities.PeopleActivity: void onSelectedTabChanged()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.test.FragmentTestActivity: void onCreate(android.os.Bundle)>	android.permission.NFC	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.am.ActivityManagerService: void cleanUpApplicationRecordLocked(com.android.server.am.ProcessRecord,boolean,boolean,int)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.mms.ui.ComposeMessageActivity: int access$3900(com.android.mms.ui.ComposeMessageActivity,long,boolean)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.internal.policy.impl.KeyguardUpdateMonitor: void access$300(com.android.internal.policy.impl.KeyguardUpdateMonitor,com.android.internal.policy.impl.KeyguardUpdateMonitor$SimArgs)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.contacts.list.ContactEntryListFragment: void onActivityResult(int,int,android.content.Intent)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.location.CountryDetectorBase: void setCountryListener(android.location.CountryListener)>	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	
<android.net.sip.SipAudioCall: void transferToNewSession()>	android.permission.ACCESS_WIFI_STATE	android.permission.WAKE_LOCK	
<com.android.browser.DownloadTouchIcon: java.lang.Void doInBackground(java.lang.String[])>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.browser.PieControl$1: void onLayout(int,int,boolean)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.bluetooth.BluetoothPan: void setBluetoothTethering(boolean)>	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.email.service.AccountService$1: void reconcileAccounts(java.lang.String,java.lang.String)>	android.permission.MANAGE_ACCOUNTS	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.server.ConnectivityService: void systemReady()>	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	
<com.android.server.connectivity.Tethering$TetherInterfaceSM$InitialState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<android.telephony.gsm.SmsManager: boolean updateMessageOnSim(int,int,byte[])>	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.providers.contacts.GlobalSearchSupport: android.database.Cursor handleSearchSuggestionsQuery(android.database.sqlite.SQLiteDatabase,android.net.Uri,java.lang.String[],java.lang.String)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.widget.SettingsAppWidgetProvider$WifiStateTracker$1: java.lang.Void doInBackground(java.lang.Void[])>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	
<com.android.server.wm.WindowManagerService$2: void onReceive(android.content.Context,android.content.Intent)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.inputmethod.latin.ExpandableDictionary: void getWords(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback,com.android.inputmethod.keyboard.ProximityInfo)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.activities.ConfirmAddDetailActivity$QueryEntitiesTask: com.android.contacts.model.EntityDeltaList doInBackground(android.content.Intent[])>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.camera.PanoramaActivity: void onPreviewTextureCopied()>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.mms.data.WorkingMessage: android.net.Uri saveAsMms(boolean)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.phone.OtaUtils: void otaShowProperScreen()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.browser.TabControl: void removeParentChildRelationShips()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.contacts.calllog.CallLogAdapter: void updateCallLogContactInfoCache(java.lang.String,java.lang.String,com.android.contacts.calllog.ContactInfo,com.android.contacts.calllog.ContactInfo)>	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WRITE_CALL_LOG	
<com.android.providers.calendar.CalendarProviderIntentService: void onHandleIntent(android.content.Intent)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	android.permission.WAKE_LOCK	
<android.net.wifi.p2p.WifiP2pManager: android.net.wifi.p2p.WifiP2pManager$Channel initialize(android.content.Context,android.os.Looper,android.net.wifi.p2p.WifiP2pManager$ChannelListener)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	
<com.android.camera.Camera: void onConfigurationChanged(android.content.res.Configuration)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.browser.AddBookmarkPage$UpdateBookmarkTask: java.lang.Object doInBackground(java.lang.Object[])>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.net.wifi.IWifiManager$Stub$Proxy: android.os.Messenger getWifiStateMachineMessenger()>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	
<com.android.contacts.detail.ContactDetailFragment$ViewAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.providers.contacts.GlobalSearchSupport: android.database.Cursor addSearchSuggestionsBasedOnFilter(android.database.MatrixCursor,android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.wifi.WifiSettings: void onCreate(android.os.Bundle)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.READ_PHONE_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.contacts.list.LegacyContactListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.content.SyncManager$3: void onReceive(android.content.Context,android.content.Intent)>	android.permission.VIBRATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<com.android.internal.telephony.IccRecords: void onAllRecordsLoaded()>	android.permission.BROADCAST_STICKY	android.permission.CHANGE_CONFIGURATION	
<com.android.contacts.list.DefaultContactBrowseListFragment: void setSearchMode(boolean)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.calendar.AllInOneActivity: void onTabSelected(android.app.ActionBar$Tab,android.app.FragmentTransaction)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<android.bluetooth.BluetoothA2dp: boolean isA2dpPlaying(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.phone.AccelerometerListener: void onSensorEvent(double,double,double)>	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.server.am.ActivityManagerService$7: void onReceive(android.content.Context,android.content.Intent)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.nfc.snep.SnepServer: void start()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.BLUETOOTH	
<com.android.email.Controller$7: void run()>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.PostalAddressPickerFragment: void onLoadFinished(android.content.Loader,android.database.Cursor)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.email.activity.MessageCompose$SendOrSaveMessageTask: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.DevelopmentSettings: void onClick(android.content.DialogInterface,int)>	android.permission.READ_EXTERNAL_STORAGE	android.permission.WRITE_SETTINGS	
<android.filterpacks.imageproc.BlendFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.vcard.VCardParserImpl_V21: void parseItems()>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void launchMultiplePhonePicker()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.location.ILocationManager: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_LOCATION_EXTRA_COMMANDS	
<com.android.server.PowerManagerService$10: void run()>	android.permission.VIBRATE	android.permission.MOUNT_UNMOUNT_FILESYSTEMS	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<android.net.wifi.WifiWatchdogStateMachine$NotConnectedState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.google.android.mms.util.PduCache: boolean put(android.net.Uri,com.google.android.mms.util.PduCacheEntry)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.internal.policy.impl.KeyguardViewMediator: void showLocked()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.settings.wifi.WifiSettingsForSetupWizardXL: void onClick(android.view.View)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	
<com.android.mms.ui.QuickContactDivot: void assignContactFromEmail(java.lang.String,boolean)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.settings.accounts.AccountSyncSettings: void onResume()>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_USER_DICTIONARY	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.server.am.ActivityStack: void stopIfSleepingLocked()>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<android.accounts.AccountManager$AmsTask: void doWork()>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.phone.InCallScreen: void onClick(android.view.View)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.browser.DataController$DataControllerHandler: void doQueryBookmarkStatus(java.lang.String,java.lang.Object)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.calendar.selectcalendars.SelectCalendarsSyncFragment: void onPause()>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.camera.VideoCamera: void initializeRecorder()>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.mms.util.DownloadManager: void markState(android.net.Uri,int)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.phone.BluetoothHeadsetService$6: boolean acceptIncomingConnect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.email.service.MailService$4: void run()>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.ComposeMessageActivity: boolean access$700(com.android.mms.ui.ComposeMessageActivity,com.android.mms.ui.MessageItem)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.server.net.NetworkPolicyManagerService: void ensureActiveMobilePolicyLocked()>	android.permission.ACCESS_WIFI_STATE	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	
<android.bluetooth.IBluetooth$Stub$Proxy: boolean setInputDevicePriority(android.bluetooth.BluetoothDevice,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	
<android.provider.CallLog$Calls: java.lang.String getLastOutgoingCall(android.content.Context)>	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.server.pm.PackageManagerService: void installPackageLI(com.android.server.pm.PackageManagerService$InstallArgs,boolean,com.android.server.pm.PackageManagerService$PackageInstalledInfo)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.internal.telephony.cdma.RuimSmsInterfaceManager: boolean updateMessageOnIccEf(int,int,byte[])>	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.WAKE_LOCK	
<com.android.contacts.activities.TransactionSafeActivity: boolean onOptionsItemSelected(android.view.MenuItem)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.telephony.gsm.GsmDataConnectionTracker: void onDataSetupComplete(android.os.AsyncResult)>	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	
<com.android.phone.InCallScreen: void onOpenCloseDialpad()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.phone.CallNotifier: void sendCdmaCallWaitingReject()>	android.permission.VIBRATE	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	
<com.android.internal.widget.WaveView: void tryTransitionToStartAttemptState(android.view.MotionEvent)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<android.bluetooth.IBluetoothHeadset: boolean stopScoUsingVirtualVoiceCall(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.browser.BaseUi: boolean onOptionsItemSelected(android.view.MenuItem)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.inputmethod.latin.LatinIME: void updateBigramPredictions()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.browser.UiController: com.android.browser.Tab openTab(java.lang.String,boolean,boolean,boolean)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.net.DhcpStateMachine$WaitBeforeStartState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<android.bluetooth.BluetoothA2dp: boolean suspendSink(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.list.PhoneFavoriteFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.app.ActivityManager: void killBackgroundProcesses(java.lang.String)>	android.permission.KILL_BACKGROUND_PROCESSES	android.permission.RESTART_PACKAGES	
<com.android.mms.transaction.SendTransaction: byte[] sendPdu(long,byte[])>	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	
<android.bluetooth.BluetoothHeadset: boolean disconnect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void onNewIntent(android.content.Intent)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.READ_SYNC_SETTINGS	
<android.server.BluetoothService: boolean setInputDevicePriority(android.bluetooth.BluetoothDevice,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	
<com.android.server.am.ActivityManagerService$9$1: void run()>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<android.server.BluetoothEventLoop: void onRequestPasskeyConfirmation(java.lang.String,int,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.contacts.editor.PhotoActionPopup$Listener: void onUseAsPrimaryChosen()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.vcard.VCardParserImpl_V21: void parse(java.io.InputStream)>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.bluetooth.DeviceProfilesSettings: void unpairDevice()>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.server.net.NetworkPolicyManagerService: void performSnooze(android.net.NetworkTemplate,int)>	android.permission.ACCESS_WIFI_STATE	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.server.am.ActivityStack: void completePauseLocked()>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.vcard.VCardParser_V30: void parseOne(java.io.InputStream)>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.PostalAddressListAdapter: android.net.Uri getContactUri(int,android.database.Cursor,int,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.camera.ui.EffectSettingPopup: void onClick(android.view.View)>	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.RECORD_AUDIO	
<com.android.inputmethod.latin.AutoCorrection: boolean isValidWord(java.util.concurrent.ConcurrentHashMap,java.lang.CharSequence,boolean)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.browser.NavigationBarBase: void onAction(java.lang.String,java.lang.String,java.lang.String)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.phone.CallNotifier: void <init>	android.permission.READ_PHONE_STATE	android.permission.ACCESS_COARSE_LOCATION	
<com.android.settings.bluetooth.CachedBluetoothDeviceManager: void onUuidChanged(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory: void onCreate()>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.browser.NavScreen$1: void onRemovePosition(int)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.inputmethod.latin.UserDictionary: void <init>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.inputmethod.latin.SynchronouslyLoadedContactsDictionary: boolean reloadDictionaryIfRequired()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.calendar.EventInfoFragment: void access$1900(com.android.calendar.EventInfoFragment,android.view.View)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.phone.BluetoothHandsfree$21: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.contacts.ContactsApplication$DelayedInitializer: java.lang.Void doInBackground(java.lang.Void[])>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.nfc.NfcService$NfcServiceHandler: boolean llcpActivated(com.android.nfc.DeviceHost$NfcDepEndpoint)>	android.permission.GET_TASKS	android.permission.VIBRATE	
<com.android.bluetooth.pbap.BluetoothPbapService: void access$500(com.android.bluetooth.pbap.BluetoothPbapService)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	
<com.android.gallery3d.ui.DownUpDetector: void setState(boolean,android.view.MotionEvent)>	android.permission.NFC	android.permission.VIBRATE	
<android.accounts.IAccountManager: void invalidateAuthToken(java.lang.String,java.lang.String)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	
<com.android.gallery3d.app.CropImage: void onResume()>	android.permission.NFC	android.permission.VIBRATE	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	android.permission.RECORD_AUDIO	
<android.net.sip.ISipService$Stub$Proxy: void open3(android.net.sip.SipProfile,android.app.PendingIntent,android.net.sip.ISipSessionListener)>	android.permission.USE_SIP	android.permission.WAKE_LOCK	
<com.android.server.DockObserver: void systemReady()>	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	
<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.gallery3d.data.LocationClustering: java.lang.String generateName(java.util.ArrayList,com.android.gallery3d.util.ReverseGeocoder)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.voicedialer.VoiceDialerActivity$3: void run()>	android.permission.VIBRATE	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<android.bluetooth.IBluetoothHeadset: boolean disconnectHeadsetInternal(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.ExpandableDictionary: void loadDictionary()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.browser.NavScreen: boolean onMenuItemClick(android.view.MenuItem)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.phone.CallFeaturesSetting: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	
<com.android.phone.BluetoothHandsfree$10: android.bluetooth.AtCommandResult handleSetCommand(java.lang.Object[])>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.emailcommon.service.EmailServiceProxy$12: void run()>	android.permission.READ_CALENDAR	android.permission.WAKE_LOCK	
<com.android.inputmethod.keyboard.PointerTracker: void callListenerOnCodeInput(com.android.inputmethod.keyboard.Key,int,int,int)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.view.IWindowManager: void setForcedDisplaySize(int,int)>	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.gallery3d.app.Gallery: void onCreate(android.os.Bundle)>	android.permission.NFC	android.permission.VIBRATE	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	android.permission.RECORD_AUDIO	
<android.bluetooth.IBluetoothA2dp$Stub: boolean disconnect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.server.ConnectivityService: int stopUsingNetworkFeature(com.android.server.ConnectivityService$FeatureUser,boolean)>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.server.am.ActivityManagerService: void goingToSleep()>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.exchange.ExchangeService: void startManualSync(long,int,com.android.exchange.Request)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.keyboard.internal.KeyboardState: void onPressShift()>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.editor.ContactEditorFragment$3$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.AccountsChangedReceiver: void onReceive(android.content.Context,android.content.Intent)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.browser.PieControl: void access$000(com.android.browser.PieControl)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.browser.AddBookmarkPage: void completeOrCancelFolderNaming(boolean)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.filterpacks.base.RetargetFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.contacts.list.EmailAddressPickerFragment: void setSearchMode(boolean)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.policy.impl.SimUnlockScreen: void onResume()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.calendar.agenda.AgendaListView$2: void run()>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.mms.transaction.NotificationTransaction: byte[] getPdu(java.lang.String)>	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	
<com.android.inputmethod.latin.SynchronouslyLoadedContactsDictionary: void loadDictionary()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.detail.ContactDetailDisplayUtils$StreamPhotoTag: android.net.Uri getStreamItemPhotoUri()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.SimContacts: void importOneSimContact(int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothHandsfree$29: android.bluetooth.AtCommandResult handleReadCommand()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.calendar.AllInOneActivity: void handleEvent(com.android.calendar.CalendarController$EventInfo)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.contacts.editor.ContactEditorFragment: boolean doJoinContactAction()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.app.AbstractGalleryActivity: void onBackPressed()>	android.permission.NFC	android.permission.VIBRATE	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	android.permission.RECORD_AUDIO	
<com.android.browser.NavigationBarBase: void onClick(android.view.View)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.internal.policy.impl.PasswordUnlockScreen: void verifyPasswordAndUnlock()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.internal.policy.impl.AccountUnlockScreen: void asyncCheckPassword()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.mms.util.ThumbnailManager: com.android.mms.util.ItemLoadedFuture getVideoThumbnail(android.net.Uri,com.android.mms.util.ItemLoadedCallback)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.Controller: void closeCurrentTab(boolean)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.settings.bluetooth.DevicePickerFragment: void onBluetoothStateChanged(int)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.browser.AddBookmarkPage: void onRootFolderFound(long)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.browser.SnapshotTab: void removeFromTree()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.email.MessagingListener: void loadAttachmentStarted(long,long,long,boolean)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.imageproc.AutoFixFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.camera.Camera$4: void run()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.internal.telephony.CallerInfo: com.android.internal.telephony.CallerInfo getCallerInfo(android.content.Context,java.lang.String)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	
<com.android.inputmethod.keyboard.LatinKeyboardView: void invokeCodeInput(int)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.activities.ContactEditorActivity: void onBackPressed()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.transaction.MessagingNotification: void notifyDownloadFailed(android.content.Context,long)>	android.permission.READ_SMS	android.permission.VIBRATE	
<com.android.gallery3d.app.PhotoPage: void onPause()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.internal.policy.impl.PasswordUnlockScreen: void <init>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.gallery3d.app.AlbumPage: void onPause()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.settings.Settings$PowerUsageSummaryActivity: void onResume()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.settings.bluetooth.DockService$5: void onClick(android.content.DialogInterface,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.settings.DevelopmentSettings: void writeAppProcessLimitOptions(java.lang.Object)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.email.Controller: void serviceCheckMail(long,long,long)>	android.permission.READ_PHONE_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.editor.ContactEditorFragment: void bindEditorsForExistingContact(com.android.contacts.ContactLoader$Result)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.HistoryItem: void onCheckedChanged(android.widget.CompoundButton,boolean)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void access$5800(com.android.mms.ui.ComposeMessageActivity,java.lang.String,android.net.Uri,boolean)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.app.ManageCachePage: void onResume()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.settings.fuelgauge.PowerUsageSummary: void refreshStats()>	android.permission.BATTERY_STATS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.gallery3d.app.ManageCachePage: void resume()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.browser.Tab$3: void onRequestFocus(android.webkit.WebView)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.emailcommon.utility.EmailAsyncTask$1: java.lang.Object callDoInBackgroundForTest(java.lang.Object[])>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.data.Contact$ContactsCache$1: void run()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.email.Controller$ControllerService$1: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.VIBRATE	android.permission.READ_CALENDAR	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.Bookmarks: void removeFromBookmarks(android.content.Context,android.content.ContentResolver,java.lang.String,java.lang.String)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.server.BluetoothEventLoop: void onCreatePairedDeviceResult(java.lang.String,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.gallery3d.app.SlideshowDataAdapter: com.android.gallery3d.data.MediaItem loadItem()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.phone.BluetoothHandsfree$22: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.providers.contacts.ContactsProvider2: void cleanupPhotoStore()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.net.wifi.WifiStateMachine$ScanModeState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.browser.Controller: android.os.Bundle createSaveState()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.inputmethod.keyboard.KeyboardActionListener$Adapter: void onPressKey(int)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.calllog.CallLogFragment: void callSelectedEntry()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.browser.provider.BrowserProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.contacts.editor.StructuredNameEditorView: void onTypeSelectionChange(int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.latin.ContactsBinaryDictionary: void getBigrams(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.view.IWindowManager$Stub$Proxy: void setForcedDisplaySize(int,int)>	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.contacts.list.JoinContactListFragment: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.imageproc.GrainFilter: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.net.wifi.p2p.WifiP2pService$P2pStateMachine: boolean setAndPersistDeviceName(java.lang.String)>	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	
<android.content.ISyncStatusObserver$Stub$Proxy: void onStatusChanged(int)>	android.permission.VIBRATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<com.android.internal.telephony.cdma.CdmaLteServiceStateTracker: void setAndBroadcastNetworkSetTimeZone(java.lang.String)>	android.permission.BROADCAST_STICKY	android.permission.SET_TIME_ZONE	
<com.android.contacts.activities.ActionBarAdapter: void update()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.BaseUi: void setUseQuickControls(boolean)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.media.AudioService: void setMode(int,android.os.IBinder)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<com.android.browser.AddBookmarkPage: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.mms.util.Recycler$SmsRecycler: void deleteOldMessagesByThreadId(android.content.Context,long)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.inputmethod.latin.LatinIME: void onUpdateSelection(int,int,int,int,int,int)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.settings.net.NetworkPolicyEditor$1: java.lang.Object doInBackground(java.lang.Object[])>	android.permission.ACCESS_WIFI_STATE	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.nfc.NfcService: void sendMockNdefTag(android.nfc.NdefMessage)>	android.permission.GET_TASKS	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<android.os.IVibratorService$Stub$Proxy: void vibrate(long,android.os.IBinder)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	
<com.android.internal.widget.LockPatternView$OnPatternListener: void onPatternDetected(java.util.List)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.settings.DockSettings: void onResume()>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_USER_DICTIONARY	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.CallContactActivity: void onStart()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.bluetooth.IBluetoothHeadset$Stub: boolean createIncomingConnect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.list.EmailAddressPickerFragment: void onClose()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothHandsfree$BluetoothPhoneState: void access$4300(com.android.phone.BluetoothHandsfree$BluetoothPhoneState)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.browser.ActivityController: void handleNewIntent(android.content.Intent)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.server.DeviceStorageMonitorService: void sendNotification()>	android.permission.VIBRATE	android.permission.BROADCAST_STICKY	
<com.android.contacts.editor.SelectAccountDialogFragment$Listener: void onAccountChosen(com.android.contacts.model.AccountWithDataSet,android.os.Bundle)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.providers.telephony.MmsProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.settings.widget.SettingsAppWidgetProvider$GpsStateTracker: void setImageViewResources(android.content.Context,android.widget.RemoteViews)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.gallery3d.ui.CropView: void renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.inputmethod.latin.SynchronouslyLoadedUserDictionary: boolean reloadDictionaryIfRequired()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.exchange.ExchangeService: void reloadFolderList(android.content.Context,long,boolean)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.interactions.ImportExportDialogFragment$2: void onClick(android.content.DialogInterface,int)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.Settings$InputMethodAndSubtypeEnablerActivity: void onResume()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.internal.telephony.CallerInfo: java.lang.String getCallerId(android.content.Context,java.lang.String)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	
<com.android.settings.bluetooth.DeviceListPreferenceFragment: void removeAllDevices()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.settings.bluetooth.BluetoothPairingDialog: void onCancel()>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.nfc.handover.BluetoothHeadsetHandover: void nextStepDisconnect()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.settings.bluetooth.DeviceProfilesSettings$1: void onClick(android.content.DialogInterface,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.mms.ui.MessageUtils: java.lang.String getMessageDetails(android.content.Context,android.database.Cursor,int)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.gallery3d.app.AlbumSetPage: void resume()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<android.bluetooth.IBluetoothHeadset$Stub: boolean acceptIncomingConnect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.mms.ui.MessageListItem$2: void onPduLoaded(com.android.mms.ui.MessageItem)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.CallNotifier: void onUnknownConnectionAppeared(android.os.AsyncResult)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.settings.WallpaperTypeSettings: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.mms.ui.NoConfirmationSendService: void onHandleIntent(android.content.Intent)>	android.permission.READ_SMS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.phone.BluetoothHandsfree$15: android.bluetooth.AtCommandResult handleTestCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.phone.PhoneUtils: boolean answerAndEndActive(com.android.internal.telephony.CallManager,com.android.internal.telephony.Call)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.server.LocationManagerService: boolean isAllowedProviderSafe(java.lang.String)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.gallery3d.ui.SlideshowView: boolean dispatchTouchEvent(android.view.MotionEvent,int,int,com.android.gallery3d.ui.GLView,boolean)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.server.connectivity.Tethering: void access$900(com.android.server.connectivity.Tethering)>	android.permission.VIBRATE	android.permission.BROADCAST_STICKY	android.permission.ACCESS_NETWORK_STATE	
<com.android.browser.BrowserBackupAgent: void addBookmark(com.android.browser.BrowserBackupAgent$Bookmark)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.providers.calendar.CalendarAlarmManager: void scheduleNextAlarmLocked(android.database.sqlite.SQLiteDatabase,com.android.providers.calendar.CalendarProvider2)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.settings.widget.SettingsAppWidgetProvider$SyncStateTracker: void setImageViewResources(android.content.Context,android.widget.RemoteViews)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.gallery3d.ui.GestureRecognizer$MyDownUpListener: void onUp(android.view.MotionEvent)>	android.permission.NFC	android.permission.VIBRATE	
<android.net.wifi.WifiStateMachine$DriverStartingState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.mms.ui.ComposeMessageActivity: boolean copyMedia(long)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.settings.DataUsageSummary$ConfirmDataDisableFragment$1: void onClick(android.content.DialogInterface,int)>	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.activities.ContactDetailActivity: void onAttachFragment(android.app.Fragment)>	android.permission.READ_PHONE_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothHandsfree$4: android.bluetooth.AtCommandResult handleActionCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.contacts.list.DefaultContactListAdapter: android.net.Uri getFirstContactUri()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.location.ILocationManager: void requestLocationUpdates(java.lang.String,android.location.Criteria,long,float,boolean,android.location.ILocationListener)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<android.media.effect.effects.RedEyeEffect: void apply(int,int,int,int)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.contacts.editor.ContactEditorFragment$5: android.content.Loader onCreateLoader(int,android.os.Bundle)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.Tab$4: void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)>	android.permission.VIBRATE	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.WRITE_EXTERNAL_STORAGE	android.permission.GET_ACCOUNTS	
<android.net.wifi.p2p.IWifiP2pManager$Stub$Proxy: android.os.Messenger getMessenger()>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	
<com.android.server.pm.ShutdownThread: void rebootSafeMode(android.content.Context,boolean)>	android.permission.VIBRATE	android.permission.MOUNT_UNMOUNT_FILESYSTEMS	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.server.BatteryService: void <init>	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<com.android.phone.BluetoothAtPhonebook: java.lang.String getLastDialledNumber()>	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.internal.policy.impl.PatternUnlockScreen: void onResume()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.settings.widget.SettingsAppWidgetProvider$GpsStateTracker$1: void onPostExecute(java.lang.Boolean)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.gallery3d.ui.ScrollBarView: void render(com.android.gallery3d.ui.GLCanvas)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.contacts.editor.StructuredNameEditorView: void rebuildStructuredName(com.android.contacts.model.EntityDelta$ValuesDelta)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.emailcommon.service.IEmailServiceCallback$Stub$Proxy: void syncMailboxStatus(long,int,int)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.browser.Controller$SaveSnapshotTask: java.lang.Object doInBackground(java.lang.Object[])>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.providers.downloads.DownloadInfo$Reader: void readRequestHeaders(com.android.providers.downloads.DownloadInfo)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.contacts.ContactsActivity: void onNewIntent(android.content.Intent)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.camera.SwitchAnimManager: boolean drawAnimation(com.android.gallery3d.ui.GLCanvas,int,int,int,int,com.android.camera.CameraScreenNail,com.android.gallery3d.ui.RawTexture)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.contacts.list.ContactPickerFragment: void onClose()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.latin.SynchronouslyLoadedContactsBinaryDictionary: void access$500(com.android.inputmethod.latin.ExpandableBinaryDictionary)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.vcard.VCardParser_V21: void parse(java.io.InputStream)>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.imageproc.FillLightFilter: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.internal.policy.impl.PatternUnlockScreen$UnlockPatternListener: void onPatternCellAdded(java.util.List)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<android.accounts.AccountManager: java.lang.String blockingGetAuthToken(android.accounts.Account,java.lang.String,boolean)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.phone.PhoneApp$NotificationBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>	android.permission.VIBRATE	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	
<com.android.contacts.GroupMemberLoader: void <init>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.detail.ContactDetailUpdatesFragment: com.android.contacts.model.AccountType access$000(com.android.contacts.detail.ContactDetailUpdatesFragment,com.android.contacts.util.StreamItemEntry)>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.widget.SettingsAppWidgetProvider$GpsStateTracker: int getTriState(android.content.Context)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.contacts.list.ContactBrowseListFragment: void selectFirstFoundContactAfterDelay()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.emailcommon.service.IEmailService: void sendMeetingResponse(long,int)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.email.activity.setup.AccountServerBaseFragment$4: java.lang.Void doInBackground(java.lang.Void[])>	android.permission.READ_PHONE_STATE	android.permission.WAKE_LOCK	
<com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory: android.net.Uri access$200(com.android.calendar.widget.CalendarAppWidgetService$CalendarFactory)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void access$5600(com.android.mms.ui.ComposeMessageActivity,android.net.Uri,boolean)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.calendar.AllInOneActivity: void onCreate(android.os.Bundle)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.gallery3d.ui.PhotoView: boolean onTouch(android.view.MotionEvent)>	android.permission.NFC	android.permission.VIBRATE	
<com.android.contacts.quickcontact.QuickContactActivity$5: void onLoadFinished(android.content.Loader,java.lang.Object)>	android.permission.READ_PHONE_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.LegacyPhoneNumberListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.providers.contacts.LegacyApiSupport: int updateExtensions(long,android.content.ContentValues)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.exchange.ExchangeService$1$3: void call(com.android.emailcommon.service.IEmailServiceCallback)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.CallCard: void onImageLoadComplete(int,android.graphics.drawable.Drawable,android.graphics.Bitmap,java.lang.Object)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.pm.PackageManagerService: void replaceNonSystemPackageLI(android.content.pm.PackageParser$Package,android.content.pm.PackageParser$Package,int,int,java.lang.String,com.android.server.pm.PackageManagerService$PackageInstalledInfo)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.phone.BluetoothHandsfree$15: android.bluetooth.AtCommandResult handleReadCommand()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.server.connectivity.Tethering$TetherMasterSM$TetherModeAliveState: boolean turnOffUpstreamMobileConnection()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void drawTopPanel(boolean)>	android.permission.READ_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.bluetooth.CachedBluetoothDeviceManager: void onDeviceNameUpdated(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.settings.users.UserDetailsSettings: void onResume()>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_USER_DICTIONARY	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.nfc.NfcService$EnableDisableTask: boolean enableInternal()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.BLUETOOTH	
<com.android.mms.ui.MessageUtils$3$1: void run()>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.bluetooth.BluetoothCallback: void onBluetoothStateChanged(int)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.contacts.activities.ConfirmAddDetailActivity: void startExtraInfoQuery()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.vcard.VCardParser: void parseOne(java.io.InputStream)>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.group.GroupEditorFragment: void setupEditorForAccount()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.nfc.snep.SnepServer: boolean handleRequest(com.android.nfc.snep.SnepMessenger,com.android.nfc.snep.SnepServer$Callback)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.BLUETOOTH	
<com.android.mms.ui.ComposeMessageActivityNoLockScreen: void loadMessageContent()>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.phone.CallNotifier: void showIncomingCall()>	android.permission.VIBRATE	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	
<com.android.contacts.list.OnContactBrowserActionListener: void onViewContactAction(android.net.Uri)>	android.permission.READ_PHONE_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.providers.downloads.DownloadThread: void executeDownload(com.android.providers.downloads.DownloadThread$State,android.net.http.AndroidHttpClient,org.apache.http.client.methods.HttpGet)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.test.FragmentTestActivity: void onResume()>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.bluetooth.BluetoothEventManager$Handler: void onReceive(android.content.Context,android.content.Intent,android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<android.provider.ContactsContract$ProfileSyncState: android.util.Pair getWithUri(android.content.ContentProviderClient,android.accounts.Account)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.editor.StructuredNameEditorView: void onFieldChanged(java.lang.String,java.lang.String)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.latin.ExpandableBinaryDictionary: void getBigrams(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.inputmethod.latin.ContactsBinaryDictionary: void generateBinaryDictionary()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.accounts.AccountManager$7: android.accounts.AccountManagerFuture start()>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void pollState()>	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	android.permission.SET_TIME_ZONE	android.permission.WAKE_LOCK	
<com.android.server.DockObserver: void onUEvent(android.os.UEventObserver$UEvent)>	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	
<com.android.server.input.InputManagerService: android.view.KeyEvent dispatchUnhandledKey(com.android.server.input.InputWindowHandle,android.view.KeyEvent,int)>	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.CALL_PHONE	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.inputmethod.latin.WhitelistDictionary: void getBigrams(com.android.inputmethod.latin.WordComposer,java.lang.CharSequence,com.android.inputmethod.latin.Dictionary$WordCallback)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.internal.policy.impl.KeyguardUpdateMonitor: void registerSimStateCallback(com.android.internal.policy.impl.KeyguardUpdateMonitor$SimStateCallback)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.internal.policy.impl.KeyguardScreenCallback: void reportFailedUnlockAttempt()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.gallery3d.ui.ScrollBarView: boolean dispatchTouchEvent(android.view.MotionEvent)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.server.connectivity.Tethering$TetherMasterSM$TetherMasterUtilState: boolean turnOnUpstreamMobileConnection(int)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.mms.transaction.TransactionService: void onNewIntent(android.content.Intent,int)>	android.permission.CHANGE_WIFI_STATE	android.permission.READ_SMS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SMS	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.RECEIVE_SMS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.settings.DataUsageSummary: void updateTabs()>	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	
<com.android.server.WallpaperManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.SET_WALLPAPER	android.permission.SET_WALLPAPER_HINTS	
<com.android.gallery3d.ui.ActionModeHandler: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.gallery3d.app.AlbumPage$7: void run()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.mms.transaction.ReadRecTransaction: byte[] sendPdu(byte[],java.lang.String)>	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	
<com.android.gallery3d.ui.CropView$HighlightRectangle: void renderChild(com.android.gallery3d.ui.GLCanvas,com.android.gallery3d.ui.GLView)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.mms.ui.ComposeMessageActivity$MsgListMenuClickListener: boolean onMenuItemClick(android.view.MenuItem)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.deviceinfo.UsbSettings: void onActivityCreated(android.os.Bundle)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.calendar.event.EditEventView: void onClick(android.content.DialogInterface,int)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.server.sip.SipService: void access$1700(com.android.server.sip.SipService,android.net.NetworkInfo)>	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	
<com.android.vcard.VCardParser_V40: void parse(java.io.InputStream)>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.BluetoothHandsfree$27: android.bluetooth.AtCommandResult handleBasicCommand(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.server.PowerManagerService$4: void run()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.gallery3d.ui.CropView$HighlightRectangle: void render(com.android.gallery3d.ui.GLCanvas)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.internal.policy.impl.LockScreen: void <init>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.nfc.DeviceHost$DeviceHostListener: void onLlcpLinkActivated(com.android.nfc.DeviceHost$NfcDepEndpoint)>	android.permission.GET_TASKS	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.server.UiModeManagerService: void updateConfigurationLocked(boolean)>	android.permission.CHANGE_CONFIGURATION	android.permission.WAKE_LOCK	
<com.android.browser.UI: boolean onOptionsItemSelected(android.view.MenuItem)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.email.Controller: void deleteSyncedDataSync(long)>	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	android.permission.WAKE_LOCK	
<com.android.browser.AddBookmarkPage$UpdateBookmarkTask: java.lang.Void doInBackground(android.content.ContentValues[])>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<android.server.BluetoothA2dpService: boolean setPriority(android.bluetooth.BluetoothDevice,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	
<com.android.settings.bluetooth.HidProfile: boolean disconnect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.gallery3d.gadget.LocalPhotoSource: android.graphics.Bitmap getImage(int)>	android.permission.NFC	android.permission.VIBRATE	android.permission.INTERNET	android.permission.SET_WALLPAPER	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<android.bluetooth.BluetoothDeviceProfileState$OutgoingHid: void enter()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.email.Controller: void searchMore(long)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	android.permission.READ_SYNC_SETTINGS	
<android.net.IConnectivityManager: void startLegacyVpn(com.android.internal.net.VpnConfig,java.lang.String[],java.lang.String[])>	android.permission.VIBRATE	android.permission.BROADCAST_STICKY	
<android.view.IApplicationToken: boolean keyDispatchingTimedOut()>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<android.bluetooth.BluetoothDeviceProfileState$IncomingHid: boolean processMessage(android.os.Message)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.ExpandableBinaryDictionary: void asyncReloadDictionaryIfRequired()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.server.input.InputManagerService$Callbacks: void notifyLidSwitchChanged(long,boolean)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<android.filterpacks.imageproc.NegativeFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.server.connectivity.Tethering$TetherInterfaceSM$TetheredState: void enter()>	android.permission.VIBRATE	android.permission.BROADCAST_STICKY	android.permission.ACCESS_NETWORK_STATE	
<com.android.emailcommon.service.IEmailService$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.VIBRATE	android.permission.READ_CALENDAR	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<android.net.wifi.WifiStateMachine$DriverStoppingState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<android.media.effect.effects.ColorTemperatureEffect: void apply(int,int,int,int)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.filterpacks.text.ToUpperCase: void performOpen(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.server.pm.PackageManagerService: int access$3300(com.android.server.pm.PackageManagerService,java.lang.String,boolean,boolean,int)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.voicedialer.VoiceContact: java.util.List getVoiceContacts(android.app.Activity)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.filterpacks.imageproc.ToRGBAFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.provider.Browser: void deleteHistoryTimeFrame(android.content.ContentResolver,long,long)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.settings.users.UserDetailsSettings: void onCreate(android.os.Bundle)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.READ_PHONE_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<android.provider.Contacts$People: android.net.Uri createPersonInMyContactsGroup(android.content.ContentResolver,android.content.ContentValues)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.bluetooth.IBluetooth$Stub: boolean cancelBondProcess(java.lang.String)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<android.bluetooth.IBluetoothHeadset$Stub$Proxy: boolean createIncomingConnect(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.phone.BluetoothHeadsetService: void onStart(android.content.Intent,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.mms.util.Recycler$SmsRecycler: android.database.Cursor getAllThreads(android.content.Context)>	android.permission.READ_SMS	android.permission.RECEIVE_SMS	
<com.android.contacts.model.AccountTypeManagerImpl: java.util.Map access$400(com.android.contacts.model.AccountTypeManagerImpl,android.content.Context)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.bluetooth.BluetoothDevice: boolean cancelPairingUserInput()>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.server.ConnectivityService: int startUsingNetworkFeature(int,java.lang.String,android.os.IBinder)>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.internal.telephony.DataConnection$DcDisconnectingState: void enter()>	android.permission.CHANGE_WIFI_STATE	android.permission.GET_TASKS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.settings.bluetooth.BluetoothSettings: void updateContent(int,boolean)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.vcard.VCardParser_V30: void parse(java.io.InputStream,com.android.vcard.VCardInterpreter)>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.providers.downloads.DownloadThread: void notifyDownloadCompleted(int,boolean,int,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.emailcommon.utility.EmailAsyncTask$InnerTask: java.lang.Object doInBackground(java.lang.Object[])>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.view.VolumePanel: void onVibrate()>	android.permission.VIBRATE	android.permission.WAKE_LOCK	
<android.bluetooth.BluetoothHeadset: boolean stopVoiceRecognition(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.spellcheck.AndroidSpellCheckerService$AndroidSpellCheckerSession: android.view.textservice.SuggestionsInfo onGetSuggestions(android.view.textservice.TextInfo,int)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.calendar.event.EditEventFragment$QueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.inputmethod.keyboard.PointerTracker: void processMotionEvent(int,int,int,long,com.android.inputmethod.keyboard.PointerTracker$KeyEventHandler)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.settings.bluetooth.CachedBluetoothDevice: void onUuidChanged()>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.settings.bluetooth.BluetoothEventManager$DeviceFoundHandler: void onReceive(android.content.Context,android.content.Intent,android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.server.MountService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>	android.permission.MOUNT_UNMOUNT_FILESYSTEMS	android.permission.MOUNT_FORMAT_FILESYSTEMS	
<com.android.settings.AppWidgetPickActivity: void onCreate(android.os.Bundle)>	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.BLUETOOTH	
<android.filterfw.core.AsyncRunner$AsyncRunnerTask: java.lang.Object doInBackground(java.lang.Object[])>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.server.LocationManagerService: boolean isProviderEnabled(java.lang.String)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.providers.contacts.ContactsProvider2: android.net.Uri insertInTransaction(android.net.Uri,android.content.ContentValues)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.ApplicationSettings: void onCreate(android.os.Bundle)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.READ_PHONE_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<android.view.WindowManagerPolicy: void exitKeyguardSecurely(android.view.WindowManagerPolicy$OnKeyguardExitResult)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.calendar.EventInfoFragment$11: void onClick(android.view.View)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.browser.Tab: void putInBackground()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.contacts.model.AccountTypeManagerImpl: void loadAccountsInBackground()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.editor.ContactEditorFragment: void acquireAggregationSuggestions(android.content.Context,com.android.contacts.editor.RawContactEditorView)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.app.AppBridge$Server: boolean switchWithCaptureAnimation(int)>	android.permission.NFC	android.permission.VIBRATE	
<android.location.LocationManager: void addProximityAlert(double,double,float,long,android.app.PendingIntent)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.calendar.event.AttendeesView$PresenceQueryHandler$1: void run()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.email.Controller$LegacyListener: void loadAttachmentStarted(long,long,long,boolean)>	android.permission.VIBRATE	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.app.AlbumPage: void onBackPressed()>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.activities.GroupDetailActivity: void onResume()>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.accounts.AccountSyncSettings: void onSyncStateUpdated()>	android.permission.READ_SYNC_STATS	android.permission.READ_SYNC_SETTINGS	
<com.android.server.am.ActivityManagerService: void removeConnectionLocked(com.android.server.am.ConnectionRecord,com.android.server.am.ProcessRecord,com.android.server.am.ActivityRecord)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.vcard.VCardParserImpl_V21: void parseOne(java.io.InputStream)>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.bluetooth.DevicePickerFragment: void onCreate(android.os.Bundle)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.INTERNET	android.permission.READ_PHONE_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.ExpandableBinaryDictionary: void syncReloadDictionaryInternal()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.group.SuggestedMemberListAdapter$SuggestedMemberFilter: android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.contacts.activities.PeopleActivity$ContactBrowserActionListener: void onInvalidSelection()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.inputmethod.KeyboardLayoutPickerFragment: void onResume()>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.READ_USER_DICTIONARY	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.phone.PhoneInterfaceManager: void access$100(com.android.phone.PhoneInterfaceManager)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<com.android.settings.bluetooth.CachedBluetoothDevice: void unpair()>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<com.android.inputmethod.latin.LatinIME: void onPressKey(int)>	android.permission.VIBRATE	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.gallery3d.app.AlbumPage$2: void removeOneComponent(com.android.gallery3d.ui.GLView)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture hasFeatures(android.accounts.Account,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)>	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.settings.WirelessSettings: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.providers.downloads.StorageManager$1: void run()>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.email.service.MailService$1: void run()>	android.permission.MANAGE_ACCOUNTS	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.internal.widget.multiwaveview.GlowPadView$OnTriggerListener: void onTrigger(android.view.View,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SOCIAL_STREAM	android.permission.USE_CREDENTIALS	android.permission.READ_CONTACTS	android.permission.MANAGE_ACCOUNTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	android.permission.BLUETOOTH	
<com.android.internal.telephony.cdma.CdmaServiceStateTracker: void revertToNitzTimeZone()>	android.permission.BROADCAST_STICKY	android.permission.SET_TIME_ZONE	
<com.android.bluetooth.pbap.BluetoothPbapService: void parseIntent(android.content.Intent)>	android.permission.BLUETOOTH_ADMIN	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.server.am.ActivityManagerService: android.content.Intent registerReceiver(android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String)>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<android.net.wifi.WifiStateMachine$VerifyingLinkState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.camera.VideoCamera: void setPreviewTexture()>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.mms.ui.ManageSimMessages$1: void onChange(boolean)>	android.permission.READ_SMS	android.permission.RECEIVE_SMS	
<com.android.phone.Ringer: void stopRing()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<com.android.mms.transaction.RetrieveTransaction: byte[] sendPdu(long,byte[])>	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	
<com.android.contacts.model.EntityDeltaList: android.content.ContentProviderOperation$Builder beginKeepTogether()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.telephony.IccCard: void access$200(com.android.internal.telephony.IccCard,android.os.AsyncResult)>	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	
<com.android.server.wm.WindowManagerService$PolicyThread: void run()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.BROADCAST_STICKY	android.permission.WRITE_SETTINGS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.internal.policy.impl.LockPatternKeyguardView: boolean dispatchHoverEvent(android.view.MotionEvent)>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.inputmethod.keyboard.PointerTracker: void onUpEventInternal()>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.internal.telephony.IccPhoneBookInterfaceManagerProxy: java.util.List getAdnRecordsInEf(int)>	android.permission.READ_CONTACTS	android.permission.WAKE_LOCK	
<com.android.contacts.editor.StructuredNameEditorView: void onLabelRebuilt()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.app.ManageCachePage: void setContentPane(com.android.gallery3d.ui.GLView)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.gallery3d.ui.PhotoView$ScreenNailPicture: void draw(com.android.gallery3d.ui.GLCanvas,android.graphics.Rect)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.email.activity.MessageFileViewFragment: java.io.File performAttachmentSave(com.android.email.activity.MessageViewFragmentBase$MessageViewAttachmentInfo)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	
<com.android.browser.XLargeUi: void <init>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.bluetooth.opp.BluetoothOppService: void deleteShare(int)>	android.permission.BLUETOOTH_ADMIN	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.contacts.datepicker.DatePickerDialog: void onClick(android.content.DialogInterface,int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.filterpacks.imageproc.RedEyeFilter: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<android.media.AudioService$ScoClient: void binderDied()>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.BROADCAST_STICKY	android.permission.BLUETOOTH	
<android.net.wifi.IWifiManager$Stub: android.os.Messenger getWifiStateMachineMessenger()>	android.permission.CHANGE_WIFI_STATE	android.permission.ACCESS_WIFI_STATE	
<android.location.ILocationManager$Stub$Proxy: void requestLocationUpdates(java.lang.String,android.location.Criteria,long,float,boolean,android.location.ILocationListener)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.calendar.alerts.AlertService: void processMessage(android.os.Message)>	android.permission.VIBRATE	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.contacts.test.FragmentTestActivity: void onStart()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.accounts.SyncSettings: void onAccountsUpdated(android.accounts.Account[])>	android.permission.READ_SYNC_STATS	android.permission.READ_SYNC_SETTINGS	
<android.net.wifi.WifiStateMachine$DriverLoadingState$1: void run()>	android.permission.BROADCAST_STICKY	android.permission.WAKE_LOCK	
<com.android.phone.sip.SipEditor: void deleteAndUnregisterProfile(android.net.sip.SipProfile)>	android.permission.USE_SIP	android.permission.WAKE_LOCK	
<com.android.gallery3d.ui.GLView: boolean onTouch(android.view.MotionEvent)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<android.bluetooth.IBluetoothA2dp: boolean disconnectSinkInternal(android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.contacts.editor.Editor: void onFieldChanged(java.lang.String,java.lang.String)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.phone.CallNotifier: void startIncomingCallQuery(com.android.internal.telephony.Connection)>	android.permission.VIBRATE	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.WAKE_LOCK	
<com.android.server.LocationManagerService: android.location.Location getLastKnownLocation(java.lang.String)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<com.android.mms.ui.ComposeMessageActivity: void initialize(android.os.Bundle,long)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.contacts.list.LegacyPostalAddressListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.settings.bluetooth.DeviceProfilesSettings: boolean getAutoConnect(com.android.settings.bluetooth.LocalBluetoothProfile)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.mms.data.Conversation: void access$800(android.content.Context)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.READ_CONTACTS	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	
<com.android.settings.bluetooth.BluetoothSettings: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.BLUETOOTH	
<android.location.LocationManager: android.location.LocationProvider getProvider(java.lang.String)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	
<android.net.IConnectivityManager: void setGlobalProxy(android.net.ProxyProperties)>	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	
<com.android.browser.Controller$2: void run()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.commands.am.Am: void runDisplaySize()>	android.permission.WRITE_SETTINGS	android.permission.WAKE_LOCK	
<com.android.email.Controller$1: void run()>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.ui.GLRoot$OnGLIdleListener: boolean onGLIdle(com.android.gallery3d.ui.GLCanvas,boolean)>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<com.android.contacts.list.PhoneNumberPickerFragment: void setSearchMode(boolean)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.internal.policy.impl.KeyguardViewMediator: boolean onWakeMotionWhenKeyguardShowingTq()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.phone.BluetoothHandsfree$2: android.bluetooth.AtCommandResult handleReadCommand()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.contacts.list.ContactListAdapter: android.net.Uri getFirstContactUri()>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<android.net.IConnectivityManager$Stub: void startLegacyVpn(com.android.internal.net.VpnConfig,java.lang.String[],java.lang.String[])>	android.permission.VIBRATE	android.permission.BROADCAST_STICKY	
<com.android.gallery3d.data.ClusterAlbumSet: long reload()>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.phone.BluetoothHandsfree$2: android.bluetooth.AtCommandResult handleActionCommand()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.READ_CONTACTS	android.permission.BROADCAST_STICKY	android.permission.READ_SOCIAL_STREAM	android.permission.READ_PHONE_STATE	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.WAKE_LOCK	android.permission.READ_CALL_LOG	android.permission.BLUETOOTH	
<com.android.phone.BluetoothHandsfree$26: android.bluetooth.AtCommandResult handleReadCommand()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<android.filterpacks.imageproc.ImageStitcher: void performProcess(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.settings.bluetooth.DockService: void handleUnexpectedDisconnect(android.bluetooth.BluetoothDevice,com.android.settings.bluetooth.LocalBluetoothProfile,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.CHANGE_NETWORK_STATE	android.permission.WRITE_SETTINGS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.internal.policy.impl.KeyguardViewManager: void verifyUnlock()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.phone.BluetoothHandsfree$10: android.bluetooth.AtCommandResult handleReadCommand()>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.email.service.AttachmentDownloadService$Watchdog$1: void run()>	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<com.android.gallery3d.data.Clustering: void run(com.android.gallery3d.data.MediaSet)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.camera.VideoCamera$3: void run()>	android.permission.CAMERA	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.RECORD_AUDIO	
<com.android.phone.BluetoothAtPhonebook: boolean queryPhonebook(java.lang.String,com.android.phone.BluetoothAtPhonebook$PhonebookResult)>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	com.android.voicemail.permission.ADD_VOICEMAIL	android.permission.READ_CALL_LOG	
<com.android.mms.transaction.TransactionService: void access$200(com.android.mms.transaction.TransactionService)>	android.permission.CHANGE_WIFI_STATE	android.permission.READ_SMS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SMS	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.RECEIVE_SMS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.exchange.adapter.CalendarSyncAdapter$EasCalendarSyncParser: void addParser(com.android.exchange.adapter.CalendarSyncAdapter$CalendarOperations)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.internal.policy.impl.KeyguardScreenCallback: void takeEmergencyCallAction()>	android.permission.MODIFY_AUDIO_SETTINGS	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	android.permission.WAKE_LOCK	
<com.android.contacts.group.GroupBrowseListAdapter: void <init>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_SETTINGS	
<android.bluetooth.IBluetooth: boolean setInputDevicePriority(android.bluetooth.BluetoothDevice,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	
<com.android.gallery3d.app.SlideshowDataAdapter: com.android.gallery3d.data.MediaItem access$500(com.android.gallery3d.app.SlideshowDataAdapter)>	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.vcard.VCardImportExportListener: void onImportFinished(com.android.contacts.vcard.ImportRequest,int,android.net.Uri)>	android.permission.VIBRATE	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.email.activity.setup.AccountSetupNames$2: java.lang.String doInBackground(java.lang.Void[])>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.mms.ui.ComposeMessageActivity: void editMessageItem(com.android.mms.ui.MessageItem)>	android.permission.READ_SMS	android.permission.WRITE_SMS	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.SEND_SMS	android.permission.RECEIVE_SMS	android.permission.READ_SYNC_SETTINGS	
<com.android.inputmethod.latin.AutoCorrection: java.lang.CharSequence computeAutoCorrectionWord(java.util.concurrent.ConcurrentHashMap,com.android.inputmethod.latin.WordComposer,java.util.ArrayList,java.lang.CharSequence,float,java.lang.CharSequence)>	android.permission.READ_USER_DICTIONARY	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<com.android.deskclock.AlarmKlaxon: void play(com.android.deskclock.Alarm)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	
<android.test.IsolatedContext$MockAccountManager: android.accounts.AccountManagerFuture getAuthTokenByFeatures(java.lang.String,java.lang.String,java.lang.String[],android.app.Activity,android.os.Bundle,android.os.Bundle,android.accounts.AccountManagerCallback,android.os.Handler)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.contacts.list.JoinContactListFragment: boolean isSyncActive()>	android.permission.GET_ACCOUNTS	android.permission.READ_SYNC_STATS	
<com.android.browser.DeviceAccountLogin: void handleLogin(java.lang.String,java.lang.String,java.lang.String)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.mms.ui.ComposeMessageActivity$36: void onTextChanged(java.lang.CharSequence,int,int,int)>	android.permission.READ_SMS	android.permission.WRITE_SMS	
<com.android.email.activity.MailboxListFragment$FindParentMailboxTask: void callOnPostExecuteForTest(java.lang.Object)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.READ_SYNC_SETTINGS	
<com.android.providers.downloads.DownloadThread: void transferData(com.android.providers.downloads.DownloadThread$State,com.android.providers.downloads.DownloadThread$InnerState,byte[],java.io.InputStream)>	android.permission.VIBRATE	android.permission.INTERNET	android.permission.WRITE_EXTERNAL_STORAGE	android.permission.ACCESS_NETWORK_STATE	
<android.nfc.INfcAdapter$Stub$Proxy: boolean disableNdefPush()>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.BLUETOOTH	
<android.bluetooth.BluetoothAdapter: boolean cancelDiscovery()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<android.filterpacks.text.StringLogger: void open(android.filterfw.core.FilterContext)>	android.permission.CAMERA	android.permission.WAKE_LOCK	android.permission.RECORD_AUDIO	
<com.android.server.connectivity.Tethering$TetherInterfaceSM$StartingState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.phone.sip.SipEditor: void unregisterProfile(java.lang.String)>	android.permission.USE_SIP	android.permission.WAKE_LOCK	
<com.android.internal.telephony.gsm.SIMRecords: void onRecordLoaded()>	android.permission.BROADCAST_STICKY	android.permission.CHANGE_CONFIGURATION	
<android.accounts.AccountManager$GetAuthTokenByTypeAndFeaturesTask$1: void run(android.accounts.AccountManagerFuture)>	android.permission.USE_CREDENTIALS	android.permission.MANAGE_ACCOUNTS	android.permission.GET_ACCOUNTS	
<com.android.gallery3d.app.SlideshowPage: void setContentPane(com.android.gallery3d.ui.GLView)>	android.permission.NFC	android.permission.VIBRATE	android.permission.ACCESS_FINE_LOCATION	android.permission.ACCESS_COARSE_LOCATION	android.permission.ACCESS_NETWORK_STATE	
<com.android.contacts.list.PostalAddressListAdapter: android.net.Uri getDataUri(int)>	android.permission.WRITE_SOCIAL_STREAM	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	android.permission.READ_SYNC_SETTINGS	
<com.android.camera.ActivityBase: void onPreviewTextureCopied()>	android.permission.CAMERA	android.permission.RECORD_AUDIO	
<android.server.BluetoothPanProfileHandler: void handlePanDeviceStateChange(android.bluetooth.BluetoothDevice,java.lang.String,int,int)>	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	
<android.net.INetworkPolicyManager$Stub: void setRestrictBackground(boolean)>	android.permission.VIBRATE	android.permission.READ_PHONE_STATE	
<com.android.server.am.ActivityStack: void checkReadyForSleepLocked()>	android.permission.RECEIVE_BOOT_COMPLETED	android.permission.WAKE_LOCK	
<com.android.email.Controller: void deleteAccountSync(long,android.content.Context)>	android.permission.READ_PHONE_STATE	android.permission.READ_CALENDAR	android.permission.WAKE_LOCK	
<com.android.browser.NavScreen$2: void onLayout(int,int,int,int)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.browser.UiController: com.android.browser.Tab openIncognitoTab()>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.calendar.agenda.AgendaWindowAdapter: void refresh(android.text.format.Time,long,java.lang.String,boolean,boolean)>	android.permission.READ_CALENDAR	android.permission.WRITE_CALENDAR	
<com.android.browser.Tab$3: void onCloseWindow(android.webkit.WebView)>	com.android.browser.permission.READ_HISTORY_BOOKMARKS	android.permission.INTERNET	com.android.browser.permission.WRITE_HISTORY_BOOKMARKS	android.permission.GET_ACCOUNTS	
<com.android.settings.bluetooth.LocalBluetoothAdapter: boolean syncBluetoothState()>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.mms.transaction.NotificationTransaction: void notifyObservers()>	android.permission.CHANGE_WIFI_STATE	android.permission.READ_SMS	android.permission.ACCESS_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SMS	android.permission.READ_PHONE_STATE	android.permission.CHANGE_NETWORK_STATE	android.permission.RECEIVE_SMS	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.nfc.handover.HandoverManager: android.nfc.NdefMessage tryHandoverRequest(android.nfc.NdefMessage)>	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.BLUETOOTH	
<com.android.settings.bluetooth.BluetoothEventManager$DeviceDisappearedHandler: void onReceive(android.content.Context,android.content.Intent,android.bluetooth.BluetoothDevice)>	android.permission.BLUETOOTH_ADMIN	android.permission.BLUETOOTH	
<com.android.mms.data.Contact$ContactsCache: java.util.List getContactInfoForPhoneUris(android.os.Parcelable[])>	android.permission.READ_CONTACTS	android.permission.READ_SOCIAL_STREAM	android.permission.WRITE_CONTACTS	
<android.net.wifi.WifiStateMachine$DriverFailedState: void exit()>	android.permission.CHANGE_WIFI_STATE	android.permission.BLUETOOTH_ADMIN	android.permission.BROADCAST_STICKY	android.permission.CHANGE_NETWORK_STATE	android.permission.ACCESS_NETWORK_STATE	android.permission.WAKE_LOCK	android.permission.BLUETOOTH	
<com.android.gallery3d.ui.DownUpDetector$DownUpListener: void onUp(android.view.MotionEvent)>	android.permission.NFC	android.permission.VIBRATE	
<com.android.nfc.DeviceHost$DeviceHostListener: void onRemoteFieldDeactivated()>	android.permission.GET_TASKS	android.permission.BLUETOOTH_ADMIN	android.permission.VIBRATE	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.exchange.EasAccountService: int parsePingResult(java.io.InputStream,android.content.ContentResolver,java.util.HashMap)>	android.permission.VIBRATE	android.permission.WAKE_LOCK	android.permission.READ_SYNC_SETTINGS	
<android.nfc.NfcAdapter: void dispatch(android.nfc.Tag)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	
<com.android.settings.bluetooth.BluetoothPairingDialog: void onClick(android.content.DialogInterface,int)>	android.permission.BLUETOOTH_ADMIN	android.permission.WRITE_SETTINGS	android.permission.BLUETOOTH	